<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[临风]]></title>
  <subtitle><![CDATA[把日子过成一个一个的明天]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2015-10-06T12:18:03.502Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[xuelinf]]></name>
    <email><![CDATA[xuelinf@qq.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Web开发规范]]></title>
    <link href="http://yoursite.com/2015/10/06/Web%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/"/>
    <id>http://yoursite.com/2015/10/06/Web开发规范/</id>
    <published>2015-10-06T12:12:43.000Z</published>
    <updated>2015-10-06T12:17:30.000Z</updated>
    <content type="html"><![CDATA[<p>from: <a href="">Github</a></p>
<h2 id="通用规范">通用规范</h2>
<ul>
<li>使用空格代替TAB，windows和Linux的Tab占位不同。</li>
<li>CSS样式属性和 JavaScript代码后边添加分号<code>;</code> ，方便断句，利于压缩。</li>
<li>文件内容编码均统一为UTF-8。</li>
<li>CSS、JAVASCRIPT中的非注释类中文字符须转换成unicode编码使用，以避免编码错误时乱码显示。</li>
</ul>
<h2 id="文件规范">文件规范</h2>
<ul>
<li>文件名用英文单词，多个单词用驼峰命名法。</li>
<li>一些浏览器会将含有这些词的作为广告拦截，文件命名、ID、CLASS等所有命名避免以上词汇。<code>ad`、`ads`、`adv`、`banner`、`sponsor`、`gg`、`guangg`、`guanggao</code><br><a id="more"></a><h2 id="HTML书写规范">HTML书写规范</h2>
</li>
<li>为每个HTML页面的第一行添加标准模式（standard mode）的声明，确保在每个浏览器中拥有一致的展现。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></div></pre></td></tr></table></figure>

<ul>
<li>文档类型声明统一为HTML5声明类型，编码统一为UTF-8。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"UTF-8"</span>&gt;</span></div></pre></td></tr></table></figure>

<ul>
<li><code>&lt;HEAD&gt;</code>中添加信息。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;meta <span class="variable">name=</span><span class="string">"author"</span> <span class="variable">content=</span><span class="string">"smile@kang.cool"</span>&gt;//作者</div><div class="line">&lt;meta <span class="variable">name=</span><span class="string">"description"</span> <span class="variable">content=</span><span class="string">"hello"</span>&gt;//网页描述</div><div class="line">&lt;meta <span class="variable">name=</span><span class="string">"keywords"</span> <span class="variable">content=</span><span class="string">"a,b,c"</span>&gt;//关键字,“，”分隔</div><div class="line">&lt;meta <span class="variable">http-equiv=</span><span class="string">"expires"</span> <span class="variable">content=</span><span class="string">"Wed, 26 Feb 1997 08：21：57 GMT"</span>&gt;//设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅</div><div class="line">&lt;meta <span class="variable">http-equiv=</span><span class="string">"Pragma"</span> <span class="variable">content=</span><span class="string">"no-cache"</span>&gt;//禁止浏览器从本地机的缓存中调阅页面内容</div><div class="line">&lt;meta <span class="variable">http-equiv=</span><span class="string">"Window-target"</span> <span class="variable">content=</span><span class="string">"_top"</span>&gt;//用来防止别人在框架里调用你的页面</div><div class="line">&lt;meta <span class="variable">http-equiv=</span><span class="string">"Refresh"</span> <span class="variable">content=</span><span class="string">"5;URL=http://kahn1990.com/"</span>&gt;//跳转页面，<span class="number">5</span>指时间停留<span class="number">5</span>秒 网页搜索机器人向导。用来告诉搜索机器人哪些页面需要索引，哪些页面不需要索引</div><div class="line">&lt;meta <span class="variable">name=</span><span class="string">"robots"</span> <span class="variable">content=</span><span class="string">"none"</span>&gt;//content的参数有all,none,index,noindex,follow,nofollow，默认是all</div><div class="line">&lt;link <span class="variable">rel=</span><span class="string">"Shortcut Icon"</span> <span class="variable">href=</span><span class="string">"favicon.ico"</span>&gt;//收藏图标</div><div class="line">&lt;meta <span class="variable">http-equiv=</span><span class="string">"Cache-Control"</span> <span class="variable">content=</span><span class="string">"no-cache, must-revalidate"</span>&gt;//网页不会被缓存</div></pre></td></tr></table></figure>

<ul>
<li>IE支持通过特定<meta>标签来确定绘制当前页面所应该采用的IE版本。除非有强烈的特殊需求，否则最好是设置为edge mode ，从而通知IE采用其所支持的最新的模式。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">meta <span class="variable">http-equiv=</span><span class="string">"X-UA-Compatible"</span> <span class="variable">content=</span><span class="string">"IE=Edge"</span>&gt;</div></pre></td></tr></table></figure>

<ul>
<li><p>非特殊情况下CSS样式文件外链至HEAD之间，JAVASCRIPT文件外链至页面底部。引入JAVASCRIPT库文件，文件名须包含库名称及版本号及是否为压缩版。引入JAVASCRIPT插件, 文件名格式为库名称+.+插件名称。<code>jQuery.cookie.js</code></p>
</li>
<li><p>HTML属性应当按照以下给出的顺序依次排列，来确保代码的易读性。</p>
</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span></div><div class="line">id 、 name</div><div class="line">data-*</div><div class="line">src、<span class="keyword">for</span>、 <span class="class"><span class="keyword">type</span>、 <span class="title">href</span></span></div><div class="line">title、alt</div><div class="line">aria-*、 role</div></pre></td></tr></table></figure>

<ul>
<li>编码均遵循XHTML标准，标签、属性、属性命名由小写英文、数字和_组成，且所有标签必须闭合，属性值必须用双引号””，避免使用中文拼音尽量简易并要求语义化。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CLASS <span class="comment">--&gt; nHeadTitle --&gt; CLASS遵循小驼峰命名法（little camel-case）</span></div><div class="line">ID <span class="comment">--&gt; n_head_title --&gt; ID遵循名称+_</span></div><div class="line">NAME <span class="comment">--&gt; N_Head_Title --&gt; NAME属性命名遵循首个字母大写+_</span></div><div class="line">&lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"nHeadTitle"</span> <span class="property">id</span>=<span class="string">"n_head_title"</span> <span class="property">name</span>=<span class="string">"N_Head_Title"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</div></pre></td></tr></table></figure>

<ul>
<li>当JAVASCRIPT获取单个元素时，通常使用<code>document.getElementById</code>来获取dom元素，<code>document.getElementById</code>兼容所有浏览器，<strong>但IE浏览器会混淆元素的ID和NAME属性，所以要区分ID和NAME命名。</strong></li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">name</span>=<span class="value">"test"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"test"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">button</span> <span class="attribute">onclick</span>=<span class="value">"alert(document.getElementById('test').tagName)"</span>&gt;</span><span class="tag">&lt;/<span class="title">button</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- ie6下为INPUT --&gt;</span></div></pre></td></tr></table></figure>

<ul>
<li>特殊符号应使用转意符。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;    <span class="literal">-</span><span class="literal">-</span>&gt;    <span class="comment">&lt;</span></div><div class="line">&gt;    <span class="literal">-</span><span class="literal">-</span>&gt;    <span class="comment">&gt;</span></div><div class="line"><span class="comment">空格</span>  <span class="literal">-</span><span class="literal">-</span>&gt;</div></pre></td></tr></table></figure>

<ul>
<li>含有描述性表单元素（INPUT，TEXTAREA）添加LABEL。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">label</span> <span class="attribute">for</span>=<span class="value">"test"</span>&gt;</span>测试<span class="tag">&lt;/<span class="title">label</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">id</span>=<span class="value">"test"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">p</span>&gt;</span></div></pre></td></tr></table></figure>

<ul>
<li>多用无兼容性问题的HTML内置标签，比如SPAN、EM、STRONG、OPTGROUP、LABEL等,需要自定义HTML标签属性时，首先考虑是否存在已有的合适标签可替换，如果没有，可使用须以“data-”为前缀来添加自定义属性，避免使用其他命名方式。</li>
<li>语义化HTML。</li>
<li>尽可能减少<code>&lt;DIV&gt;</code>嵌套。</li>
<li>书写链接地址时避免重定向。<br><code>href=&quot;http://www.kahn1990.com/&quot; //即在URL地址后面加“/”</code></li>
</ul>
<h1 id="Web开发规范（二）">Web开发规范（二）</h1>
<p>@(总结)</p>
<h2 id="CSS书写规范">CSS书写规范</h2>
<p>-为了欺骗W3C的验证工具,可将代码分为两个文件，一个是针对所有浏览器,一个只针对IE。即将所有符合<code>W3C</code>的代码写到一个文件中,而一些IE中必须而又不能通过<code>W3C</code>验证的代码（如:cursor:hand;）放到另一个文件中，再用下面的方法导入。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 放置所有浏览器样式--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">type</span>=<span class="value">"text/css"</span> <span class="attribute">href</span>=<span class="value">""</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 只放置IE必须，而不能通过w3c的--&gt;</span></div><div class="line"><span class="comment">&lt;!--[if IE]</span></div><div class="line">    &lt;link rel="stylesheet" href=""&gt;</div><div class="line">&lt;![endif]--&gt;</div></pre></td></tr></table></figure>

<ul>
<li><p>CSS样式新建或修改尽量遵循以下原则。</p>
<ul>
<li>根据新建样式的适用范围分为三级：全站级、产品级、页面级。</li>
<li>尽量通过继承和层叠重用已有样式。</li>
<li>不要轻易改动全站级CSS。改动后，要经过全面测试。</li>
</ul>
</li>
<li><p>CSS属性显示顺序。</p>
<ul>
<li>显示属性</li>
<li>元素位置</li>
<li>元素属性</li>
<li><p>元素内容属性</p>
</li>
<li><p>CSS书写顺序。</p>
</li>
</ul>
</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"> .header {</div><div class="line"><span class="comment">/* 显示属性 */</span></div><div class="line">    display || visibility</div><div class="line">    list-style</div><div class="line">    position top || right || bottom || left</div><div class="line">    z-index</div><div class="line">    <span class="keyword">clear</span></div><div class="line">    <span class="keyword">float</span></div><div class="line"><span class="comment">/* 自身属性 */</span></div><div class="line">    width <span class="keyword">max</span>-width || <span class="keyword">min</span>-width</div><div class="line">    height <span class="keyword">max</span>-height || <span class="keyword">min</span>-height</div><div class="line">    overflow || <span class="keyword">clip</span></div><div class="line">    margin</div><div class="line">    padding</div><div class="line">    outline</div><div class="line">    border</div><div class="line">    background</div><div class="line"><span class="comment">/* 文本属性 */</span></div><div class="line">    <span class="keyword">color</span></div><div class="line">    font</div><div class="line">    <span class="keyword">text</span>-overflow</div><div class="line">    <span class="keyword">text</span>-<span class="keyword">align</span></div><div class="line">    <span class="keyword">text</span>-indent</div><div class="line">    line-height</div><div class="line">    white-space</div><div class="line">    vertical-<span class="keyword">align</span></div><div class="line">    cursor</div><div class="line">    content</div><div class="line">    };</div></pre></td></tr></table></figure>

<ul>
<li>兼容多个浏览器时，将标准属性写在底部。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-<span class="ruby">moz-border-<span class="symbol">radius:</span> <span class="number">15</span>px; <span class="regexp">/* Firefox */</span></span></div><div class="line">-<span class="ruby">webkit-border-<span class="symbol">radius:</span> <span class="number">15</span>px; <span class="regexp">/* Safari和Chrome */</span></span></div><div class="line">border-radius: 15px; /* Opera 10.5+, 以及使用了IE-CSS3的IE浏览器 *//标准属性</div></pre></td></tr></table></figure>

<ul>
<li>使用选择器时，命名比较短的词汇或者缩写的不允许直接定义样式。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.hd,.bd,.td{};<span class="comment">//如这些命名</span></div></pre></td></tr></table></figure>

<p>可用上级节点进行限定。<code>.recommend-mod .hd</code></p>
<ul>
<li>多选择器规则之间换行，即当样式针对多个选择器时每个选择器占一行。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">button.btn,</div><div class="line">input.btn,</div><div class="line">input[<span class="keyword">type</span>=<span class="string">"button"</span>] {…};</div></pre></td></tr></table></figure>

<ul>
<li>优化CSS选择器。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="id">#header</span> <span class="tag">a</span> <span class="rules">{ <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#444</span></span></span>; <span class="rule">}</span></span>;<span class="comment">/*CSS选择器是从右边到左边进行匹配*/</span></div></pre></td></tr></table></figure>

<ul>
<li>浏览器将检查整个文档中的所有链接和每个链接的父元素，并遍历文档树去查找ID为header的祖先元素，如果找不到header将追溯到文档的根节点，解决方法如下。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">避免使用通配规则和相邻兄弟选择符、子选择符,、后代选择符、属性选择符等选择器</div><div class="line">不要限定id选择符，如<span class="operator">div</span><span class="comment">#header（提权的除外）</span></div><div class="line">不要限定类选择器，如ul.recommend（提权的除外）</div><div class="line">不要使用 ul li <span class="operator">a</span> 这样长的选择符</div><div class="line">避免使用标签子选择符，如<span class="comment">#header &gt; li &gt; a</span></div></pre></td></tr></table></figure>

<ul>
<li><p>使用z-index属性尽量z-index的值不要超过150（通用组的除外），页面中的元素内容的z-index不能超过10（提示框等模块除外但维持在150以下），不允许直接使用（999~9999）之间大值。</p>
</li>
<li><p>尽量避免使用CSS Hack。</p>
</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">property</span><span class="pseudo">:value</span>; <span class="comment">/* 所有浏览器 */</span></div><div class="line">+<span class="tag">property</span><span class="pseudo">:value</span>; <span class="comment">/* IE7 */</span></div><div class="line">_<span class="tag">property</span><span class="pseudo">:value</span>; <span class="comment">/* IE6 */</span></div><div class="line">*<span class="tag">property</span><span class="pseudo">:value</span>; <span class="comment">/* IE6/7 */</span></div><div class="line"><span class="tag">property</span><span class="pseudo">:value</span>\9; <span class="comment">/* IE6/7/8/9，即所有IE浏览器 */</span></div><div class="line"></div><div class="line">\* <span class="tag">html</span> <span class="tag">selector</span> <span class="rules">{ <span class="rule">… }</span></span>; <span class="comment">/* IE6 */</span></div><div class="line">\*<span class="pseudo">:first-child+html</span> <span class="tag">selector</span> <span class="rules">{ <span class="rule">… }</span></span>; <span class="comment">/* IE7 */</span></div><div class="line"><span class="tag">html</span>&gt;<span class="tag">body</span> <span class="tag">selector</span> <span class="rules">{ <span class="rule">… }</span></span>; <span class="comment">/* 非IE6 */</span></div><div class="line"><span class="at_rule">@<span class="keyword">-moz-document</span> <span class="function">url-prefix</span>() </span>{ … }; <span class="comment">/* firefox */</span></div><div class="line"><span class="at_rule">@<span class="keyword">media</span> all and (-webkit-min-device-pixel-ratio:<span class="number">0</span>) </span>{ … }; <span class="comment">/* saf3+/chrome1+ */</span></div><div class="line"><span class="at_rule">@<span class="keyword">media</span> all and (-webkit-min-device-pixel-ratio:<span class="number">10000</span>),not all and (-webkit-min-device-pixel-ratio:<span class="number">0</span>) </span>{ … }; <span class="comment">/* opera */</span></div><div class="line"><span class="at_rule">@<span class="keyword">media</span> screen and (max-device-width: <span class="number">480px</span>) </span>{ … }; <span class="comment">/* iPhone/mobile webkit */</span></div></pre></td></tr></table></figure>

<ul>
<li>避免使用低效的选择器。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">body</span> &gt; * <span class="rules">{<span class="rule">…}</span></span>;</div><div class="line"><span class="tag">ul</span> &gt; <span class="tag">li</span> &gt; <span class="tag">a</span> <span class="rules">{<span class="rule">…}</span></span>;</div><div class="line"><span class="id">#footer</span> &gt; <span class="tag">h3</span> <span class="rules">{<span class="rule">…}</span></span>;</div><div class="line"><span class="tag">ul</span><span class="id">#top_blue_nav</span> <span class="rules">{<span class="rule">…}</span></span>;</div><div class="line"><span class="id">#searbar</span> <span class="tag">span</span><span class="class">.submit</span> <span class="tag">a</span> <span class="rules">{ <span class="rule">… }</span></span>; <span class="comment">/* 反面示例 */</span></div></pre></td></tr></table></figure>

<ul>
<li><p>六个不要三个避免一个使用。</p>
<ul>
<li>不要在标签上直接写样式</li>
<li>不要在CSS中使用<code>expression</code></li>
<li>不要在CSS中使用<code>@import</code></li>
<li>不要在CSS中使用<code>!important</code></li>
<li>不要在CSS中使用<code>“*”</code>选择符</li>
<li>不要将CSS样式写为单行</li>
<li>避免使用filter</li>
<li>避免使用行内<code>（inline）</code>样式</li>
<li>避免使用<code>“*”</code>设置<code>{margin: 0; padding: 0;}</code></li>
<li>使用<code>after</code>或<code>overflow</code>的方式清浮动</li>
</ul>
</li>
<li><p>减少使用影响性能的属性。</p>
</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">position</span><span class="value">:absolute;</span></div><div class="line"><span class="attribute">float</span><span class="pseudo">:left</span>;<span class="comment">//如这些定位或浮动属性</span></div></pre></td></tr></table></figure>

<ul>
<li><strong>减少在CSS中使用滤镜表达式和图片repeat</strong>,尤其在body当中,渲染性能极差, 如果需要用repeat的话,图片的宽或高不能少于8px。</li>
</ul>
<h2 id="JavaScript书写规范">JavaScript书写规范</h2>
<ul>
<li>命名规范。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">常量名</div><div class="line">    全部大写并单词间用下划线分隔</div><div class="line">    如：CSS_BTN_CLOSE、TXT_LOADING</div><div class="line">对象的属性或方法名</div><div class="line">    小驼峰式（little camel-case）</div><div class="line">    如：init、bindEvent、updatePosition</div><div class="line">    示例：Dialog.prototype = {</div><div class="line">                init: <span class="function"><span class="keyword">function</span> <span class="params">()</span></span> {},</div><div class="line">                bindEvent: <span class="function"><span class="keyword">function</span> <span class="params">()</span></span> {},</div><div class="line">                updatePosition: <span class="function"><span class="keyword">function</span> <span class="params">()</span></span> {}</div><div class="line">                …</div><div class="line">                };</div><div class="line">类名（构造器）</div><div class="line">    <span class="comment">--&gt;小驼峰式但首字母大写</span></div><div class="line">    <span class="comment">--&gt;如：Current、DefaultConfig</span></div><div class="line">函数名</div><div class="line">    <span class="comment">--&gt;小驼峰式</span></div><div class="line">    <span class="comment">--&gt;如：current()、defaultConfig()</span></div><div class="line">变量名</div><div class="line">    <span class="comment">--&gt;小驼峰式</span></div><div class="line">    <span class="comment">--&gt;如：current、defaultConfig</span></div><div class="line">私有变量名</div><div class="line">    <span class="comment">--&gt;小驼峰式但需要用_开头</span></div><div class="line">    <span class="comment">--&gt;如：_current、_defaultConfig</span></div><div class="line">变量名的前缀</div><div class="line">    <span class="comment">--&gt;续</span></div></pre></td></tr></table></figure>

<ul>
<li>代码格式。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="string">"()"</span>前后需要跟空格</div><div class="line"><span class="string">"="</span>前后需要跟空格</div><div class="line"><span class="string">","</span>后面需要跟空格</div><div class="line"><span class="built_in">JSON</span>对象需格式化对象参数</div><div class="line"><span class="keyword">if</span>、<span class="keyword">while</span>、<span class="keyword">for</span>、<span class="keyword">do</span>语句的执行体用<span class="string">"{}"</span>括起来</div><div class="line"><span class="keyword">if</span> (a==<span class="number">1</span>) {</div><div class="line">    <span class="comment">//代码</span></div><div class="line">};</div></pre></td></tr></table></figure>

<ul>
<li>避免额外的逗号。<code>var arr = [1,2,3,];</code></li>
<li><p><strong>for-in循环体中必须用hasOwnProperty方法检查成员是否为自身成员，避免来自原型链上的污染。</strong></p>
</li>
<li><p>长语句可考虑断行。</p>
</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">TEMPL_SONGLIST.replace(<span class="string">'{TABLE}'</span>, da[<span class="string">'results'</span>])</div><div class="line">    .replace(<span class="string">'{PREV_NUM}'</span>, <span class="keyword">prev</span>)</div><div class="line">    .replace(<span class="string">'{NEXT_NUM}'</span>, <span class="keyword">next</span>)</div><div class="line">    .replace(<span class="string">'{CURRENT_NUM}'</span>, current)</div><div class="line">    .replace(<span class="string">'{TOTAL_NUM}'</span>, da.page_total);</div></pre></td></tr></table></figure>

<p> -为了避免和<code>JSLint</code>的检验机制冲突，“.”或“+”这类操作符放在行尾。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">TEMPL_SONGLIST.replace('{TABLE}', da['results']).</div><div class="line">    <span class="operator"><span class="keyword">replace</span>(<span class="string">'{PREV_NUM}'</span>, prev).</span></div><div class="line">    <span class="keyword">replace</span>(<span class="string">'{NEXT_NUM}'</span>, <span class="keyword">next</span>).</div><div class="line">    <span class="keyword">replace</span>(<span class="string">'{CURRENT_NUM}'</span>, <span class="keyword">current</span>).</div><div class="line">    <span class="keyword">replace</span>(<span class="string">'{TOTAL_NUM}'</span>, da.page_total);</div></pre></td></tr></table></figure>

<p>如果模块代码中，使用其它全局变量想跳过JSLint的检查，可以在该文件中加入/<em>global</em>/声明。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/*global alert: <span class="literal">true</span>, console: <span class="literal">true</span>, top: <span class="literal">true</span>, <span class="keyword">set</span>Timeout: <span class="literal">true</span> */</div></pre></td></tr></table></figure>

<ul>
<li>使用严格的条件判断符。用===代替==，用!==代替!=，避免掉入==造成的陷阱,在条件判断时，这样的一些值表示false。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="literal">null</span></div><div class="line"><span class="literal">undefined</span>与<span class="literal">null</span>相等</div><div class="line">字符串<span class="string">''</span></div><div class="line">数字<span class="number">0</span></div><div class="line"><span class="literal">NaN</span></div></pre></td></tr></table></figure>

<p>在==时，则会有一些让人难以理解的陷阱，比如：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</div><div class="line">    <span class="keyword">var</span> <span class="literal">undefined</span>;</div><div class="line">    <span class="literal">undefined</span> == <span class="literal">null</span>; <span class="comment">// true</span></div><div class="line">    <span class="number">1</span> == <span class="literal">true</span>; <span class="comment">//true</span></div><div class="line">    <span class="number">2</span> == <span class="literal">true</span>; <span class="comment">// false</span></div><div class="line">    <span class="number">0</span> == <span class="literal">false</span>; <span class="comment">// true</span></div><div class="line">    <span class="number">0</span> == <span class="string">''</span>; <span class="comment">// true</span></div><div class="line">    <span class="literal">NaN</span> == <span class="literal">NaN</span>;<span class="comment">// false</span></div><div class="line">    [] == <span class="literal">false</span>; <span class="comment">// true</span></div><div class="line">    [] == ![]; <span class="comment">// true</span></div><div class="line">})();</div></pre></td></tr></table></figure>

<p>对于不同类型的 == 判断，有这样一些规则，顺序自上而下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="literal">undefined</span>与<span class="literal">null</span>相等</div><div class="line">一个是<span class="built_in">number</span>一个是<span class="built_in">string</span>时，会尝试将<span class="built_in">string</span>转换为<span class="built_in">number</span></div><div class="line">尝试将<span class="built_in">boolean</span>转换为<span class="built_in">number</span></div><div class="line"><span class="number">0</span>或<span class="number">1</span></div><div class="line">尝试将<span class="built_in">Object</span>转换成<span class="built_in">number</span>或<span class="built_in">string</span></div></pre></td></tr></table></figure>

<p>而这些取决于另外一个对比量，即值的类型，所以对于0、空字符串的判断，建议使用===。===会先判断两边的值类型，类型不匹配时为false。</p>
<ul>
<li>下面类型的对象不建议用new构造。引用对象成员用<code>obj.prop</code>代替<code>obj[“prop”]</code>，除非属性名是变量。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">new</span> <span class="built_in">Number</span></div><div class="line"><span class="keyword">new</span> <span class="built_in">String</span></div><div class="line"><span class="keyword">new</span> <span class="built_in">Boolean</span></div><div class="line"><span class="keyword">new</span> <span class="built_in">Object</span> <span class="comment">//用{}代替</span></div><div class="line"><span class="keyword">new</span> <span class="built_in">Array</span> <span class="comment">//用[]代替</span></div></pre></td></tr></table></figure>

<ul>
<li>从number到string的转换。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="javadoc">/** 推荐写法*/</span></div><div class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line">typeof(a); <span class="comment">//"number"</span></div><div class="line">console.log(a); <span class="comment">//1</span></div><div class="line"><span class="keyword">var</span> aa=a+'';</div><div class="line">typeof(aa); <span class="comment">//"string"</span></div><div class="line">console.log(aa); <span class="comment">//'1'</span></div><div class="line"><span class="javadoc">/** 不推荐写法*/</span></div><div class="line"><span class="keyword">new</span> String(a)或a.toString()</div></pre></td></tr></table></figure>

<p>从string到number的转换，使用parseInt，必须显式指定第二个参数的进制。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="javadoc">/** 推荐写法*/</span></div><div class="line"><span class="keyword">var</span> a = '<span class="number">1</span>';</div><div class="line"><span class="keyword">var</span> aa = parseInt(a,<span class="number">10</span>);</div><div class="line">typeof(a); <span class="comment">//"string"</span></div><div class="line">console.log(a); <span class="comment">//'1'</span></div><div class="line">typeof(aa); <span class="comment">//"number"</span></div><div class="line">console.log(aa); <span class="comment">//1</span></div></pre></td></tr></table></figure>

<p>从float到integer的转换。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="javadoc">/** 推荐写法*/</span></div><div class="line">Math.floor/Math.round/Math.ceil</div><div class="line"><span class="javadoc">/** 不推荐写法*/</span></div><div class="line">parseInt</div></pre></td></tr></table></figure>

<ul>
<li>字符串拼接应使用数组保存字符串片段，使用时调用join方法。避免使用+或+=的方式拼接较长的字符串，每个字符串都会使用一个小的内存片段，过多的内存片段会影响性能。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="javadoc">/**推荐的拼接方式array的push、join*/</span></div><div class="line">var str=[],</div><div class="line">    list=[<span class="string">'测试A'</span>,<span class="string">'测试B'</span>];</div><div class="line"><span class="keyword">for</span> (var i=<span class="number">0</span> , len=list.length; i &lt; len; i++) {</div><div class="line">    str.push( <span class="string">'&lt;div&gt;'</span>+ list[i] + <span class="string">'&lt;/div&gt;'</span>);</div><div class="line">};</div><div class="line">console.log(str.join(<span class="string">''</span>)); <span class="comment">//&lt;div&gt;测试A&lt;/div&gt;&lt;div&gt;测试B&lt;/div&gt;</span></div><div class="line"><span class="javadoc">/** 不推荐的拼接方式+=*/</span></div><div class="line">var str = <span class="string">''</span>,</div><div class="line">    list=[<span class="string">'测试A'</span>,<span class="string">'测试B'</span>];</div><div class="line"><span class="keyword">for</span> (var i = <span class="number">0</span>, len = list.length; i&lt; len; i++) {</div><div class="line">    str+=<span class="string">'&lt;div&gt;'</span> + list[i] + <span class="string">'&lt;/div&gt;'</span>;</div><div class="line">};</div><div class="line">console.log(str); <span class="comment">//&lt;div&gt;测试A&lt;/div&gt;&lt;div&gt;测试B&lt;/div&gt;</span></div></pre></td></tr></table></figure>

<ul>
<li>尽量避免使用存在兼容性及消耗资源的方法或属性。不要使用with，void，evil，eval_r，innerText。</li>
<li>注重HTML分离, 减小reflow, 注重性能。</li>
</ul>
<h2 id="图片规范">图片规范</h2>
<ul>
<li>命名应用小写英文、数字、_组合，便于团队其他成员理解。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">header_btn.gif</div><div class="line"> header_btn2.gif</div></pre></td></tr></table></figure>

<ul>
<li>页面元素类图片均放入img文件夹，测试用图片放于<code>img/testimg</code>文件夹，psd源图放入img/psdimg文件夹。</li>
<li>图片格式仅限于gif、png、jpg等。</li>
<li>用png图片做图片时,要求图片格式为png-8格式,若png-8实在影响图片质量或其中有半透明效果,请为ie-6单独定义背景，并尽量避免使用半透明的png图片。</li>
<li>背景图片请尽可能使用<code>sprite</code>（将一个页面涉及到的所有零星图片都包含到一张大图中去）技术, 减小http请求。</li>
</ul>
<h2 id="注释规范">注释规范</h2>
<ul>
<li>JAVASCRIPT、CSS文件注释需要标明作者、文件版本、创建/修改时间、重大版本修改记录、函数描述、文件版本、创建或者修改时间、功能、作者等信息。中间可添加如下信息：</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="variable">@file</span> 文件名</div><div class="line"><span class="variable">@addon</span> 把一个函数标记为另一个函数的扩张，另一个函数的定义不在源文件中</div><div class="line"><span class="variable">@argument</span> 用大括号中的自变量类型描述一个自变量</div><div class="line"><span class="variable">@author</span> 函数/类作者的姓名</div><div class="line"><span class="variable">@base</span> 如果类是继承得来，定义提供的类名称</div><div class="line"><span class="variable">@class</span> 用来给一个类提供描述，不能用于构造器的文档中</div><div class="line"><span class="variable">@constructor</span> 描述一个类的构造器</div><div class="line"><span class="variable">@deprecated</span> 表示函数/类已被忽略</div><div class="line"><span class="variable">@exception</span> 描述函数/类产生的一个错误</div><div class="line"><span class="variable">@exec</span> <span class="variable">@extends</span> 表示派生出当前类的另一个类</div><div class="line"><span class="variable">@fileoverview</span> 表示文档块将用于描述当前文件，这个标签应该放在其它任何标签之前</div><div class="line"><span class="variable">@final</span> 指出函数/类</div><div class="line"><span class="variable">@ignore</span> 让jsdoc忽视随后的代码</div><div class="line"><span class="variable">@link</span> 类似于<span class="variable">@link</span>标签，用于连接许多其它页面</div><div class="line"><span class="variable">@member</span> 定义随后的函数为提供的类名称的一个成员</div><div class="line"><span class="variable">@param</span> 用大括号中的参数类型描述一个参数</div><div class="line"><span class="variable">@private</span> 表示函数/类为私有，不应包含在生成的文档中</div><div class="line"><span class="variable">@requires</span> 表示需要另一个函数/类</div><div class="line"><span class="variable">@return</span> 描述一个函数的返回值</div><div class="line"><span class="variable">@see</span> 连接到另一个函数/类</div><div class="line"><span class="variable">@throws</span> 描述函数/类可能产生的错误</div><div class="line"><span class="variable">@type</span> 指定函数/成员的返回类型</div><div class="line"><span class="variable">@version</span> 函数/类的版本号</div></pre></td></tr></table></figure>

<h2 id="开发和测试工具约定">开发和测试工具约定</h2>
<ul>
<li>编码格式化，三码统一。</li>
<li>测试工具: 前期开发仅测试FireFox &amp; IE6 &amp; IE7 &amp; IE8 &amp; IE9 &amp; Opera &amp; Chrome &amp; Safari</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>from: <a href="">Github</a></p>
<h2 id="通用规范">通用规范</h2>
<ul>
<li>使用空格代替TAB，windows和Linux的Tab占位不同。</li>
<li>CSS样式属性和 JavaScript代码后边添加分号<code>;</code> ，方便断句，利于压缩。</li>
<li>文件内容编码均统一为UTF-8。</li>
<li>CSS、JAVASCRIPT中的非注释类中文字符须转换成unicode编码使用，以避免编码错误时乱码显示。</li>
</ul>
<h2 id="文件规范">文件规范</h2>
<ul>
<li>文件名用英文单词，多个单词用驼峰命名法。</li>
<li>一些浏览器会将含有这些词的作为广告拦截，文件命名、ID、CLASS等所有命名避免以上词汇。<code>ad`、`ads`、`adv`、`banner`、`sponsor`、`gg`、`guangg`、`guanggao</code><br>]]>
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[《增长黑客》读书笔记]]></title>
    <link href="http://yoursite.com/2015/10/05/%E3%80%8A%E5%A2%9E%E9%95%BF%E9%BB%91%E5%AE%A2%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2015/10/05/《增长黑客》读书笔记/</id>
    <published>2015-10-05T12:20:30.000Z</published>
    <updated>2015-10-05T12:39:27.000Z</updated>
    <content type="html"><![CDATA[<p>通过简书阅读：<a href="http://www.jianshu.com/p/ced81ced4b0d" target="_blank" rel="external">《增长黑客》读书笔记</a></p>
<p>国庆期间，利用两天里的空闲时间，把这本最近颇受好评的书读了一遍，感觉很有意思之余，又把把书里的干货整理了一遍。</p>
<p>书里的干货很多，案例很多，纯理论的东西不多，如果想要成为一个牛逼的 Leader , 就应当把自己培养成为T型的人才，跨界知识能力超强，某方面技术超硬，这个某方面，更多的指技术能力超硬。</p>
<p>同时，书中所提到的一些案例，某些地方是游走在规矩的边界上，还有一部分虽然很有效但是也增加了用户的恶感（如捆绑下载，插件广告等），当然这本书并不是要教你学坏。</p>
<p>在写这个读书笔记之前，我也看了一些人做的思维导图，内容很全，但是思维导图的缺点在于看的人更容易整体的浏览，一瞬接接触巨大的信息量，而无法深入的思考每一个信息点，所以我直接以正常笔记的形式进行了整理。</p>
<h2 id="第一章：概念">第一章：概念</h2>
<h4 id="定义（P6）">定义（P6）</h4>
<p>以数据驱动营销，以市场指导产品，通过技术化手段贯彻增长目标的人。</p>
<h4 id="增长目标：（P7）">增长目标：（P7）</h4>
<p><strong>『AARRR』转化漏斗模型：</strong></p>
<ul>
<li>Acquisition 获取用户</li>
<li>Activation 激发活跃</li>
<li>Retention 提高留存</li>
<li>Revenue 增加收入</li>
<li>Referral 传播推荐</li>
</ul>
<h4 id="能力特质：（P16）">能力特质：（P16）</h4>
<ul>
<li><strong>数据为王：</strong>具有数据思维，一切工作建立在数据分析之上</li>
<li><strong>专注目标：</strong>时刻围绕增长目标展开，不断的测试、改进，学习、再测试</li>
<li><strong>关注细节：</strong>对细小改动做出评估</li>
<li><strong>富于创意：</strong>缜密分析+天马行空的增长方案</li>
<li><strong>信息通透：</strong>深入理解产品用户的活跃渠道，关注新生渠道和业界趋势</li>
</ul>
<p>（Andy Johns的增长黑客生涯）：facebook小挂件，向潜在用户发邮件广告推广，Twitter的着陆页改进（关注注册登录），新用户注册推荐用户，开发内部群发邮件系统，Quora捉摸用户行为模式，归纳为标准流程，引导其他用户执行流程<br><a id="more"></a></p>
<h4 id="一切以数据说话：（P17）">一切以数据说话：（P17）</h4>
<ul>
<li><strong>明确分析目的</strong></li>
<li><strong>了解数据来源的相关信息</strong>：<ul>
<li><strong>强调核心指标</strong>：建立在品类特性和自身提供服务的核心价值之上</li>
<li><strong>确定上报机制</strong>：时机、内容、技术实践形式</li>
</ul>
</li>
<li><strong>数据分析方法</strong><ul>
<li><strong>定性分析</strong>：对事物性质进行判断</li>
<li><strong>定量分析</strong>： 对事物数量做统计</li>
</ul>
</li>
</ul>
<h4 id="团队定位（P20）">团队定位（P20）</h4>
<p>游走在产品、运营、研发、设计、用户研究之间的多面手，比产品更关注能带来数据增长的功能特性，比运营更倾向于数据中探索新的增长机会，比设计师更少关注感观层面的艺术性，长于用户研究</p>
<h4 id="招聘经验以及发展要素（P23）">招聘经验以及发展要素（P23）</h4>
<p><strong>要求</strong>：具备技术、产品、营销思维、传播和分享的精神（案例为Teambition , WIFI万能钥匙的招聘经验）<br><strong>如何培养</strong>：熟悉产品和技术的市场影响，有产品干和市场思维，培养横向跨界知识，纵向某一领域专攻。<strong>软实力</strong>为：热情、聪明、好奇、收集资源、影响力、心态开放、内心强大、轻微强迫症<br><strong>常用的工具箱：</strong>Google Analytics , Mixpanel , KissMeteics , UserCycle , Customer.io , Optimize.ly , Basscamp , 友盟 </p>
<h2 id="第二章：产品">第二章：产品</h2>
<h4 id="PMF（P40）">PMF（P40）</h4>
<p>也就是产品与市场的完美切合度，Product / market fit。从早期用户得到反馈，利用最小的成本持续改进产品。</p>
<p><strong>成功案例</strong>： instagram的转型，砍掉冗余功能，吧用户喜欢的照片分享功能拿出来做<br><strong>失败案例</strong>： 叮咚小区，前期粗暴的线下广告投放，但是产品的基础功能不完善，用户体验极差。</p>
<p>所以，应当先做好产品的验证，达到了PMF状态再全力推广。</p>
<h4 id="需求（P45）">需求（P45）</h4>
<ul>
<li><strong>需求是真实存在的还是伪需求</strong>（QQ邮箱将邮件附件单列出来，但几乎没人用）</li>
<li><strong>需求是否属于刚需</strong></li>
<li><strong>需求是否足够大</strong>：估计目标用户的基数、消费能力、意愿预算；评估进入市场的原有规模和新的规模、借助排行榜和搜索热度了解需求（YY 向视频直播平台转变）</li>
<li><strong>需求的变现能力如何</strong></li>
</ul>
<h4 id="MVP（P49）">MVP（P49）</h4>
<p>也就是最小化的可行产品来验证需求。</p>
<ul>
<li><strong>基本功能</strong>： 在最短时间内完成，如Dropbox通过仅完成宣传视频，Groupon 通过WordPress建站，排版软件制作礼券等，大众点评3天做出网页，数据来源于旅游手册，微信游戏近似于图片拼凑视觉稿。这几种常见的方式：<strong>伪造网站，不提供实际的功能；用户点击按钮后告知正在开发，留下电子邮箱；调研用户呼声最高的功能，然后成为种子用户；基于微信做MVP的开发（无需适配，分发方便，便于收集反馈，数据可以沉淀，开发成本低）</strong></li>
<li><strong>反馈渠道</strong>：内部反馈机制等</li>
<li><strong>官方公告</strong>： 群体公告 + 单用户通知</li>
<li><strong>自动升级</strong>： 启动时提示更新</li>
<li><strong>使用行为统计</strong></li>
</ul>
<p>同时应当注意，在产品早期应当尽快适配新环境，案例：多拉口袋的iOS8崩溃问题。</p>
<h2 id="第三章：获取用户">第三章：获取用户</h2>
<h4 id="种子用户（P64）">种子用户（P64）</h4>
<p>通过<strong>冷启动</strong>来获取第一批用户和制作过程，早期的种子用户的质量将决定产品初期的氛围、运营走向、以及日后的发展策略，案例如：知乎的早期邀请制度，哔哩哔哩的答题机制，小米的种子用户反馈。</p>
<p>但是一定要警惕『产品蝗虫』，也就是目标客户之外的围观群众，他们将占用原有的目标用户名额，伤害到社区的生态，抠一些没用的『细节』，行为会对产品的决策产生误导。</p>
<h4 id="从最笨的事情做起（P68）">从最笨的事情做起（P68）</h4>
<p>几个案例：</p>
<ul>
<li>聚美优品，写BB霜的软文，提供化妆品的高质量美图</li>
<li>Strikinfly，寻找超级粉丝，线上线下聊天</li>
<li>云笔记，邀请内测用户成立反馈协助群</li>
<li>Airbnb , 挨家挨户的上门拍照</li>
</ul>
<h4 id="社交红利（P72）与数据抓取（P77）">社交红利（P72）与数据抓取（P77）</h4>
<ul>
<li>与社交网络整合，获取用户量、关系链和行为数据（Spotify用facebook 登陆，Zynga用Facebook的开放平台制作社交游戏）</li>
<li>第三方社交网络的账号登陆，达成移动应用的分享和回流（啪啪，使用微博QQ登陆，挖掘关系链潜力）</li>
<li>数据抓取，可以保证产品初期启动的数据量，以及抢占先机，或者争取资源（微软关闭空间主页服务的时候，网易迅速提供『一键搬家』，追TA抓取唱吧的用户头像）</li>
</ul>
<h4 id="内容营销（P81）">内容营销（P81）</h4>
<p>其作用是<strong>吸引流量，培养潜在用户，劝诱转化</strong>，所以应当讲用户爱听的故事，如官方微博输出用户喜欢的图文（知乎）。<br><strong>注意事项</strong>：明确目标受众，持续稳定输出高质量内容，标题的撰写技巧，保证文章长度（2400），数据分享与互动（有让人讨论的空间，如知乎刊发有争议的文章），选择合适的发布渠道。</p>
<h4 id="搜索的优化（P89）">搜索的优化（P89）</h4>
<p>分为搜索引擎的优化和应用商店的优化。</p>
<p>搜索引擎的优化案例，Facebook 针对用户资料的页面优化，twitter自动提交热门标签给搜索引擎，TochCrunch通过wiki百科建立反向链接。<br>应用商店的优化案例，如大姨吗，通过副标题的修改推关键词，大众点评『更新跑得快』活动。</p>
<h4 id="文案的撰写">文案的撰写</h4>
<ul>
<li>简要概述（100字内）</li>
<li>话题事件</li>
<li>核心特色</li>
<li>主要功能</li>
<li>团队访谈</li>
<li>未来计划</li>
<li>推广活动</li>
<li>转化引导</li>
</ul>
<h4 id="更多的技巧">更多的技巧</h4>
<ul>
<li>捆绑下载：如豌豆荚捆绑下载其APP</li>
<li>排队机制，饥饿营销： Mailbox显示排队人数，Trak.io付费插队，邀请好友插队。</li>
<li>嵌入式代码和小挂件： Youtube分享</li>
<li>线上到线下</li>
<li>海外的扩张： 猎豹，Facebook等</li>
</ul>
<h2 id="第四章：激发活跃">第四章：激发活跃</h2>
<h4 id="A/B测试（P121）">A/B测试（P121）</h4>
<ul>
<li>提供两个方案并行测试，</li>
<li>变量唯一排除其他干扰因素，</li>
<li>有判定结果优劣的标准，</li>
<li>移动应用也可以借助HTML5快速验证需求。</li>
</ul>
<p>几个典型案例如37Signals 『注册高额回报账户』vs 『所有账户享受30天免费使用』，ZAGG 商品的静态图片 vs 360度图片 ， OkDork 先注册后进网站的测试，根据行为热点图去掉导航栏的测试。移动端如百姓网利用HTML5容器实现A/B测试。</p>
<p>但注意，不要过度依赖AB测试。</p>
<h4 id="独辟蹊径的技术（P133）">独辟蹊径的技术（P133）</h4>
<p>在技术瓶颈下通过巧妙的手段破除用户使用功能的障碍，降低用户活跃的门槛。几个例子都很有趣：</p>
<ul>
<li>SKype『伪立体声』，提高清晰度，击败了其他同类服务</li>
<li>QQ音乐利用专辑图片实现了IOS的『锁屏歌词』</li>
<li>WIFI万能钥匙通过截图加上OCR技术识别WIFI热点，同时利用GPS+云服务获取附近的热点</li>
</ul>
<h4 id="补贴（P137）">补贴（P137）</h4>
<p>有直接的现金补贴，快速获取用户，激发活跃度，也就是如返利和嘀嘀快的的补贴大战。<br>也有新玩法的红包补贴，通过社交关系链的传播，比如嘀嘀打车的补贴新玩法，打车红包。</p>
<h3 id="游戏化（P139）与脚本自动化运营（P146）">游戏化（P139）与脚本自动化运营（P146）</h3>
<p><strong>《游戏改变世界》提到的游戏四大特征</strong>： 目标、规则、反馈系统、自愿参与。<br>比如星巴克的线下会员成长体系，同时还开发了app把线下的游戏化搬到了线上。移动签到应用Foursquare 通过积分排名，徽章挑战和抢夺地主的游戏设计抓取用户忠诚度。滴滴打车提供的『滴米』系统等等。</p>
<p>而产品在早期社区通过团队自己来运营启动，后期就可以通过写脚本来实现自动化运营，一个有趣的运营案例是豌豆荚打造的贴吧神兽，其实就是一个自动聊天的机器人，获得了几十万的关注度。</p>
<h2 id="第五章：提高留存">第五章：提高留存</h2>
<h4 id="用户留存率">用户留存率</h4>
<p><strong>留住已有的用户胜过拓展新用户</strong><br>用户流逝的原因：</p>
<ul>
<li><strong>程序漏洞，性能瓶颈</strong>：Color基本流程都跑不通</li>
<li><strong>用户频繁被骚扰</strong>： 新浪微博的各种通知、广告、推送、话题等</li>
<li><strong>产品热度消减</strong>： 『你画我猜』的日活锐减</li>
<li><strong>更好的替代产品</strong> ： eBay被淘宝击败</li>
<li><strong>其他原因</strong></li>
</ul>
<p><strong>留存率的衡量标准</strong>：</p>
<ul>
<li>次日留存（40%）</li>
<li>7日留存（20%）</li>
<li>30日留存（10%）</li>
</ul>
<h4 id="产品性能优化">产品性能优化</h4>
<p>优化内容包括：用户终端性能、网络性能、流量压缩、安装包空间、界面设计与布局、其他。</p>
<p>如Facebook为非洲用户的优化，减少了启动速度，提供了预加载，压缩图片，优先家在适合当前分辨率的照片，优化安装包大小，其实就是前边所说的优化内容。</p>
<p>再如 Instagram 的安卓版优化，扁平化设计，重新布局精简架构专注内容，延迟加载不必要的模块（方法追踪method tracing 和时点声明 Timing Statements 技术）。</p>
<h4 id="有损服务——放下不必要的坚持">有损服务——放下不必要的坚持</h4>
<p>定义：<strong>刻意输出在品质上存在某些损失的服务，换取其他方面的优化。</strong><br>原则：</p>
<ul>
<li><strong>优先保证核心功能的运转</strong></li>
<li><strong>牺牲的特性越少越好，在条件允许的情况下</strong><br>几个经典的案例如：QQ农场在高峰期提供的静态默认列表，微信的高峰期不强求信息发送顺序的一致，小米在抢购的时候不提供剩余手机的精确统计（也有可能是饥饿营销），刀塔传奇的大版本升级采用『低清晰度版本』保证用户尽早升级。</li>
</ul>
<h4 id="引导用户上手_社交维系与社交解绑">引导用户上手 社交维系与社交解绑</h4>
<p>Twitter注册完成后的推荐用户，知乎的推荐订阅，都是引导用户快速上手的例子。</p>
<p>社交维系与社交解绑是对立的概念，前者如全民飞机大战，『啪啪』提示新加入的微博好友，Facebook在注销账号页面显示亲密好友的照片，通过社交手段维系用户留存。而same则通过解绑社交的方式，提高留存。</p>
<h4 id="唤醒机制">唤醒机制</h4>
<p>互联网产品中专为召回流失用户而设计的产品机制。</p>
<ul>
<li><strong>电子邮件召回EDM</strong><ul>
<li><strong>提供奖励</strong>，Pocket 用高级付费账户试用来吸引你</li>
<li><strong>告知进展</strong>，IFTTT增加Nest支持，Evernote推出商业版等方式</li>
<li><strong>个性化推荐</strong>，如知乎的每周精选，淘宝的同类商品。</li>
<li><strong>社交互动提示</strong>，如Twitter定期发送未处理消息，Facebook中通知用户『有一张照片中圈了你』。</li>
<li>优秀的第三方服务商包括 TinyLetter,MailChimp等，EDM要注意内容，和取消订阅方式。</li>
</ul>
</li>
<li><strong>消息推送通知</strong><ul>
<li><strong>推送授权</strong>，推荐试用简单的浮层或者弹窗提示用户获取权限后的使用目的。</li>
<li><strong>徽章通知</strong>，也就是角标，利用用户的强迫症。</li>
<li><strong>本地通知</strong>，在预设的时间点通知，如刀塔传奇每天的三个时间点推送通知。</li>
<li><strong>地理围栏通知</strong></li>
<li><strong>图片推送通知</strong></li>
<li><strong>表情文字通知</strong></li>
</ul>
</li>
<li><strong>网页内唤醒移动应用</strong>，iOS有直接的URL Scheme技术来实现，安卓上有四种方式，分别是：拦截http跳转、自定义scheme、Crome Internet ，内嵌http服务。如知乎，哔哩哔哩等。</li>
</ul>
<h2 id="第六章：增加收入">第六章：增加收入</h2>
<h4 id="免费的世界">免费的世界</h4>
<ul>
<li><strong>互联网与免费的午餐</strong><br> 互联网可以降低信息传播的承办本，海量用户摊薄了边际成本，人的本性对免费产品更感兴趣以及更喜欢『免费』的国人。</li>
<li><strong>免费又赚钱的策略</strong><ul>
<li>基本功能免费，高级功能收费的Freemium策略，比如Evernote，QQ，Flickr等等。</li>
<li>交叉补贴，《征途》的游戏免费，道具收费。</li>
<li>三方市场的流量变现，例子就是搜狗的『三级火箭』策略，通过输入法来带动搜狗浏览器下载，利用浏览器下载带动搜狗搜索的使用量（虽然我巨恶心搜狗的这个行为，但是这种变现的方式确实是最佳方式）</li>
<li>开源代码的盈利可能，如厂商定制开发收费，比如卖技术说明文档，或者接受用户捐赠（其实这个就不算是运营了，纯粹是情怀）</li>
<li>公司上市或者是被收购</li>
</ul>
</li>
<li><strong>免费午餐的终结</strong>，在产品足够好的情况下，可以试着完全掐断免费。</li>
</ul>
<h4 id="重定向广告">重定向广告</h4>
<p>也就是cookie和url分析，业界对此存在两种声音，一种认为增加了收入，另一种则担心用户隐私的泄露。</p>
<h4 id="几个营销案例">几个营销案例</h4>
<p><strong>Wet Seal </strong>：『和友人一起逛街』的社交购物，虚拟的DIY服务，Etsy根据社交资料精准推荐礼物。</p>
<p><strong>罗辑思维的微信月饼</strong>：这也是一次粉丝经济的催生，分别尝试了找人代付，多人代付，随机送礼，加入游戏思维的方式完成了一次精彩的营销。</p>
<p><strong>面对盗版的营销方式</strong>：腾讯给『非法』的QQ会员提供了八折开通会员的服务，而CleanmyMac 给盗版用户提供半价的优惠。面对盗版的变惩为奖的几个原则是：<strong>绝不责备用户，给予合理补偿，提供转化便利</strong></p>
<p><strong>建立商业智能系统</strong>：用数据可视化的方式辅助企业管理，如百姓网建立内部的数据化营销系统，提高了业务增长。</p>
<h2 id="第七章：病毒营销">第七章：病毒营销</h2>
<p><strong>凯文凯利《新经济，新规则》中说道，传真机效应，单独一台传真机没有什么价值，只有它处于一个网络中才能被赋予价值。对于拥有一台传真机的人来说，网络中的传真机越多，你的传真机价值也就越大，用户买下传真机，实则买下了整个网络。</strong></p>
<p>核心指标：</p>
<ul>
<li><strong>K因子</strong>：评判病毒传播的覆盖面，等于感染率*转化率。</li>
<li><strong>病毒传播周期</strong>： 用户发出病毒邀请，到新用户完成转化所花费的时间。（引爆点提到的个别人物法则，附着力法则和环境威力法则）。</li>
</ul>
<h4 id="几个案例">几个案例</h4>
<ul>
<li><strong>坏事传千里</strong>，百度的Bug营销，利用一个假装的bug，百度云获得了大量的新注册用户和铁杆粉丝，以及完整的流程体验，大量的用户个人文件。</li>
<li><strong>借势营销，利用时机</strong>，比如各种旅游产品借助阿里的去啊做热点营销，猎豹移动专门推出的春节抢票版。segmentFault的光棍节程序员闯关秀。（如今打开segmentfault.com/game会有一个新的闯关游戏，不过也是很难的）</li>
<li><strong>构建产品体系外的病毒循环</strong>，追TA的整蛊朋友圈游戏。三大考验：<ul>
<li><strong>创意来源</strong></li>
<li><strong>生命周期</strong></li>
<li><strong>产品契合度</strong>：知乎的财务包子铺与知乎的《金钱有术》。</li>
</ul>
</li>
<li><strong>产品内置的传播因子</strong>。外置的传播因子有几个缺陷，渠道特性与产品特性不匹配，获得的用户参差不齐；渠道传播与下载转化之间可能存在断链（朋友圈可能屏蔽一些下载）；渠道传播的策划固然成功，但是用户可能对产品本身缺乏兴趣。所以借用内置的传播因子可能更好，如AirDrop的推荐产品解锁高级功能，美图秀秀内建的可分享到朋友圈的小功能。</li>
<li><strong>邮件提醒增强传播效率</strong>： SpringSled 好友邀请提高排队名次，通过有效的邮件跟踪提高用户数量。</li>
</ul>
<h4 id="病毒传播中的用户心理把握">病毒传播中的用户心理把握</h4>
<ul>
<li><strong>喜爱</strong>：游戏，文学等大ip的作品，转化率比较高。</li>
<li><strong>逐利</strong>：如Groupon的邀请好友奖励10美元等。</li>
<li><strong>互惠</strong>： 是追逐利益的一种变体，基于理性经济人假说的传统经济学认为，经济行为主体是单纯追求个人利益最大化的，人们的复杂性为和社会参与，都基于成本收益的计算。如dropbox的推广获得额外空间。</li>
<li><strong>求助</strong>：手机游戏，免费游戏，续命或者是买体力要钱。</li>
<li><strong>炫耀</strong>： 支付宝每年一度的晒单</li>
<li><strong>稀缺</strong>： 稀缺资源会引起争抢，如Gmail，Dribbble初期仅允许被邀请者发表作品。</li>
<li><strong>害怕失去或错过</strong>： EverMemo 的互相扫描二维码解锁高级功能。</li>
<li><strong>懒惰</strong>： 严肃的商业内容，大多数用户倾向于复制部分文字和链接再发送，偏重知识性娱乐性的网站，人们优先使用分享按钮分享他们看到的东西。</li>
</ul>
<h2 id="第八章：案例集">第八章：案例集</h2>
<p>最后，作者复盘了几个完整的案例集，Airbnb ，Tinder ，Github，美丽说，外卖库，每一个都值得看几遍，了解一个成功的增长是如何做到的。</p>
<hr>
<p>整本书写的很赞，不像一些外国书，通篇的核心观点极少，统统以过分详实的案例填充那种情况。书中的干货还是非常多的，复盘的案例非常契合，分析到位。总之这是一本不错的书，至少应当读两遍。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>通过简书阅读：<a href="http://www.jianshu.com/p/ced81ced4b0d" target="_blank" rel="external">《增长黑客》读书笔记</a></p>
<p>国庆期间，利用两天里的空闲时间，把这本最近颇受好评的书读了一遍，感觉很有意思之余，又把把书里的干货整理了一遍。</p>
<p>书里的干货很多，案例很多，纯理论的东西不多，如果想要成为一个牛逼的 Leader , 就应当把自己培养成为T型的人才，跨界知识能力超强，某方面技术超硬，这个某方面，更多的指技术能力超硬。</p>
<p>同时，书中所提到的一些案例，某些地方是游走在规矩的边界上，还有一部分虽然很有效但是也增加了用户的恶感（如捆绑下载，插件广告等），当然这本书并不是要教你学坏。</p>
<p>在写这个读书笔记之前，我也看了一些人做的思维导图，内容很全，但是思维导图的缺点在于看的人更容易整体的浏览，一瞬接接触巨大的信息量，而无法深入的思考每一个信息点，所以我直接以正常笔记的形式进行了整理。</p>
<h2 id="第一章：概念">第一章：概念</h2>
<h4 id="定义（P6）">定义（P6）</h4>
<p>以数据驱动营销，以市场指导产品，通过技术化手段贯彻增长目标的人。</p>
<h4 id="增长目标：（P7）">增长目标：（P7）</h4>
<p><strong>『AARRR』转化漏斗模型：</strong></p>
<ul>
<li>Acquisition 获取用户</li>
<li>Activation 激发活跃</li>
<li>Retention 提高留存</li>
<li>Revenue 增加收入</li>
<li>Referral 传播推荐</li>
</ul>
<h4 id="能力特质：（P16）">能力特质：（P16）</h4>
<ul>
<li><strong>数据为王：</strong>具有数据思维，一切工作建立在数据分析之上</li>
<li><strong>专注目标：</strong>时刻围绕增长目标展开，不断的测试、改进，学习、再测试</li>
<li><strong>关注细节：</strong>对细小改动做出评估</li>
<li><strong>富于创意：</strong>缜密分析+天马行空的增长方案</li>
<li><strong>信息通透：</strong>深入理解产品用户的活跃渠道，关注新生渠道和业界趋势</li>
</ul>
<p>（Andy Johns的增长黑客生涯）：facebook小挂件，向潜在用户发邮件广告推广，Twitter的着陆页改进（关注注册登录），新用户注册推荐用户，开发内部群发邮件系统，Quora捉摸用户行为模式，归纳为标准流程，引导其他用户执行流程<br>]]>
    
    </summary>
    
      <category term="PM" scheme="http://yoursite.com/tags/PM/"/>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[平淡日子里的刺]]></title>
    <link href="http://yoursite.com/2015/09/27/%E5%B9%B3%E6%B7%A1%E6%97%A5%E5%AD%90%E9%87%8C%E7%9A%84%E5%88%BA/"/>
    <id>http://yoursite.com/2015/09/27/平淡日子里的刺/</id>
    <published>2015-09-27T13:54:20.000Z</published>
    <updated>2015-09-27T13:58:59.000Z</updated>
    <content type="html"><![CDATA[<p><strong>很多人二十五岁已经死了，七十五岁才埋葬。    ——叔本华</strong></p>
<hr>
<p>八月十五，中秋，一个人。</p>
<p>之前的两年时间，都在期待着新生活，而转眼间也在这里过去了一个月，生活平淡，美好。终于开始思考眼前的生活，思考无论有意义还是无意义都不会烦躁的问题。</p>
<p>一句不恰当的比喻，自己就像从一段漫长的噩梦里苏醒，发现阳光亘古未变的打在脸上，痒痒的，真实的感觉。叔本华说，很多人二十五岁已经死了，七十五岁才埋葬，而我感觉自己好像刚刚复活，扑一扑身上的尘土，重新走入生活。课堂，健身，实验室，聚餐，电影，当下，以及梦想。</p>
<p>生活以痛吻我，后又赐我以希望。所以，面对那些浮动的喧嚣，又有一种新的心境去审视和面对。前后的时光重叠在眼前的生活里，但对我来说，一切都是新的，都是从头来过。简桢常说的一句话，不为浮华所惑，在认定的道路上努力追求单纯的梦想，随之而来的将是丰厚的人生。所以，这些年生活带给我的痛和希望，都是于我的恩赐，给了我更多的自省和淡定。</p>
<p>好了，回到正题。中秋结束，九月份基本宣告结束，2015年也就完成了三分之二，审视自己在年初定下的目标，有些惭愧，因为发现有很多习惯仍然没有养成。关于读书，没有做详细的统计，在三月份时候做的统计是二十本，而后到七月份的时候大约有五十本，稍慢于节奏。而后入学一个月的时间里，阅读量下降，主要精力放在了课程，刷题，和填坑。</p>
<p>虽说我可以通过填充一些小篇幅的书籍来补回阅读量，但是这样无意义的阅读反而是有害的，有一些编写的并不好的书读起来的价值反而不如重看几遍经典书籍，所以今年的百本计划可能完不成了，不过因为开学之后又给自己设定了其他新的目标，所以通过完成几个目标，也算是可以填补这个目标的遗憾吧。</p>
<p>这个博客的上一篇日志发于三月份，而后的六个月是长长的空白，这说明在一个孤独的、而且操作不便的环境里学习，很快就会遇到瓶颈，天花板让我满怀斗志的原地踏步，毫无寸进。日志依然保持持续更新（从八月份到现在，因为入学相关事宜，日记时断时续），文章依然在写，却感觉没有太多新的思考可供我写，大多数的阅读又都与我过去的思考重复，许多阅读收获我放在里简书的账号里。</p>
<p>现在入学一个月有余，度过了适应阶段，我又有新的东西可以思考了，也有了新的目标可以期待，所以，这个博客我可以继续下去了，年初的时候我写文章说，自己在两年里完成了一次从 1.0 到 2.0 的成长，那么，现在就是刺激自己从 2.0 向 3.0 成长的过程吧。</p>
<p>宋冬野有首歌叫《平淡日子里的刺》，韩寒写的词，其实是讲平淡生活里那些猝不及防的无奈，随时会刺痛你，会瞬间刺破幻境，所以他说，生活是这样子，不如诗。</p>
<p>可是，我需要一把刺，我觉得更像一把锥，时刻让我认真感知生活，努力追逐。我需要这根刺，让我时刻保持清醒。张爱玲说，对于三十岁的人来说，十年八年不过是指缝间的事。她说的是爱情，但在我看来，生活也是如此，如果没有一把刺，三五年转瞬老去，大约要真的像叔本华所说的那样，我们都已死去，却等到七十五岁才埋葬。</p>
<p>最后，再用《倾城之恋》里的一段话刺痛一下自己（为什么我总把爱情的思考看成人生的思索，我好想忽然明白了什么人生道理）。</p>
<p><strong>你年轻么？不要紧，过两年就老了。</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>很多人二十五岁已经死了，七十五岁才埋葬。    ——叔本华</strong></p>
<hr>
<p>八月十五，中秋，一个人。</p>
<p>之前的两年时间，都在期待着新生活，而转眼间也在这里过去了一个月，生活平淡，美好。终于开始思考眼前的生活，思考无论有意]]>
    </summary>
    
      <category term="Diary" scheme="http://yoursite.com/tags/Diary/"/>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Docker学习笔记(一)]]></title>
    <link href="http://yoursite.com/2015/09/25/Docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80/"/>
    <id>http://yoursite.com/2015/09/25/Docker学习笔记-一/</id>
    <published>2015-09-25T07:27:44.000Z</published>
    <updated>2015-09-25T07:41:44.000Z</updated>
    <content type="html"><![CDATA[<p>来自：<a href="https://www.gitbook.com/book/yeasy/docker_practice/details" target="_blank" rel="external">Docker 从入门到实战 Gitbook</a></p>
<h2 id="什么是Docker">什么是Docker</h2>
<hr>
<p>Docker 是一个开源的项目，于2013年诞生，基于Go语言实现，代码在<a href="https://github.com/docker/docker" target="_blank" rel="external">Github</a>上维护。</p>
<p><strong>Docker 项目的目标是实现轻量级的操作系统虚拟化解决方案</strong>，Docker 的基础是Linux 容器等技术。</p>
<p>在 LXC 的基础上 Docker 进行了进一步的封装，让用户不需要去关心容器的管理，使得操作更为简便。用户操作 Docker 的容器就像操作一个快速轻量级的虚拟机一样简单。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/30117-b2fb8aee9f40c436.png?imageMogr2/auto-orient/strip%7CimageView2/2" alt="Alt text"></p>
<p>与传统虚拟机相比，Docker 容器是在操作系统层面实现了虚拟化，直接复用本地主机的操作系统，传统的方式仅在硬件层面上实现。</p>
<h2 id="Docker优点">Docker优点</h2>
<hr>
<p>秒级实现，资源利用率高，除运行应用外，基本不消耗额外系统资源，使应用性能很高，开销更小。</p>
<h3 id="更快的交付和部署">更快的交付和部署</h3>
<p>开发者使用标准镜像构建一套开发容器，完成后，运维可以直接使用容器来部署代码。Docker可以快速创建，快速迭代，全程可见。</p>
<h3 id="更高效的虚拟化">更高效的虚拟化</h3>
<p>内核级的虚拟化，不需要额外的hypervisor支持。</p>
<h3 id="更轻松的迁移和扩展">更轻松的迁移和扩展</h3>
<p>可在任意平台运行，更好的实现迁移。</p>
<h3 id="更简单的管理">更简单的管理</h3>
<p>简单修改，以增量的方式分发和更新，实现自动化和高效管理。</p>
<h2 id="基本概念">基本概念</h2>
<hr>
<h3 id="镜像（Image）">镜像（Image）</h3>
<p>Docker镜像就是一个只读模板。<strong>例如：一个镜像可以包含一个完整的 ubuntu 操作系统环境，里面仅安装了 Apache 或用户需要的其它应用程序。</strong></p>
<p>用户通过简单的机制创建或者更新现有的镜像。</p>
<h3 id="容器（Container）">容器（Container）</h3>
<p>Docker利用容器运行应用。容器是从镜像创建的运行实例。它可以被启动、开始、停止、删除。<strong>每个容器都是相互隔离的、保证安全的平台</strong>。</p>
<h3 id="仓库（Repository）">仓库（Repository）</h3>
<p>仓库是集中存放镜像文件的场所。概念与Git相似，注册服务器可以理解为Github这样的托管服务。所以Docker也有仓库和仓库注册服务器的概念。</p>
<p>仓库分为公开仓库（Public）和私有仓库（Private）两种形式。最大的公开仓库是 <a href="https://hub.docker.com/" target="_blank" rel="external">Docker Hub</a>，存放了数量庞大的镜像供用户下载。 国内的公开仓库包括 <a href="http://dockerpool.com/" target="_blank" rel="external">Docker Pool</a> 等，可以提供大陆用户更稳定快速的访问。</p>
<p>用户也可以自己创建一个私有仓库，通过<code>push</code>命令上传，通过<code>pull</code>命令下载。</p>
<h2 id="安装">安装</h2>
<hr>
<p>官方网站上有各种环境下的 <a href="https://docs.docker.com/installation/#installation" target="_blank" rel="external">安装指南</a> ， 不再赘述。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>来自：<a href="https://www.gitbook.com/book/yeasy/docker_practice/details" target="_blank" rel="external">Docker 从入门到实战 Gitbook</a></p>
<h2 ]]>
    </summary>
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
      <category term="Docker" scheme="http://yoursite.com/categories/Docker/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[阶段读书总结]]></title>
    <link href="http://yoursite.com/2015/03/15/%E9%98%B6%E6%AE%B5%E8%AF%BB%E4%B9%A6%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2015/03/15/阶段读书总结/</id>
    <published>2015-03-15T15:19:30.000Z</published>
    <updated>2015-09-25T07:37:21.000Z</updated>
    <content type="html"><![CDATA[<p>很长时间没有更新这个博客了，其实常常责备自己难道又要三分钟热度的放弃了这个博客了么。</p>
<p>不过虽然博客没有更新文章，但是文章一直在写，每天千字，如今已经积累了一百多篇，不过一直觉得自己思考的东西，没必要总是更新在博客里。博客里更新的应该是比较成熟的而且更加思想密集的文章，所以就一直搁置下来，包括阅读笔记也没有更新。</p>
<p>大概在今年年中的时候，环境发生变化后，我可能会改变很多学习方式，这个博客就会继续更新，并且确保自己处在高效思考的状态。</p>
<p>下面是2015年截至现在的阶段读书统计，算是一个归档。</p>
<p>———<br>已读书目（包含部分阅读过半，觉得没算太好但会抽时间看完的书）：</p>
<blockquote>
<p>由于之前没有看完记录的习惯，于是归档的书籍没办法统计时间及先后顺序，而且对一月一号这个分界线前后阅读的书区分有些忘记，所以只能按照自己模糊记忆中的整理。</p>
</blockquote>
<ul>
<li>《参与感》小米公司的营销方法书，黎万强写的，写的还不错，记住了那句，台风口上，猪都会飞起来。</li>
<li>《意志力》 如书名，讲解了意志力这东西，意志力的特点和如何锻炼意志力。书不错，意志力就像肌肉，过度使用就会疲劳，长期锻炼就会增强。</li>
<li>《演讲之禅》 介绍演讲的前前后后和真谛，看的有点早，很多内容现在接触不到，有一定意见性，对以后如果做演讲会有好处。</li>
<li>《风起陇西》 马伯庸的小说，三国背景的谍战题材，脑洞大开，文笔顶棒，马亲王一生粉。</li>
<li>《习惯的力量》 讲述习惯存在的意义和具有的能量，以及如何养成良好的习惯。不过事例太多，口水太多，读一半准备弃掉，再看一部分，看还有希望没。</li>
<li>《激荡三十年》上  可以归在在读的行列，不过打算按照速读的方式进行，因为有很多内容可能对我来说意义不大，讲述七八年改革之后国家经济的起起落落，本意是想要了解一下这三十年来经济资产的发展之路。</li>
<li>《超级时间整理术》 个人时间管理方面的知识，有一定用处，不过和之前一些看过的东西，以及自己的认知重合，算是强化认识吧。</li>
<li>《来到地球的第一天》 大象公会的第一本书，算是热知识冷知识的合集，挺有意思，适合我这种好奇心比较浓厚的人。</li>
<li>《暗时间》 刘未鹏的博客合集，前半部分对我触动比较大原因是发现自己思考的东西，原来别人也已经思考过，而且也总结的很棒了。更加激励我坚定的走下去。</li>
<li>《把时间当做朋友》 李笑来的书，是知道了刘未鹏之后知道了李笑来，也是一个个人时间管理方面的书，比较有实战意义，不过很多事情还是因人而异，只有懂了原理和真谛，具体的方法还是要看自己了。</li>
<li>《阮一峰博客文集：如何变得有思想》 比较失望的一本书，本来以为是比较有深度思考的书，结果发现其实就是一些特别简单的阅读笔记和思考总结，难不成我的日记整理整理也能出本书？虽然阮一峰比我牛逼太多，不过还是觉得书没那么好。</li>
<li>《野蛮生长》 一开始喜欢这书名买来看的，发现冯仑这人确实非常有才华，看待事物非常清楚，分析的很透彻，书没看完，是因为觉得虽然分析的很好，可是总觉得和自己关系不大，有些伤感。</li>
<li>《古董局中局3》 马亲王的书，不解释，第三部，依然好。</li>
<li>《新经济，新规则》 KK的书，考虑到写这十大未来特点的年代，KK果然是牛人。</li>
<li>《苗疆蛊事》 近年来唯一看完的一本快餐小说，马亲王以前推荐的，有点意思</li>
<li>《故事：材质，结构，风格和银幕创作的原理》  应该是编剧的宝书，买来看看纯属求知欲，指不定什么时候想写个剧本什么的。</li>
<li>《罗辑思维》  是罗辑节目的一个合集，罗辑也是思维挺独特一个人，而且见识挺广，所以读来也有意思，这样看合集的方式要好过一集一集的看节目。</li>
<li>《穿布鞋的马云》  看这本书也是源于当时马云成为首富，我对这个人的风云故事比较感兴趣，觉得这个人看起来很闷，但内在一定很丰富，所以拿来看看。</li>
<li>《三十六大》 冯唐的书，冯唐的文字风格有北京人那种痞气，读起来酣畅淋漓但是总觉得有点过了，可能是他这个人确实才华出众所以才睥睨万物吧，我想起了和菜头。</li>
<li>《亵渎》 网文，开头烂得读不下去，但是总是很多人推荐，正好那段时间心情不好，压着读了前边，后边写的好了一些，不过其实感觉也好不到哪去，不知道自己有没有闲工夫把它看完。</li>
</ul>
<hr>
<p>共计20本，考虑到一年阅读一百本书的计划，平均每月需要阅读八本，到今天刚好符合进度。</p>
<p>特点：</p>
<ul>
<li>阅读难度不高，整体没有什么难度的书要啃，没有什么专业类书籍，一方面是因为环境的原因，专业类的书籍有看，但是进度很缓慢，缺少大块的消化时间。</li>
<li>归档整理不及时，一来没有登记，二来没有整理读书笔记。</li>
<li>没有计划，选择看的书，基本没有什么计划，就是看完一本，挑选挑选就开始看下一本。</li>
<li>阅读心得没有继续下去，去年说的要写阅读笔记来着，结果没有坚持下去，可能环境原因占一部分。</li>
</ul>
<hr>
<p>在读：</p>
<ul>
<li>《算法心得》</li>
<li>《编程珠玑》 &amp; 《编程珠玑续》  三本算法类的书，装逼利器，可是看起来挺折磨的，第一天看了几页，花费了半个上午的时间，需要慢慢消化。</li>
<li>《IOS开发指南》，虽然还没有彻底开始打算做IOS的开发，但先作为入门知识了解一下也是好的，毕竟自己这么多语言都想好好学学，不得都先入个门。</li>
<li>《梁文道：我读1》，属于是不想细看的书可以在这了解，想看的书可以在这看下介绍，看过的书在这看看他怎么看。</li>
<li>《上帝掷筛子么？量子史话》 很早以前其实就看了一部分，貌似当时是因为看的盗版的epub，不完整，影响阅读体验，就搁置了，在多看买回来之后，想着把它补完。</li>
<li>《结网》 PM的书，目前离这个职位比较远，直接想当PM的人，其实很大部分都自以为能力足够了，看了本《人人都是产品经理》等几本书，觉得就可以胜任了。想要往这发展，预计自己还有大约五十本相关类的书要看完并有相应五十篇以上的思考。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>很长时间没有更新这个博客了，其实常常责备自己难道又要三分钟热度的放弃了这个博客了么。</p>
<p>不过虽然博客没有更新文章，但是文章一直在写，每天千字，如今已经积累了一百多篇，不过一直觉得自己思考的东西，没必要总是更新在博客里。博客里更新的应该是比较成熟的而且更加思想密集]]>
    </summary>
    
      <category term="阶段总结" scheme="http://yoursite.com/tags/%E9%98%B6%E6%AE%B5%E6%80%BB%E7%BB%93/"/>
    
      <category term="个人总结" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一周阅读笔记（2015年第三周）]]></title>
    <link href="http://yoursite.com/2015/01/19/%E4%B8%80%E5%91%A8%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0%EF%BC%882015%E5%B9%B4%E7%AC%AC%E4%B8%89%E5%91%A8%EF%BC%89/"/>
    <id>http://yoursite.com/2015/01/19/一周阅读笔记（2015年第三周）/</id>
    <published>2015-01-18T16:06:14.000Z</published>
    <updated>2015-01-18T16:07:08.000Z</updated>
    <content type="html"><![CDATA[<p>上周给忘记写读书笔记了，其实最近书看的不少，却没有哪本让我发自内心的想好好写篇读书笔记，结果就晃悠晃悠的过了一周又一周，眼看这第三周又要结束了，于是就把最近读的书感兴趣的一些东西汇总一下，写篇读书笔记吧。</p>
<h2 id="1">1</h2>
<blockquote>
<p>整体性学习的顺序： （1）获取 （2）理解 （3）拓展 （4）纠错 （5）应用 还有一个测试步骤是伴随上述每一步的。</p>
<ol>
<li><strong>获取</strong>　获取就是信息进入你的眼睛和耳朵，阅读、课堂上记笔记以及个人的种种经历都是获取。获取阶段的目标是获取的信息要准确，信息量要尽量压缩。</li>
<li><strong>理解</strong>　理解就是了解信息的基本意思，并放在上下文中联系，这是学习的最基本联系。</li>
<li><strong>拓展</strong>　拓展阶段是整体性学习中最花力气的地方，这一步将形成模型、高速公路和广泛的联系，从而获得良好的结构。<br>4.<strong>纠错</strong>　纠错阶段是在模型和高速公路中寻找错误，这个阶段要删除那些无效的联系。</li>
<li><strong>应用</strong>　应用把纠错带入最后的水平，通过比较（知识）信息是如何在现实中运行的来进行调整，如果理解不符合现实世界，那么再多也无用。在这一步中失败的典型例子就是书呆子，即那些读书读得很好但是出了学校大门却茫然不知所措的家伙。</li>
<li><strong>测试</strong>　上述阶段的每一步都需要测试，测试有助于你迅速找到学习中的问题所在，帮助你改进学习技术，克服缺点。</li>
</ol>
<p>—from 《如何高效的学习》</p>
</blockquote>
<p>这本书只用了半天读完的，感觉干货不多，也就是提供了一套学习的方法，至于是否高效，还真的需要在实践中去找寻方法。以上引得是这本书对学习过程的一个总体的顺序，针对这六步骤，作者也算是简单的讲述了一下，我觉得还是要自己去发现适合自己的高效学习法。</p>
<ul>
<li>获取阶段，要探索如何简化知识，也就是如何快速剔除无用的知识。要探索如何扩容自己的知识体系，探索如何保证高速的阅读。</li>
<li>理解阶段，是要建立起一个高效的逻辑思维，高效的吸收知识。</li>
<li>拓展阶段，本阶段是要在个人的知识体系之间建立良好的联系，确保让自己的知识不是孤立在自己的学习体系中。</li>
<li>纠错阶段，本阶段用于复查所获取的知识有没有逻辑上的错误，有没有错误的知识。</li>
<li>应用阶段，对一部分重实践型的知识来说，应用是重中之重。</li>
<li>测试阶段，相当于每个阶段的调试，作者是这么说的：<strong>获取阶段的测试——我以前看过或听过这个知识吗？ ·理解阶段的测试——我理解知识的含义吗？（至少是字面上的意思。） ·拓展阶段的测试——我知道知识从何而来，与哪些知识有关系吗？ ·纠错阶段的测试——我删除了那些不恰当的联系吗？我删除了那些错误结论吗？ ·应用阶段的测试——我将知识用到实际生活中了吗？</strong></li>
</ul>
<p>所以下一步，自己要花时间总结出一套适合自己的学习法。</p>
<h2 id="2">2</h2>
<blockquote>
<p>年轻人在城市获得的更多东西，远不仅仅是肉身之间非延时的沟通，更重要的是见识。其实见识跟经济地位和聪明程度没多少关系，和是否在大城市生活有关。北京随便一个四五岁的小孩站在街边上，也许什么名车都认识，他们家的车库可能跟国贸的车展也没什么区别。而一个外地的农村大学生，可能学问很高但缺乏见识。这就是城市生活给人类灵魂世界带来的最丰厚的一笔财富。<br>—from 《罗辑思维》</p>
</blockquote>
<p>这后边的比喻有点偏颇了，但是观点还是比较赞同的，赞同的原因是因为来到这个小城市工作之后发现的，虽然这个小城市在经济上并不落后，但总是发现在世界观和价值观上，有着许多让我难以理解的地方。这也是为什么最近那么多人嚷嚷着逃回北上广，其实只是因为他们从大城市逃离回到自己小时候成长的家乡时，才发现他们在城市里已经习以为常的观念或者事物，无处可寻，发现自己的价值观和周围人不在一个维度。</p>
<p>虽然自己不是大城市出来的孩子，但是也能体会到罗辑讲的有关大城市的聚集效应的逻辑。</p>
<h2 id="3">3</h2>
<blockquote>
<p>刘慈欣得出的结论非常特别，他说在地球这样一个星体上搞环保完全没有必要。他给我们看了一幅图，是发射到外太空的一个小型探测器回望地球时拍下的照片。从多远的地方回望的呢？64亿公里，也就是从地球到太阳距离的40倍之远回看地球，然后拍下了这张照片。在这张照片中你还找得着地球吗？找得着，不过得用显微镜去找。就是一个小小的灰点而已，看上去地 球就是宇宙中的一粒尘埃。<br>—from 《罗辑思维》</p>
</blockquote>
<p>这里罗辑讲了个很有趣的话题，就是环保真的有必要么。按照大刘的说法，从宇宙的尺度上来看，地球就是一粒尘埃，我们人类真的有必要在一粒尘埃上去拂拭尘埃么。我们提保护资源，保护地球环境，每年在环保上投入的钱有近万亿，可是投入在外太空探索上的资金不过百亿。为什么不花更多的钱去研究和探索外太空呢，宇宙广袤，外边是无边无际的资源和空间，为什么只把目光定格在宇宙的这一尘埃上呢。</p>
<p>当然，这个观点漏洞很多，比如说人类环保是因为要保证当下人类生活环境的健康，保证人类的正常繁衍，比如保护资源是为了确保人类的发展不会出现资源断层，引起全球资源荒。</p>
<h2 id="4">4</h2>
<blockquote>
<p>耶鲁大学的经济学家Nancy Qian以及哈佛大学的经济学家Nathan Nunn做过一个调查，他们从1972年一直跟踪到2006年，发现一个国家得到的粮食援助每增加10%，这个国家的暴力动乱程度就会增加1.14%。道理很好理解，因为一个底层的贫民，是没有办法直接拿到援助粮的。一部分援助粮被政府官员贪污走，另一部分就是权力大的是哥哥，枪杆子里出政权。那些反政府武装、游击队，这些有组织的暴力会劫持这些粮食，从而变得更加强大。 最典型的就是索马里，大量的捐助粮都在半途被武装组织，比如海盗、游击队、反政府武装劫持。底层老百姓的境况几乎没有改善，这就是慈善的一大难处。</p>
</blockquote>
<p>慈善，是一个非常有争议的话题，中国的红十字会过去几年经常处在风口浪尖，颇多非议。罗辑讲的坏慈善，是指的引文中所讲的这种援助粮被侵吞的情况。其实，以国家层面做的这种慈善事业，并非普罗大众想象中的那么简单，它是放在国际政治的背景下进行的，中国近几年大力气援助非洲国家，更大的原因并非来自所谓的国际人道主义精神，而是为了与非洲各个国家建立良好的关系，在这种良好的关系之上，可以有更多的计划和发展项目可以继续进行，而至于真正饥荒的难民，其实仅仅是最后要考虑的问题。</p>
<p>在中国古代，朝代更迭或者是朝代衰亡的最大导火线，就是饥荒，朝廷一般情况下也都会发赈灾粮救济灾民，但一般来说，这种行为基本上对饥荒没有多大的缓解作用，因为腐朽的封建王朝，是一坛酱缸，基层的官员基本上是以腐败为主，劣币驱逐良币，大部分的赈灾粮基本上都被当地官员和巨贾瓜分殆尽。</p>
<p>所以，慈善是一件看起来很美好，做起来很复杂的事业。</p>
<h2 id="5">5</h2>
<blockquote>
<p>你不知道，古董行当里，有三劝之说。哪怕是拿赝品骗人，对方临要买前，骗子得劝上三回，以示不负良心。劝了三回，对方还不醒悟，那就是自己作死，命中注定要被我骗了。”<br>—from 《古董局中局》3</p>
</blockquote>
<p>马伯庸的博学在我看过的小说里比较少见，以前被惊艳到的是张大春的《城邦暴力团》，掉书袋子让我佩服的五体投地。</p>
<p>这里也就是引一段觉得有意思的话，中国古人讲盗亦有道，所以中国的各行各业似乎都明着暗着有些行规，这种行规，似乎是行业里的人不约而同为自己设立的一个道德底限，文中说这个三劝之说，便是这样一个意思。所以说，在西方依靠宗教建立起群体的心理依赖时，中国完全依靠这种“道”，建立起了群体的道德规范。</p>
<p>当然，到今天这种所谓的底限意识已经一次次被打破，江湖和道上规矩，也零零碎碎荡然无存。</p>
<h2 id="6">6</h2>
<p>《新经济，新规则》</p>
<ol>
<li><strong>Embrace the Swarm拥抱集群</strong> 当力量逐渐远离中心，竞争优势属于那些懂得接受去中心化控制点的人。</li>
<li><strong>Increasing Returns回报递增</strong> 随着人与物之间连线增加，这些连线的效果快速地倍增，你取得的初步成功将不再是自我限制的，而是自我供给的。</li>
<li><strong>Plentitude, Not Scarcity普及，而非稀有</strong> 制造工艺趋于完美，使大批量复制越来越容易。因此，价值产生于普及，而非稀缺性，这颠覆了传统的商业定律。</li>
<li><strong>Follow the Free追随免费之道</strong> 随着资源匮乏性将让位于资源充足性，慷慨将带来财富。坚持免费印证了价格下滑的必然性。学会利用真正匮乏的资源，那就是人的注意力。</li>
<li><strong>Feed the Web First优先发展网络</strong> 网络使各种商贸业务纠缠在一起，公司的关注重心从最大化公司价值转移到最大化网络价值。除非你适应网络效应并使其运作，公司才不至于灭亡。</li>
<li><strong>Let Go at the Top不要在巅峰逗留</strong> 创新不断加速，抛弃那些目前极为成功，但是最终会因为守旧而被淘汰的公司将是最困难但最根本的任务。</li>
<li><strong>From Places to Spaces. 从地点到空间</strong> 物理层面的临近（地点）将被大量的互动所代替，这些互动存在于任何事物、时间与地点之间（空间）。中介、中间人以及中型利基市场将大幅扩大。</li>
<li><strong>No Harmony, All Flux和谐不再，乱流涌现</strong> 商业世界中，动荡与失衡成为常态，因此最高效的生存状态是持续的选择性破坏，我们称之“创新”。</li>
<li><strong>Relationship Tech关系技术</strong> 软性技术胜过硬性技术，最强大的技术是能够提高、放大、延伸、增进、提取、召回、扩展或者建立各种软性关系的技术。</li>
<li><strong>Opportunities Before Eciencies机会优于效率</strong> 人类不断完善机器，使其变得越来越高效，并以此创造财富。但是还有巨大的财富等待人类发掘，它可能意味着低效的发现，也可能是新机会的创造。</li>
</ol>
<p>——互联网时代的十条规则</p>
<h2 id="7">7</h2>
<blockquote>
<p>新达尔文主义把蝴蝶翅膀的每一次扇动，叶片上的每一条曲线，鱼的每一个种类都归于适应性选择来解释。似乎没有什么不能归结为适应的结果。可是，正如理查德·莱旺顿这位著名的新达尔文主义者所言，“正是因为自然选择什么都能解释，所以它其实什么也没有解释”。<br>———from 《失控》</p>
</blockquote>
<p>如今，达尔文的进化论，仍然是被定为假说，因为它仍然存在争议的地方，那些争议的地方，包括达尔文进化论的研究者至今也无法解释的内容。比如人得眼睛，设计精巧且相互作用的晶状体、虹膜、视网膜等结构，看起来确实挑战了达尔文那种“轻微、累进的”随机改进机制的可信度。<strong>正如达尔文在给他的美国朋友阿萨·格雷的信中所写的：“你说的弱点我同意。直到今天，眼睛还是会让我不寒而栗。”</strong></p>
<p>格雷所遇到的困难，是他想不出在一个没有进化完全的眼睛中，某些部分会有什么用处，也就是说，他想不出一个没有晶状体与之配套的视网膜，或者反过来，没有视网膜与之配套的晶状体能对它的拥有者有什么用处。而既然生物不会囤积它的发明（“哈，等熬到白垩纪这东西就有用了！”），那每个阶段的物种进步就都得是马上就能用上、能产生效果的。每次突破，都必须首演即获成功。即使是聪明的人类也无法为这么久远以后的挑剔需求而矢志不渝地谋划。</p>
<h2 id="8">8</h2>
<blockquote>
<p>有一个高度灵活的基因官僚机构管理着其他基因的生活。最令人惊讶的是，所有生命，从果蝇到鲸鱼，都授权同一个基因管理局实行管理。比如说，在每一种脊椎动物体内，都能发现几乎完全相同的同源异形盒自控序列（这是一段主开关基因，可以打开大段的其他基因）。<br>——from《失控》</p>
</blockquote>
<p>前些天看的《I型起源》这个电影，其中也是用了这样一个线索，反达尔文的研究者在研究这些非随机突变的时候，有许多非常有意义的发现和推论，上边就是一个。I型起源这个电影里讲的是，主角认为所有动物的基因中应该存在一个控制眼睛的开关基因，可以控制眼睛的产生。</p>
<p>其实这样的理论有一定的颠覆性，因为它几乎是在背着达尔文进化论的研究方向进行的，文中又说：</p>
<blockquote>
<p>变异可以通过某种有意的、精心准备的方式来选择。与其说基因管理局仅仅对随机变异进行编辑，不如说它按一些计划表自己产生出变异。基因组为特定目的会创造出突变。定向突变可以刺激自然选择的盲目进程，把后者带出泥潭，将其推向越来越复杂的状态。在某种意义上，有机体会自编自导出突变以响应环境因素。多少有点讽刺的是，这种定向突变的强势看法在实验室里获得的证据，比弱化的非随机看法更多更过硬。</p>
</blockquote>
<h2 id="结语">结语</h2>
<p>翻看这几天记录的书摘，发现好内容很多，而且有些内容竟然已经开始在遗忘了，前边讲了高效学习的方法，其实知识体系的建立，必然要考虑到知识的记忆。所以，保持整理读书笔记的习惯，分类读书笔记，也算是一种高效学习的手段。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>上周给忘记写读书笔记了，其实最近书看的不少，却没有哪本让我发自内心的想好好写篇读书笔记，结果就晃悠晃悠的过了一周又一周，眼看这第三周又要结束了，于是就把最近读的书感兴趣的一些东西汇总一下，写篇读书笔记吧。</p>
<h2 id="1">1</h2>
<blockquote>]]>
    </summary>
    
      <category term="weekly note" scheme="http://yoursite.com/tags/weekly-note/"/>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[游戏设计迷思]]></title>
    <link href="http://yoursite.com/2015/01/14/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E8%BF%B7%E6%80%9D/"/>
    <id>http://yoursite.com/2015/01/14/游戏设计迷思/</id>
    <published>2015-01-14T14:43:50.000Z</published>
    <updated>2015-01-14T14:48:54.000Z</updated>
    <content type="html"><![CDATA[<p>因为之前写的那篇「读书是追赶时间的方式」，里边讲到了游戏的终极设计原理都一样。写这句话也是因为之前看过一篇相关的文章，现在已经踪迹难寻，另外我也确实同意这个观点，因为游戏的终极设计之路是从心理学上开始的。后来，赵飞问了句，游戏的终极设计原理是什么？我觉得应该试着去分析一下游戏的存在意义和设计原理，当然我自己并没有钻研过这方面的知识，又不是相关行业的人员，也只能是查查资料，以自己的想法为主。以简练为主，更多的思考内容，可以留在以后添加。</p>
<h2 id="始于心理学">始于心理学</h2>
<p>记得之前一个心理学和经济学双修的作者在谈经济中的消费心理学时，说他学心理学的同学里，最优秀的去制作游戏了，然后是去经商了，最后剩下的才留在了心理学的岗位上。固然说的有点夸张，但基本可以看出来，游戏的设计，最重要的就是如何把握玩家心理。<br>那么游戏的目的是什么呢，从远古还穿着草裙狩猎的原始人就已经有了游戏，到古代的射覆，蹴鞠，一直到今天的体育对抗。这些都是人类生存中的游戏，它们共有着对抗的特征，这是源于原始人的强者生存，族群之间的战斗是用生命搏杀的，要想保存族群长生不灭，只有保持最强大的战斗力和时刻旺盛的求胜欲（或者说是求生欲），所以，游戏的对抗性是它存在的意义。</p>
<p>这一意义一直保留到了今天的电子游戏中。今天所玩到的所有游戏，对抗性都是设计的必须先考虑的，人与人对抗，人与游戏中设置的环境对抗，分别对应了原始部落中部落间的对抗和人类与自然的对抗。</p>
<p>所以，从游戏的起源上看，所谓电子游戏，也是和其他游戏同源的，并没有谁比谁更玩物丧志的道理。体育竞技，棋牌对抗，甚至于抠麻将轮盘赌，本质上和电子游戏是相同的。所以今天电子游戏所面临的舆论，其实是不健康的一种舆论状态。当然了，大概是两三年前开始，中国的社会舆论已经开始逐渐接纳电子游戏作为竞技游戏的地位，游戏产业也得到了国家经济部门的肯定。其实，这只是因为爱玩游戏的八零后们已经开始掌握话语权，并且逐渐从电子竞技中建立了早期的发展模式。而老一辈们扼腕长叹着“游戏不死，下一代必将垮掉”，继续痛恨电子游戏，但已经于事无补了。</p>
<h2 id="游戏的奖励机制">游戏的奖励机制</h2>
<p>前边说了那么多，好像都没有说到重点。因为我自己强调了玩游戏会让自己变得空虚，日子变得无意义，这就聊一聊游戏的设计。</p>
<p>游戏设计的最核心就是<strong>奖励机制</strong>，这种奖励机制就像是实验室里，测试大猩猩行为训练的香蕉一样，如果你完成了规定的任务，就会收获想要的香蕉。在所有类型游戏中，判定胜负和游戏模式千差万别，但都逃不过奖励机制，缺乏奖励机制的游戏就不能称之为游戏了。</p>
<ul>
<li>比如网络游戏中刷完副本会奖励装备和金币，RPG游戏在阶段剧情完成后，会奖励人物的升级，以及后续剧情（没错，后续剧情就是RPG游戏的奖励之一）；</li>
<li>比如类Dota的MOBA游戏的奖励是胜利，是杀戮的快感，而跳出的红字以及震撼的背景音都强化了这种奖励；</li>
<li>策略类游戏的奖励，就是给予你作为领袖的支配感和攻城略地的快感，通过逼真的音效，胜利的欢呼，甚至是敌军的求饶强化奖励。</li>
<li>文明等养成类的游戏的奖励，是获得上帝视角的奖励，通过全景的观感和完全的服从意识来给予奖励。</li>
<li>虚拟现实的游戏，比如体育竞技类，棋牌类就不用说了，他们是根植于现实中的游戏的。</li>
</ul>
<p>还有更多的游戏分类，不用一一讲明，我们就可以很清楚地看到，游戏的核心在于<strong>奖励机制</strong>，只有将奖励悬置于游戏的后面，才能让玩家这群大猩猩去完成任务。</p>
<h2 id="游戏的基本元素">游戏的基本元素</h2>
<p>刚才说的<strong>奖励机制</strong>，我想应该算是游戏为什么能存在，我为什么说游戏都是雷同的原因，当然可能会遭到很多反驳，比如有人会觉得，那按照这么说，人在生活中的一切事物，都可以理解为是雷同的，因为完成任务不都是为了获得最终的奖励嘛。这么理解也对，那我们就继续对电子游戏再探究探究，进一步抓取游戏的本质雷同属性。</p>
<p>游戏的四个基本要素是什么。</p>
<ul>
<li>游戏机制</li>
<li>故事设定</li>
<li>美学表现</li>
<li>实现技术</li>
</ul>
<p>那么这四个要素里，前两个是核，后两个是皮，所以后两个可以不作为分析的对象。</p>
<p>先看游戏机制，游戏机制是整个游戏的中心地位，刚才我所说奖励机制是游戏核心，是从心理学的角度说的，而游戏机制作为核心，是从游戏设计的角度上是核心，它大致有六个机制：</p>
<ul>
<li>空间</li>
<li>对象，属性</li>
<li>行为</li>
<li>规则</li>
<li>技能</li>
<li>偶然性</li>
</ul>
<p>（篇幅有限，就不一一讲述，感兴趣的人可以买《全景探秘游戏设计》这本书，是本非常干货的好书，六个机制也就是从书中引出来的。）</p>
<p>六个机制可以看出来，游戏的设计之路，完全是遵循着这么一套的流程出现的。游戏始于灵感，然后进入这样一个流水线进行加工，形成一个游戏模型，然后再进行美学表现和实现技术的加工，形成一个成品。</p>
<p>那么这个流水线都包含哪些东西呢，换句话说，就是游戏机制在设计中，遵循了哪些原则，要考虑哪些因素？其实玩游戏多的人，想一想也就知道了，无外乎以下几点：</p>
<ul>
<li>公平性：这是为了保持玩家之间公平竞争的健康发展</li>
<li>挑战与成功</li>
<li>有意义的选择：增加选择性，是为了创造游戏所谓的多样性~</li>
<li>技能与几率：网络游戏，RPG之类的首要考虑</li>
<li>动脑与动手：</li>
<li>对抗与协作：</li>
<li>奖励与惩罚：上一章节探讨过</li>
<li>简单和复杂：</li>
<li>自然与人工平衡：</li>
<li>细节和想象力：</li>
</ul>
<p>从上边这套流水线生产下来之后，游戏就成为了一个半成品，只需要在加上皮，就可以正式的投入社会，面向玩家了。</p>
<p>从这套流水线你看到了什么呢，其实应该看到的是，游戏设计的所有核心，都是为了刺激玩家的感官和心理，让玩家收获来自游戏给予的满足感，而其中包含的奖励机制又刺激玩家持续的跟进，为了获得更多的奖励和更大的满足。</p>
<h2 id="游戏设计的更多探讨">游戏设计的更多探讨</h2>
<p>经过前边的探究之后，我确实是要修正一下我的观点。游戏的终极设计原理，从心理学上是相同的，但是整个游戏的设计过程，其实是和艺术创作的过程是相似的，是拥有着非常大的创造性在里边的。这两天正在看剧本创造的宝书<strong>《故事：材质、结构、风格和银幕剧作的原理》</strong>，感觉剧本的创作和游戏的设计拥有着相似之处，所以这也激起了我更多的兴趣，对游戏创作的原理进一步探究。</p>
<p>继续沿着心理学的路，分析游戏设计，以下是在《全景探秘游戏设计艺术》中提到的相关内容：</p>
<blockquote>
<p>男人喜欢在游戏中见到的5样东西：征服、竞争、破坏、空间谜题、尝试与失败。</p>
<p>女人喜欢在游戏中见到的5样东西：情感、真实世界、照料、对话和字谜、照实例学习。</p>
<p>巴特尔的玩家类型分类：成功者、探险家、社交者和杀手。</p>
<p>马克勒布朗的游戏乐趣分类法：感受、幻想、叙述、挑战、伙伴关系、探索、表达和服从。</p>
</blockquote>
<p>这和剧本的创作具有非常大的相似性，男人热衷于战争、强对抗、暴力、宏大，而女人更喜欢温柔、情感、关爱、解答。正如兄弟连是男人的电影一样，使命召唤属于男人，而养成类的模拟人生则吸引更多的女性玩家。</p>
<p>所以说，游戏在设计之后，和影像作品一样，拥有着丰富无穷的发挥空间，而且有着比影像作品更强的参与性。</p>
<h2 id="电子游戏的空虚感和罪恶">电子游戏的空虚感和罪恶</h2>
<p>那为什么游戏会带来巨大的空虚呢，于是我从新审视这个问题，又有了不同的想法。<br>首先，因为电子游戏带来了前所未有的代入感，让玩家体验了更加真实的虚拟世界，虚拟世界带来的巨大的梦幻的场景，刺激玩家产生大量的多巴胺和肾上腺素，带来愉悦。一旦在游戏结束后，随着场景的消失，多巴胺和肾上腺素的消退，玩家就会感觉到失落，于是是巨大的空虚感。</p>
<p>想象一下自己在平时看喜欢的小说，当小说完结的那一刻，是不是同样也有着一种特别的失落感，因为小说在你内心构建起来的虚幻空间坍塌了。</p>
<p>另外，游戏最大的罪恶在哪里呢？原因就在于，游戏的产生和制作本身，是完全以盈利为目的的。它的创作过程，完全是以心理学为基础，最大限度地去刺激玩家产生更多的多巴胺，获得更多的愉悦感，以期在该游戏上投入更多。而网络游戏更是为了能够利用重复循环的游戏模式长期的吸引玩家，心理学上的知识无所不用其极，造成了部分玩家沉迷其中无法自拔。</p>
<p>正是因为这种从盈利为本质出发点制作出来的作品，自然带着罪恶，所以才会遭受更多人唾弃。而如书籍，则是首先来自作者自身的创作冲动，电影则是一群人的艺术追求方式，体育竞技则是人类的天生战斗的基因。</p>
<p>电子游戏，如同好莱坞的爆米花电影，起点中文的打怪升级小说一样，构建起虚幻又无用的想象空间，让玩家享受完带来的快感后，又什么都不留下的消失，这对人生是完全无正相关意义的，完全是在虚耗生命，浪费时间。</p>
<p>然而我们所说游戏是不带有正收益的事物，并非绝对，比如文明系列，对古文明历史的还原，有着超越书籍和电影的代入感；军事类游戏，更是早已进入美军高级指挥所，在美军巨量信息库的支持下，用来模拟战争的细节，短时预测战争走向。</p>
<h2 id="结语">结语</h2>
<p>其实写着写着发现自己已经脑袋有些混乱了，所以还是早点总结吧。毕竟游戏作为新崛起的文化产业，它所带来的话题和辩论，一时两刻是无法讨论清楚地，我自己在这里梳理想法，也只能是简单地讲清楚部分问题。</p>
<p>总的来说，通过这篇文章，扭转了之前用二元论直接否定电子游戏的作法。当然，作为玩家自身，人都有自由支配自己生命的权利，即使是将整个生命投身到游戏中去，只要自己认为是有意义的，那旁人就无权干涉。</p>
<p>我写这篇文章也只是为了提醒自己，任何事物都不可怕，可怕的是自己无法看清楚。电子游戏作为紧密联系着信息时代，互联网时代的娱乐产业，去了解它和接触它，对于了解社会，也有着一定的帮助，所以自己平时可以适当的接触部分游戏，能获得不少的灵感。</p>
<p>最后，一句老话送给自己。</p>
<blockquote>
<p>上帝,请赐予我平静, 去接受我无法改变的。 给予我勇气, 去改变我能改变的, 赐我智慧, 分辨这两者的区别。</p>
</blockquote>
<p>——</p>
<p>发现语言组织能力，还是不足，中间自己思路不清晰的时候，很难组织起明晰的逻辑语言。希望以后能够学习如何用更加简洁和直白的语言讲清楚问题。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>因为之前写的那篇「读书是追赶时间的方式」，里边讲到了游戏的终极设计原理都一样。写这句话也是因为之前看过一篇相关的文章，现在已经踪迹难寻，另外我也确实同意这个观点，因为游戏的终极设计之路是从心理学上开始的。后来，赵飞问了句，游戏的终极设计原理是什么？我觉得应该试着去分析一下游]]>
    </summary>
    
      <category term="心理学" scheme="http://yoursite.com/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
      <category term="Study" scheme="http://yoursite.com/categories/Study/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[读书是追赶时间的方式]]></title>
    <link href="http://yoursite.com/2015/01/09/%E8%AF%BB%E4%B9%A6%E6%98%AF%E8%BF%BD%E8%B5%B6%E6%97%B6%E9%97%B4%E7%9A%84%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2015/01/09/读书是追赶时间的方式/</id>
    <published>2015-01-09T15:56:37.000Z</published>
    <updated>2015-01-09T15:58:35.000Z</updated>
    <content type="html"><![CDATA[<h4 id="写在前边的闲话：">写在前边的闲话：</h4>
<blockquote>
<p>本文纯粹是一篇闲来的随笔，又好像恢复了以前晦涩的感觉，偏意识流一些了。其实大多数时间自己在这种时候，思考的方式更纯粹一些。本周终于看完了《失控》，后小部分理解起来越来越费劲，所以常常读完一大块会停下来思考一下，KK在资料的丰富度上是此类书籍里比较少见的，见解也有很多独到或者是在今天社会有些离经叛道的。</p>
<p>本周看完的另外几本书是《易中天中华史》中国根系列的的后两本，越来越口水，不过有那么几个观点还挺有趣。把node.js的一本开发入门又看了一遍，发现比django更轻量一些，或者说是我了解的还不够？</p>
</blockquote>
<h2 id="正文">正文</h2>
<p>这世界上，有无数东西是不可逆的（或者严谨一些说，目前看来是不可逆的），比如熵，比如时间，比如容颜和青春。</p>
<p>作为三维动物，我们永远只能在时间线的上匀速前进，无论你是感慨万千伤春悲秋，还是唐突岁月碌碌一生，时间总是不疾不徐的流逝，无法放大，无法缩小。几乎所有的人，都曾后悔过浪费了时间，后悔没有珍惜某段时光，更会因为时间马不停蹄的流逝而彷徨失措。</p>
<p>而阅读大概是我能想到的唯一追赶时间的方式，因为在阅读的时候，文字所承载的时间的重量传递到了读者的时间里，个体在短暂的时间里变得强大，变得丰富。所以每次感觉自己在浪费时间的时候，我就会迅速拿起一本书去读，一本好书，能让我在时间上穿越千万年，空间上直抵亿万光年，于是，自己就好像在这段时间里，获得了足够强大的力量，可以扯住时间的步伐。</p>
<p>当然，在过去的1.0生活里，自己常常热爱虚耗时间，热衷于平静的生命体验，崇尚所谓无用的灵魂，惧怕自己分秒必争，惧怕劳累。那时候，读书对我来说，更像是一种陶冶情操，洞见灵魂的方式，喜欢就看下去，不喜欢就放下，作者和读者，像在围炉夜话，促膝长谈，有趣的可以剪烛畅谈，无趣的可以一拍两散，读书不过是给生命另一种体验的方式而已。</p>
<p>然而现在，我却认为读书，是追赶时间的唯一方式，因为你可以用一天时间，收获作者辛勤耕耘数月的收获，可以用一周的时间，收获作者许多年，甚至毕生的时间精华，在和作者交流的过程，时间的有效收益被成倍的放大。这也是为什么，人在读一本书的时候，会有一种奇特的充实感。</p>
<p>本来玩游戏，看电视，和读书，都是个体对外界的信息获取，然而为什么玩完一天游戏和看完一天电视后，人会有一种特别空虚的感觉，而读书却感觉特别的充实呢。</p>
<p>知乎上有相关问题的讨论，我闲时也去看过，回答的比较丰富，且用的是心理学上的分析方法。就我自己觉得，大部分游戏和大部分电视节目都不过是生活里的噪声，是有趣的噪声，大多数人会被这种喧哗的噪声吸引，于是认真倾听，并渴望从这些噪声中听出些什么，然后事实却是最终发现一无所获，这也是空虚感的来源，因为他们对于你的人生，起不到一点点的正相关作用，甚至于负相关作用都起不到，你接下来的生活，不会因为他们而兴起一丝丝波澜。</p>
<p>诚然，游戏已经被称为了第九艺术，一个好的游戏设计和制作，更趋近于一种令人享受的艺术，比如文明系列，比如全面战争系列，其中包含的控制论，人工智能，分布式等等理论也都创造了令人着迷的未来景观。然而，游戏却无法摆脱它固有的噪声本质，它的创造总是遵循着较为固定的套路，所以你所玩过的千千万万款游戏，其实都是同一款游戏，他们的终极设计原理相同，目的也相同。从生物学上讲，游戏的感官体验刺激了多巴胺、肾上腺素和后叶加压素的分泌，而在游戏结束后，这些因素的消退造成了巨大的空虚感。</p>
<p>然而读书却不一样，这里，首先排除掉网络上流行的小白文读物，因为这些读物的设计原理，其实和游戏的设计原理非常相近，也同样不过是一堆噪声而已。一本好书，其中汇聚着的是真正的信号，是真正有意义的信息，他们承载了作者人生体验中提炼出的思想之花，无论读者同意与否，都可以让读者收获有意义的信息量。</p>
<p>推荐《信号与噪声》这本书，可以花一天的时间，速读一番，更高效的提炼出作者思考所得，也对生活中无处不在的信号与噪声有一些自己的想法。</p>
<p>在抱着这种对读书新的理解下，我加快了自己的阅读速度，因为我变得异常渴望留住时间，大约半年的时间，阅读了大约五十多本书，绝大多数的书保证了80%以上的完成度。而这半年时间里，自己也获得了非同一般的体验，这是以前的阅读中没有感受到的，我感觉时间被放大，视野在不同的类型书的跳跃间变得更大，虽然生活没有那么自由，思想却挣脱牢笼飞的更远。</p>
<p>所以二零一五年开始以后，我希望自己能看更多的书，能体会更宽广的世界，也会记录下自己所看过的书，目标定在截至十二月31日，阅读完120本书，再多的书，我怕会让自己的阅读变得囫囵吞枣。</p>
<p>以上。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="写在前边的闲话：">写在前边的闲话：</h4>
<blockquote>
<p>本文纯粹是一篇闲来的随笔，又好像恢复了以前晦涩的感觉，偏意识流一些了。其实大多数时间自己在这种时候，思考的方式更纯粹一些。本周终于看完了《失控》，后小部分理解起来越来越费劲，所以常常读]]>
    </summary>
    
      <category term="life" scheme="http://yoursite.com/tags/life/"/>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何科学午睡]]></title>
    <link href="http://yoursite.com/2015/01/04/%E5%A6%82%E4%BD%95%E7%A7%91%E5%AD%A6%E5%8D%88%E7%9D%A1/"/>
    <id>http://yoursite.com/2015/01/04/如何科学午睡/</id>
    <published>2015-01-04T15:08:38.000Z</published>
    <updated>2015-01-04T15:10:51.000Z</updated>
    <content type="html"><![CDATA[<p>一直以来，对午睡这件事说不清它的对与错，网上的争论也比较多。一方人认为午睡是必须的且是最重要的养生手段，不午睡的身体伤害很大。另一部分人认为午睡不是必要的，而且可以尽可能的减少自己的午睡习惯。</p>
<p>就我现在的习惯来说，午睡是必不可少的，而且时间还不短，如果中午十二点半睡觉，大约三点前起床，那么中午就睡了两个半小时，一直觉得这个时间有些太长了，每次醒过来，还得大约半个小时时间才能从午睡的状态中清醒过来。而如果不睡午觉的话，在下午四点左右的时候，整个人的状态就会特别的差。所以我一直在试图寻找一种办法，有效地减少午睡时间，而且又能调节好身体状况。<br>所以我今天试着研究一下这个午睡的前前后后，看有没有一个提高工作效率且注重身体的方法。</p>
<p>首先考虑午睡的成因。</p>
<h2 id="餐后犯困">餐后犯困</h2>
<p>参考知乎这条问题。<a href="http://www.zhihu.com/question/27046074" target="_blank" rel="external">如何解决餐后犯困</a><br>知乎上对餐后犯困有几个不同阵营的解释，一个是餐后碱潮，一个是血液重分配，还有一个是胰岛素分泌，一个是食欲素减少，不过主要被承认的是后两个原因。<br><strong>餐后碱潮</strong></p>
<blockquote>
<p>其形成原理也确实是由于胃酸分泌，氢离子大量释放而使得相对应的HCO3-进入血液，使血液碱化。但是这种程度的碱化就能引起嗜睡了么？人体不会放任身体处于一个失衡的碱性状态，代偿机制会使得人体的呼吸变得更慢更浅，以储存更多的CO2来对抗新生成的HCO3-，这种轻度的CO2增加，对皮质下层的刺激加强，可间接的引起皮质兴奋 。也就是说，轻度代谢性碱潴留，是使人兴奋的，而不是我们这里讨论的昏昏欲睡。</p>
</blockquote>
<p><strong>血液分配</strong><br>这个在老一辈人中间传的比较多，意思就是我们在吃完饭后，血液涌进胃部帮助消化，这样供应大脑的血液就少了，所以才比较嗜睡。不过这一理论也不正确。</p>
<blockquote>
<p>人体对于缺血的应答机制最首选保全的就是“司令部”大脑，比如你在剧烈运动，血液大量进入骨骼肌的时候，供大脑使用的血供并没有减少。而仅仅只是为了消化食物就让大脑缺血运转，这是和大原则相悖的。而且最近也有实验证据显示，在用餐前后，颈动脉内的血液量是没有明显改变的。但是为了更好的消化食物，血液确实更多的进入了胃部，这些血供一部分来自骨骼肌施舍的血液，另一部分通过心脏的加班加点来实现。</p>
</blockquote>
<p><strong>副交感神经兴奋</strong>，<strong>胰岛素</strong>，<strong>食欲素</strong>，这三个是目前比较认同的原因，是说进餐之后，副交感神经兴奋，一直交感神经，而副交感神经主司修正恢复，储蓄能量等作用，所以会犯困。胰岛素是会让人进入轻度的低钾状态，感到疲劳，同时促进褪黑素产生，增加睡意。食欲素是因为吃饱后食欲素含量下降，人就会变得昏昏欲睡。</p>
<p>三种原因可见，其实午睡最重要的原因在于午餐，人们发现餐后嗜睡的情况与餐前的饥饿程度，进餐量有关，但和饮食结构的关系并不大。相信这与胰岛素的峰值曲线有很大的关系。如果养成少食多餐的进食习惯，减少过量饮食对餐后嗜睡有很大的益处。</p>
<h2 id="午睡有益？有害？">午睡有益？有害？</h2>
<p>在这个专家打架的社会，基本上没有一个权威的说法，而且不同的人确实也有不同的生活方式。比如有很多国家的人基本上不午睡，比如美国，美国人基本上中午没有午睡时间，而中国现在大城市的民营企业，很多按照西方的企业模式，中午也基本上没有什么午睡的时间。而在中国，基本上都是有午睡的空余的，小时候比较活跃，中午完全没有睡意，很不喜欢午睡，父母总是会强制要求午睡，现在长大了，也习惯午睡，而且餐后确实很容易犯困，所以午睡习惯也就养成了。</p>
<p>我综合了一下网上的信息，大致可以得出一个公共承认的结论：<strong>午睡是有益的，但是睡久了，就无益了</strong>。很明显，如果按照目前我的睡觉方式，基本上是错误的睡觉方式。</p>
<p><a href="http://www.guokr.com/article/1619/" target="_blank" rel="external">午睡有益，睡觉了白睡</a>做了解释：</p>
<blockquote>
<p>美国加州大学伯克利分校（UC Berkeley）的一个睡眠研究小组近日解释了为什么午睡对于整日的工作有着很重要的意义。</p>
<p>在这项研究中，研究小组发现，一个人无论白天黑夜，都在不断遗忘。白天，我们睁着眼的时间越长，我们的意识就越不清楚，就会开始遗忘当天发生的事情——就像电脑清理临时文件，以提高整体运行速度。黑夜，深度的“眼动睡眠”（REM）让脑部一些重要区域关闭，也会造成遗忘（遗忘当天新产生记忆的40%）——就像电脑在重启过程中强制清除内存。</p>
<p>那人们什么时候用来记忆，或者说，什么时候把短时记忆从“临时文件夹”海马中“转存”到“硬盘”前额皮质里呢？答案是：睡眠。但与造成遗忘的“眼动睡眠”不同，记忆发生在它之前的非眼动睡眠（non-REM）。</p>
<p>这样你是不是就明白多了？醒着的时候会遗忘，睡深了也会遗忘，而能用来保存记忆的，就只剩下浅浅的睡眠——午睡了。所以说，午睡的好处很多，一方面可以有效地把你的短时记忆转存为长期记忆，一方面帮助你“轻装上阵”，大大提高下午的工作效率。</p>
<p>所以午睡不宜久，如果睡时间长了，进入深度睡眠，除了上面提到的“转存”问题外，如果一个人被从深度睡眠中吵醒，他就会感觉十分疲惫，昏昏欲睡……早上被闹钟叫醒不就是这个状态吗？</p>
</blockquote>
<p>所以，很明显目前自己的睡觉方式急需要修改。</p>
<h2 id="如何午睡">如何午睡</h2>
<p>午睡可以被分为5个级别，其中20-30分钟属于普通级别，这个时间段的休息，不仅可以解除疲劳、提高敏锐度和记忆力。因此，对大脑来说，睡眠是最好休息时间，短短的20分钟足以。</p>
<p>人的睡眠可以分为浅睡眠和深睡眠，30分钟后的睡眠已经逐渐进入深度睡眠，大脑的各中枢神经的抑制过程加深，体内代谢过程逐渐减少，若在此时醒来，就会感到周身不舒服而更加困倦。这种困倦会持续半到一个小时才能消失。</p>
<p>下面进入重点，如何午睡，目前给自己定了这么几个原则：</p>
<ul>
<li>午睡时间控制在30分钟以为，时间确定在饭后一小时进行，大约是一点至一点三十之间。</li>
<li>起床后可以以喝咖啡的方式缓解困意，并且利用醒后的时间学习工作。</li>
<li>千万不要让睡眠时间超过40分钟，这样转入深度睡眠，即使醒过来之后，很头疼和起床困难。</li>
<li>睡眠时保持良好睡姿，不要将就。</li>
<li>要贯彻这个原则，形成习惯。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>一直以来，对午睡这件事说不清它的对与错，网上的争论也比较多。一方人认为午睡是必须的且是最重要的养生手段，不午睡的身体伤害很大。另一部分人认为午睡不是必要的，而且可以尽可能的减少自己的午睡习惯。</p>
<p>就我现在的习惯来说，午睡是必不可少的，而且时间还不短，如果中午十二]]>
    </summary>
    
      <category term="life" scheme="http://yoursite.com/tags/life/"/>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一周阅读笔记（2015年第一周）]]></title>
    <link href="http://yoursite.com/2015/01/04/%E4%B8%80%E5%91%A8%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0%EF%BC%882015%E5%B9%B4%E7%AC%AC%E4%B8%80%E5%91%A8%EF%BC%89/"/>
    <id>http://yoursite.com/2015/01/04/一周阅读笔记（2015年第一周）/</id>
    <published>2015-01-04T14:57:56.000Z</published>
    <updated>2015-01-04T15:03:08.000Z</updated>
    <content type="html"><![CDATA[<h1 id="《长尾理论》">《长尾理论》</h1>
<p>长尾理论是速读的内容，一天时间读完的，其实内容还是比较丰富的，对如今互联网时代的商业模式做了一次新探讨，同样是畅销书，也要比国内的那些畅销书良心多了。<br>不过总结起来讲，整本书也就是通过不同的方面阐述了长尾理论：<br><strong>在网络时代，由于成本和效率的因素，当商品储存流通展示的场地和渠道足够宽广，商品生产成本急剧下降以至于个人都可以进行生产，并且商品的销售成本急剧降低时，几乎任何以前看似需求极低的产品，只要有卖，都会有人买。这些需求和销量不高的产品所占据的共同市场份额，可以和主流产品的市场份额相比，甚至更大。</strong></p>
<h2 id="长尾理论的六个主题：">长尾理论的六个主题：</h2>
<ol>
<li>在任何市场中，利基产品都远远多于热门产品。而且，随着生产技术变得越来越廉价，越来越普及，利基产品的比重仍在以指数级的速度提高。</li>
<li>获得这些利基产品的成本正在显著下降。</li>
<li>仅仅供应更多的品种并不能改变需求，消费者必须有办法找到适合他们的特殊需求和兴趣的利基产品。</li>
<li>一旦有了空前丰富的品种和用来做出选择的过滤器，需求曲线就会扁平化。热门产品和利基产品仍然存在，但热门产品的流行度会相对下降，利基产品的流行度则会相对上升。</li>
<li>尽管没有一个利基产品能实现大的销量，但由于利基产品数不胜数，它们聚合起来，将共同形成一个可与大热门市场相抗衡的大市场。</li>
<li>当以上几点全部实现，需求曲线的天然形状将会显现出来，不受供给瓶颈、信息匮乏和有限货架空间的扭曲。而且，这种形状受少数大热门的支配程度，远不像我们想象的那样大。相反，它的分布就像人口本身一样分散。 一句话：一条长尾就是没有被经济匮乏滤去真面目的文化。</li>
</ol>
<h2 id="维基百科">维基百科</h2>
<p>长尾的一个典型代表，维基百科：</p>
<blockquote>
<p>2005年，这项非营利事业已经贡献了地球上最大的百科全书。维基百科全书有出自2万多人之手的100余万篇英文文章（远胜于《不列颠百科全书》的8万篇和《微软电子百科全书》的4 500篇），再加上75种其他语言（包括世界语和库尔德语）的内容，维基的文章总数超过了350万篇。</p>
</blockquote>
<p>维基百科代表的就是集体生产的力量。<br>用户自创式的维基模式则有四个主要优势：</p>
<ul>
<li>第一是时时更新的能力；</li>
<li>第二是篇幅的无限性和视觉辅助（比如图片和图表）；</li>
<li>第三是大量连接到其他资源的外部链接；</li>
<li>第四，维基或许还能更好地显示不同的观点和争议之处。</li>
</ul>
<p>像其他的百科一样，维基百科的前一千个条目，在其他百科里也都有，比如恺撒大帝、第二次世界大战、统计学等，这些就是热门“歌曲”。这方面，维基是在同最棒的专家们竞争——他们的权威文章文采飞扬，引经据典，读起来如沐春风，大开眼界。<br>在曲线中部，也就是第1 000~80 000个条目（《不列颠百科全书》到此为止），主题就更专项化了：恺撒的剖腹降生、冲绳岛大战、回归分析等。在这一部分，维基开始超越它的竞争对手。无限的空间意味着维基的条目倾向于更长、更全面。《不列颠百科全书》的每个条目平均篇幅是678个单词，而维基里有不下200 000个条目（相当于两部《不列颠百科全书》）大于这个平均篇幅。同时，外部链接和信息更新成了维基的一大优势，因为这让维基成了进一步研究的出发点。</p>
<p>接下来就是长尾了——第80 000~1 000 000个条目。这些就是维基独有的内容，其他百科全书甚至不屑考虑它们。这些主题更专项化：恺撒密码、士兵们吃的午餐肉罐头、斯皮尔曼等级相关系数等。这部分文章良莠不齐，有些堪称维基中的精品（热情的专家们写的），有些就是维基中的垃圾（自吹自擂、诽谤攻击、恶作剧）。许多批评家只知道盯着这些垃圾，但真正重要的一点是，你在任何地方都找不到其他像维基长尾这样的东西。从核心科学到最新的政治时事，维基的涉猎之广是其他任何百科全书都无法相比的——无论是碍于纸张篇幅上的限制还是DVD性能的限制。《不列颠百科全书》没有关于长尾现象的条目（到目前为止），而维基里不光有，而且写得非常精彩和全面，足有1 500个单词。</p>
<h2 id="Google_&amp;_Amazon">Google &amp; Amazon</h2>
<p> Google是一个最典型的“长尾”公司，其成长历程就是把广告商和出版商的“长尾”商业化的过<br>程。以占据了Google半壁江山的AdSense为例，它面向的客户是数以百万计的中小型网站和个人—对于普通的媒体和广告商而言，这个群体的价值微小得简直不值一提，但是Google通过为其提供个性化定制的广告服务，将这些数量众多的群体汇集起来，形成了非常可观的经济利润。据报道，Google的市值已超过2100亿美元，被认为是“最有价值的媒体公司”，远远超过了那些传统的老牌传媒。</p>
<p>而在图书出版业。图书出版业是“小众产品”行业，市场上流通的图书达300万种。大多数图书很难找到自己的目标读者，只有极少数的图书最终成为畅销书。由于长尾书的印数及销量少，而出版、印刷、销售及库存成本又较高，因此，长期以来出版商和书店的经营模式多以畅销书为中心。网络书店和数字出版社的发展为长尾书销售提供了无限的空间市场。在这个市场里，长尾书的库存和销售成本几乎为零，于是，长尾图书开始有价值了。销售成千上万的小众图书，哪怕一次仅卖一两本，其利润累计起来可以相当甚至超过那些动辄销售几百万册的畅销书。如亚马逊副经理史蒂夫·凯塞尔所说：“如果我有10万种书，哪怕一次仅卖掉一本，10年后加起来它们的销售就会超过最新出版的《哈利·波特》。”</p>
<h2 id="长尾的三种力量：">长尾的三种力量：</h2>
<ul>
<li>生产工具的普及。</li>
<li>通过普及传播工具降低消费成本。</li>
<li>连接供给与需求，将新产品介绍给消费者，推动需求沿曲线向右移动。</li>
</ul>
<h2 id="信号与噪声">信号与噪声</h2>
<p><strong>过滤器是必须存在的，因为如果没有过滤器，长尾有可能只是一个恼人的噪声源而已。</strong></p>
<p>“信息理论”这门学问研究的主要是一个信息采集问题：从随机性的电子噪声中分离出连贯有序的信号。这最初是无线电广播领域的课题，后来延伸到了所有类型的电子传输技术上。“信号-噪声比”这个概念现在已被广泛应用，任何需要清除干扰的传播渠道都要考虑这个比率。在传统的“短头”市场中，这不是个多么大的问题，因为货架上的所有东西都已经过事先过滤，另类的玩意儿和其他非大众化的产品都已经被清除一空。但在一个无奇不有的长尾市场中，噪声有可能成为一个大问题。事实上，如果不加约束，噪声（乱七八糟的内容或质量低劣的产品）有可能毁掉一个市场。如果噪声太多，人们就不会掏钱光顾。 过滤器的职责就是清除这些噪声。就像是小麦脱粒机或是打磨钻石的设备一样，过滤器的任务就是挑选出人们想要的精华部分，滤除人们不想要的多余部分。我可以用一个常见的认知盲点来解释一下这个过程。</p>
<blockquote>
<p>斯特金法则［Sturgeon’s Law，以科幻作家西奥多·斯特金（Theodore Sturgeon）的名字命名］认为“任何事物都有90%是无用的渣滓”。</p>
</blockquote>
<p>另外一本书，<strong>《信号与噪声》</strong>。</p>
<h2 id="被忽视的丰饶经济学">被忽视的丰饶经济学</h2>
<p>十多年前，丰饶理念的倡导者乔治·吉尔德（George Gilder）精辟地阐释了这一点： 在人类历史上，大多数人都相信经济学是一个零和游戏——稀缺性终究会压倒丰饶性。马尔萨斯就是这种观念的一个著名的拥趸：他认为人口会以几何级数增长，而农业产出只能以算术级数增长。根据马尔萨斯的观点，食物匮乏最终会扼杀经济增长。 经济学家们之所以强调稀缺性，是因为资源短缺可以衡量，到零为止。稀缺性可以给经济模型设定一个限度，令它们得出一个明确可数的结果，得出产业系统中的一个可辨识的瓶颈点。而丰饶性既不可数，也没有明显的上限。它们像空气和水一样无处不在，而且它们是不可见的——此所谓“外部性”。然而，丰饶性实际上是所有经济进步和变化的驱动力。</p>
<h2 id="黑天鹅问题">黑天鹅问题</h2>
<p>纳西姆·塔勒布（Nassim Taleb）所说的那种“黑天鹅问题”。 这种提法源自于18世纪的苏格兰哲学家休谟（David Hume）。当时，他以黑天鹅为例解释了从观察结果中得出一般性法则的复杂之处。在提出我们现在所说的“休谟归纳问题”（Hume’s Problem of Induction）时，他问了这样一个问题：一个人在观察到多少只白天鹅之后才能断言所有的天鹅都是白色，黑色天鹅并不存在？100只？1 000只？我们不知道。（黑天鹅问题并不只是一个假设性的比喻：在发现澳洲大陆之前，所有人都认为世界上只有白天鹅。直到有人首次看到了黑天鹅，这种观念才被舍弃。）</p>
<p>他是这样定义黑天鹅问题的： 一个随机性事件满足以下三个条件：<strong>重大影响、无法计算的概率、意外效应。</strong>首先，它一旦发生，就会造成与其本身不成比例的重大影响；其次，它的发生概率很小，而且根据发生前的可用信息也无法计算这个概率；第三，黑天鹅问题的恶性特征就是它的意外效应：在任意一次观察中，不会有任何有说服力的要素可以证明这个事件的发生概率正在提高。</p>
<p><strong>黑天鹅告诉我们，不要忽视那些藏在长尾中的事物，而我们也很容易高估了热门产品的市场，其实他们只是巨量的市场中的一个罕见事例罢了。</strong></p>
<p>另外一本书，<strong>《黑天鹅：如何应对不可预知的未来》</strong></p>
<h4 id="延伸阅读阅读：">延伸阅读阅读：</h4>
<p><a href="http://zh.wikipedia.org/wiki/%E9%95%BF%E5%B0%BE" target="_blank" rel="external">wiki 长尾理论</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="《长尾理论》">《长尾理论》</h1>
<p>长尾理论是速读的内容，一天时间读完的，其实内容还是比较丰富的，对如今互联网时代的商业模式做了一次新探讨，同样是畅销书，也要比国内的那些畅销书良心多了。<br>不过总结起来讲，整本书也就是通过不同的方面阐述了长尾理论：<]]>
    </summary>
    
      <category term="weekly note" scheme="http://yoursite.com/tags/weekly-note/"/>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[时间碎片化解决方案]]></title>
    <link href="http://yoursite.com/2015/01/01/%E6%97%B6%E9%97%B4%E7%A2%8E%E7%89%87%E5%8C%96%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://yoursite.com/2015/01/01/时间碎片化解决方案/</id>
    <published>2015-01-01T15:52:16.000Z</published>
    <updated>2015-01-01T16:05:11.000Z</updated>
    <content type="html"><![CDATA[<p>最近一直各种事情，所以一直是低效的学习状态。不过仔细想想，其实自己也没有在忙什么事情，其实都是这时间太零碎惹的祸，所以决定花时间，考虑考虑解决办法，于是在2015年的第一天写了这篇日志，研究和解决一下时间碎片化的问题。</p>
<h2 id="时间碎片化">时间碎片化</h2>
<p>本来时间碎片化是指的之前自己浮躁的生活状态的，生活在太多的社交媒体之中，往往时间被大量的分割，打开我的手机，看看手机中有多少APP，有多少有关社交和新闻媒体的APP就知道了。知乎，豆瓣，ZAKER，网易新闻，微博，人人，微信，QQ，邮箱等等，而内容又五花八门，无奇不有，想了解的不想了解的统统一股脑塞进你的思考区间，让你的头脑无时无刻不在运转中，却又好似一直在荒废时间。</p>
<p>同样是了解了信息，获取了知识，但为什么说这种碎片化的阅读有十分大的危害呢，常人所说的变得浮躁，虚度时光什么的，我觉得并不是主要因素。碎片化的最大危害就是时间的碎片化，碎片化之后你每天的正收益有效时间锐减，由于各个思考进程的切换，边际时间变得非常大。</p>
<p>这是知乎盐系列《开放的智力》的一段话：</p>
<blockquote>
<p>心理学家早就发现，当你从任务 A 切换到任务 B 后，执行任务 B 的绩效要明显比非任务切换条件下执行 B 的绩效差，这个差异称为「切换代价（switching cost）」。切换代价的形成原因主要有两种，一是任务 A 留下的认知惯性，也就是我之前已经习惯了任务 A 的认知情境、反应方式，这个惯性会对完成任务 B 造成干扰，二是做 B 的时候需要对 B 进行认知重构，重新回忆起 B 的相关背景和信息，这个重构也需要时间，而且可能不完整。</p>
</blockquote>
<p>其中所指的切换代价也就是我所指的边际时间。我以前关注的几个APP我还精挑细选了内容，仍然无法改变碎片化的本质，比如我的微博上关注了一些技术大牛的，技术网站官方微博，设计方向的，几位作家，文化历史方向的，PPT方向的等，ZAKER关注的科技新闻，网易关注的时政新闻，豆瓣几个兴趣小组，知乎一天阅读四次左右。但很明显的可以看出来，每个方向的内容混杂在一起推送，完全无法进行深层次的理解，而只能停留在所谓的浅阅读，基本上大部分的知识点是非常浅层次的理解能力去应对的。</p>
<p>以高逼格的知乎为例，知乎以高密度的知识点为最大卖点，每天阅读之后，感觉自己好像懂了很多，但仔细想想，所谓的懂了很多，其实只是了解了大量的无用之事，而在每一个方向上，知乎上用户的分析就会显得单薄，无法做更深入的探究，于是在多个知识点之间切换的时候，要么是简单的读完则完，止于了解，要么是匆匆翻过，纳入已知范围，要么是对单个问题再自行搜索，进行更深层次的理解和学习。当然，并非批评知乎，作为APP，除了阅读软件，其他的都注重了快节奏和高吸引点。而知乎针对我所说的那些个问题，也有许多办法，比如推专栏，比如出这个盐系列（基本上每一本盐系列我都买了），比如专门做的问题分类汇总。</p>
<p>现在回到现实中来，我所指我的时间碎片化并非指的是上边讲的那些社交媒体引起的碎片化阅读，而是自己所处的环境引起的时间被切割和高打断频率。目前这里的工作环境，因为学习只算是一个完全业余，甚至是不被理解的行为，而白天总是充斥着各种各样的事务影响，即使是有学习的条件，又因为大多是在值班室，而值班室有总是有各种人员出入，总会有各种人来打断你的思考状态，所以整体的上效率不高，这就是我指的时间碎片化。</p>
<p>不过这种碎片化不严重，而且通过调整学习方法和心理状态，就能有效的解决问题，所以今天就是来讨论时间碎片化的解决方案的。</p>
<h2 id="年龄与规划">年龄与规划</h2>
<p>昨天看了一篇文章，有段话刺激到了我，也可以说是今天绝大多数人的状态：</p>
<blockquote>
<p>很多人很大的一个错误在于，在黄金时期，没做什么积累，就顾得享受生活了，而一旦意识到积累的必要性时，却又受困于诸多琐事而欲振乏力，最终人生高度有限，并迅速走低。这就是现代程序员版的“少壮不努力，老大徒伤悲”。</p>
</blockquote>
<p>什么年龄，做什么事，这大概是给人生规划的最重要的原因。而人生大致可以分这么几个阶段。</p>
<ul>
<li>20~30岁这个阶段可以讲是黄金时期，这个阶段里，家庭负担较小，可以自由支配的时间较多算。</li>
<li>30岁之后因为孩子出生等，家庭上的时间开销增加，个人可支配时间变少，当然35岁前和35岁后大约也是个分界线，35岁前工作学习的仍然是重心，而35岁以后就要以家庭为重心了。</li>
<li>40岁之后，家庭琐事会进一步增加，典型的上有老下有小。</li>
<li>50岁之后，时间上会再次解脱，但可惜的是自己也老了，时机不在。</li>
</ul>
<p>不同的人，可能在细小之处有些差别，比如结婚早晚，比如先天性格，比如个人才能，但这条抛物线大约可以算的上是几乎所有人的人生轨迹了，大约在40岁时候，达到人生最重要的巅峰，此后基本都是以40岁的成就为基础了，不排除有大器晚成之人。</p>
<p>所以所谓人生规划，大约就是以这个人生抛物线为基础，进行的规划。大概讲起来，就是要在35岁之前，完成硬技能的学习，应该在这之前，花费大量的时间来学习硬知识，学习曲线陡峭的技能，这个时间段，不可以因为贪图享受，或者是畏惧艰难而止步，更不能三天打鱼两天晒网的细步前行。特别是在30岁以前，要进行的是一种野蛮生长的状态，尽自己的努力，让自己在能力上爬升到一个足够的高度。而这中间，尽量不要在学习上采用添水战术，也就是像我前边所说的碎片化阅读的方式，通过缓慢的学习进度，来获得提高。一次点一根火柴，一万年也烧不开一壶水的，用一万年时间去阅读那些零碎的知识点，一万年你也成不了大神。</p>
<p>而在35岁往后，时间将日趋碎片化，大块的学习时间将越来越少，记忆力和能力减退，此时就需要改成软技能的学习，通过软件能的学习，实在细节和能力上进行的自我完善的过程，也就是锦上添花的过程。这些软件能，将在后边的人生里，起到令人惊喜的作用。</p>
<p>所以，年轻是最大的资本，而时间一到，年轻就像债务一样，必须清还。所以在此之前，必须将年轻的资本最大化的使用掉。下面就写关于规划的一些细节。</p>
<h2 id="硬技能与软技能">硬技能与软技能</h2>
<p>写这篇文字的目的，旨在解决现在环境里所存在的时间碎片化的问题，并且给以后的人生规划以指导。</p>
<p>可解决的办法不多，目前的想法是，因为大约是半年的时间，可以将这半年的学习计划修改成硬知识与软知识结合学习的方法。下面是我所列的一些硬技能，软技能，部分参考了别人文章里的想法。<br>硬技能：</p>
<ul>
<li>精通一门语言</li>
<li>了解平台及基本机制，如Linux的内存管理，线程等等</li>
<li>设计模式</li>
<li>代码量</li>
<li>算法数据结构</li>
<li>掌握软件工程方法 </li>
<li>等等</li>
</ul>
<p>软技能：</p>
<ul>
<li>演讲，沟通能力（结合幻灯片制作）</li>
<li>统筹规划能力</li>
<li>写作能力及逻辑表达能力</li>
<li>等等</li>
</ul>
<p>另外诸如学习英语，学习设计算是软硬适中的能力。</p>
<p>另外还有一些语言的实用框架属于是硬技能里的软知识，因为他们的掌握速度较快，可以快速的应用的实践中，而不需要花大量的时间去分析和理解，比如Bootstrap &amp; Jquery , django , less &amp; sass &amp; stylus , wordpress 等等。</p>
<p>区分完这些技能点，这半年时间里，可以根据现实情况，学习不同的知识点。</p>
<ul>
<li>如果有足够充足的大块时间，且状态比较集中时候，可以学习语言，以及进行实践；</li>
<li>如果有大块时间，但是精神不够集中，外界影响多的情况，可以去学习这些实用框架的实用，并尝试做一些实践。</li>
<li>如果没有大块时间，但是状态相对集中的时候，可以进行英语学习，或者是设计方面的知识学习。</li>
<li>如果没有大块时间，且外部影响较多时候，可以进行软技能的学习，学英语，或者PPT &amp; Keynote制作，或者是对某产品或某APP进行分析（通过部分书籍学习）。</li>
</ul>
<h2 id="最后">最后</h2>
<p>其实最重要的，还是要调整好心理状态，在积极的心态之下，规划好自己的学习方式，就能获得最佳的收益。<br>以前在看《当幸福来敲门》的时候，史密斯带着儿子在教堂里住的时候，我被那段音乐感动到泪下，歌名叫《lord don’t move that mountain》，歌词是这样的：</p>
<blockquote>
<p>Lord don’t move that mountain </p>
<p>Give me the strength to climb it </p>
<p>Please don’t move that stumbling block </p>
<p>But lead me Lord around it </p>
<p>The way may not be easy </p>
<p>seems hard to bear </p>
<p>But i wont give up ,No no </p>
<p>Because you promised me </p>
<p>You’d meet me at the altar of prayer </p>
</blockquote>
<p>新的一年，我希望自己能够以更加饱满的热情，迎接这些人生里的挑战,战胜这些人生的绊脚石，翻越这些险峻的山峰。（某人说我结尾就像小学生国旗下的讲话，仔细一看，好像确实是的 ^.^）</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近一直各种事情，所以一直是低效的学习状态。不过仔细想想，其实自己也没有在忙什么事情，其实都是这时间太零碎惹的祸，所以决定花时间，考虑考虑解决办法，于是在2015年的第一天写了这篇日志，研究和解决一下时间碎片化的问题。</p>
<h2 id="时间碎片化">时间碎片化</h]]>
    </summary>
    
      <category term="个人规划" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E8%A7%84%E5%88%92/"/>
    
      <category term="学习方法" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2014年的我和生活]]></title>
    <link href="http://yoursite.com/2014/12/31/2014%E5%B9%B4%E7%9A%84%E6%88%91%E5%92%8C%E7%94%9F%E6%B4%BB/"/>
    <id>http://yoursite.com/2014/12/31/2014年的我和生活/</id>
    <published>2014-12-31T15:29:40.000Z</published>
    <updated>2014-12-31T15:34:01.000Z</updated>
    <content type="html"><![CDATA[<p>2014年可以说是我人生走向某种价值观人生观分界线的一年，具体的分界时间大约是八月后正式投入工作以后。<br>所以这以前的半年可以算是1.0生活，在这之后算是进化到了2.0阶段了吧。今天写1.0的生活。</p>
<h2 id="1-0生活">1.0生活</h2>
<p>年初，说起来算是在北京呆了半年，可是身份的原因，与北京这座城市完全是疏离的，有时候夜晚看着漆黑的校园，我都在怀疑我所在的地理坐标到底是不是祖国的心脏，是不是帝都，大概也只有天边那猩红的灯火才能给出正确地答案。</p>
<p>BZ的生活算的上平静，因为去年手术的原因，在这里近乎半休养状态，所以那时候的人生状态是希望自己能健健康康，快快乐乐的生活，做喜欢的事情，交喜欢的朋友。所以在性格上，还和之前的二十多年的性格一样，慵懒，喜欢享受。谈不上厌恶或者喜欢预期的未来生活状态，因为对未来没有清晰的体会，而且仍然抱有一些今天看来奇怪的幻想。</p>
<p>当然，当寒假来临之际，BZ忽然通知不给假期，派去实习的时候，着实是生出了强烈的厌恶感，那种四年来强烈地厌恶感又涌上心头。生活随意被委派，随意被命令，那个时候，想过自己的未来到底该作何打算，可是因为惧怕改变，或者惧怕因为改变而需要承担的所有后果，于是这些情绪，就好像是石子投入湖水，泛起涟漪，却引不起浪花。</p>
<p>实习当然无法避免，还好运气尚佳，遇到了个通情达理的指导员，说了几句好话之下，同意了我在过年几天回家。有时候，感觉自己在某些生活或大或小的路口时，总有一种冥冥的神灵助我完成某种期望，让我自然相信这是信仰的力量。站在石家庄火车站大厅下的我，手里拿着回家的火车票，感觉自己就像是站在鸟笼开着的门前鸟儿，因为压抑的生活让这些小小的福利成了巨大的惊喜。</p>
<p>回家七天，和朋友们滑雪，打牌，吃爸妈做的饭，包的饺子，吐槽春晚，K歌，看电影，不长的时间过得还算充实和满足。</p>
<p>七天结束返回石家庄之后，直接又背上背包北上回BZ，开始半个月时间的护校生活，所谓护校就是负责学校南门（貌似是南门）的哨位，因为身体原因，给分配了一个便衣哨，还算轻松愉快。只是没想到的是，让我今天对北京感到怀念的，这短短的半个月最浓重。迎来了 北京的第一场雪，在飘雪的北京和朋友去吃饭，去看电影，玩桌游，看北京的夜景，和战友一起扫雪，吃火锅，打刀塔，包饺子，睡到自然醒。这些愉快的日子，也许是北京十个月最大的收获了。</p>
<p>开学之后，状态调整，再加上身体恢复了加入训练，加上有所谓筹备的毕业考核，以及即将步入岗位的压力之下，心态又开始进入压抑状态，这大概源于自己一直谨小慎微，同时也源于自己贪婪的性格，凡事都想有个不错的收获，直到现在我才搞清楚一些道理，做不了的事为什么不能完全放手。</p>
<p>然而大约五月底的时候，因为感觉身体不适，去医院检查之下，竟然又发现了另外的病症，需要手术。在医生确诊前，自己靠搜索基本上也知道了是什么情况了，了解之后，确实有些打击，短短十个月时间，两个手术，忽然有种格外倒霉的感觉。后来没有太过悲伤，或许是因为已经比较坚强，很快接受了又要做手术的事实。生命力，有些事情，自己无法预见，也注定挡不了，古人说：<strong>好事多磨</strong>。我想，也许曲折蜿蜒的人生，都算是一种特别的经历，它们为以后的人生埋下伏笔，也带去别样的风景。</p>
<p>因为手术的原因，最后的强训阶段又缺席，所谓的一年强化期，却成了自己一年的养病年，或许这就是所谓的命中注定吧。住院大约两周多，手术前因为还可以正常的活动，于是一个人去看电影，去逛书店，去吃饭，在北京的夜里，感觉特别的孤独和哀伤，那个时候，对自己的未来产生了些许的疑惑和迷茫，也为后边的2.0生活买下了伏笔。</p>
<p>毕业时间比预计的晚了几天，但还好仍然是回家休整了几天，然后是来新乡支队报到，开始了我的2.0生活。</p>
<p>在这1.0生活里，我和过去二十多年的我没有太多差别，爱做梦，慵懒，小文艺，谨小慎微，想要十全十美，追求闲适。以为未来的BD生活或许是适合自己的，简单，轻松，可以做一些喜欢的事情，可以慢慢的成长，安家立业，最后收获功名。以为自己可以凭借能力，或者是如这里大多数人信奉的东西（关系），可以有着更轻松和快速地发展之路。以为小城市的闲适和简单，满足了自己的要求，也正是自己想要的平静的生活。</p>
<p>只是，我好想忽略了什么，于是没有悬念的，我开始了我的2.0生活。</p>
<h2 id="2-0的生活">2.0的生活</h2>
<p>2.0的生活开始于北京生活的结束，它不是突然的开始，我现在回想，也找不到那个变化的节点。</p>
<p>从七月初开始，一直到今天，大约六个月的时间，生活简单到单调，没有太多上层施加的压力，但是压抑的感觉仍然没有消退，这是我在来这里之前没有想到的。我以为当身份开始转变的时候，我会慢慢摆脱这种压抑的感觉，会逐渐习惯并接受。可知道这种压抑的感觉没有任何消退迹象的时候，我才终于开始认真分析问题所在。</p>
<p>所以在经历了一开始的难受和想不通，同时又陆续看到同学选择退出的消息，我开始试图去思考和分析，我是否真的适合在这里发展，同时我到底应该选择哪个方向。</p>
<p>当然，一开始，我以为这样的思考或者分析用处并不大，毕竟自以为自己的自我认知已经很清晰，什么事情已经看了很明了。但是经过了大约持续一个月的思考后，我从疑惑，到选择，到纠结，到决心。（这其中的分析过程就略过，涉及秘密信息）</p>
<p>所以，大约是在八月多九月初的时候，我已经坚定了自己的决心，也与父母的想法达成一致。自此2.0生活正式开始了。</p>
<p>利用白天的间隙时间看书，利用所有的时间学习，晚上熄灯之后打开电脑学习，并开始真正开始用一些方法去规划自己的生活，并写各种各样的话去鼓励自己，毕竟选择退出的人，每一个都是要付出莫大的勇气。开始强化自己的世界观，价值观，并开始更深的反省自己。</p>
<p>六个月，看了之前四年想要看的书，技术的，管理的，市场的，社会的，历史的，文学的，科技的，没有做分类和规划，觉得好的书就看，觉得看着不行的就放下。纠正了自己的消费观，为自己买了kindle,mac，都让我觉得付出的金钱完全值得，因为感觉自己的收益更大。</p>
<p>大约两个月前，开始写日记。写日记的习惯，从很早的初中就开始想培养，结果在数次失败之后，都放弃了。而当两个月前我在规划自己的每日生活的时候，考虑要不要每天做一个总结时，选择了写日记的方法。而且，放弃了用实体本子写日记的打算，改用evernote，用手机写。因为手机打字速度已经足够快，所以发现体验非常好，有一种开心的感觉，于是在后边的每天，坚持用手机或者电脑去些日记，总结一天的得失，反省自己的性格缺陷，寻找改正的办法，同时激励自己。</p>
<p>于是，两个月时间一天不落的坚持下来，养成了习惯。而这日记，大约是我最成功的一个决定，每日的日记，让我感受到每天的收获，同时用文字内省了自己，并对未来的生活提出了更多的期许。</p>
<p>这六个月时间过得飞快，我像一只干燥的海绵遇水迅速膨胀开来，他让我看到了自己的野心，看到了自己的性格真相，看到了未来的多少可能，看到了内化的强大力量。孤独的六个月，我做的事情，没有人催促，没有人监督，更没有人给以指导，甚至是身边没有人理解和赞同，我就像个孩子穿行在熙熙攘攘的人流中，孤独又执着。</p>
<p>我知道，这六个月，对于自己想要追求的梦想来说，太短暂。我也知道，自己的力量，仍然无力承载自己的梦想，这个吸了水的海绵仍然显得干燥。我更知道，我选择的这条路，是少有人走的路，更是一条相比眼前这条更辛苦的路。但我就是觉得，生命存在的意义本来就是寻找意义，而非活着，无论走的路多么崎岖，多么艰辛，它都是通往未来的唯一正确地路。</p>
<h2 id="最后">最后</h2>
<p>过去的一年，仍然有许多遗憾，仍然有许多未完成，仍然有太多躁动。<br>过去的一年，我经历了痛苦，经历了愉悦。<br>过去的一年，感谢时光赠予了太多难忘的宝贵的经历，让相信苦难是人终身的财富。<br>过去的一年，我渴望成长，渴望蜕变，渴望更丰富的人生。</p>
<p>这个时候，我忽然想起了高中时候听的广播剧，《让青春继续》，buynow,冰山，大学生活，毕业，我以为这些未来的事物，一瞬间已经变成了过去。此时此刻，我坐在床头，迎接新年。</p>
<p>新的一年，不悲不喜，收拾心情，让青春继续。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>2014年可以说是我人生走向某种价值观人生观分界线的一年，具体的分界时间大约是八月后正式投入工作以后。<br>所以这以前的半年可以算是1.0生活，在这之后算是进化到了2.0阶段了吧。今天写1.0的生活。</p>
<h2 id="1-0生活">1.0生活</h2>
<p>年初]]>
    </summary>
    
      <category term="年终总结" scheme="http://yoursite.com/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
      <category term="个人总结" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[杂读乱记（2014最后一周）]]></title>
    <link href="http://yoursite.com/2014/12/28/%E6%9D%82%E8%AF%BB%E4%B9%B1%E8%AE%B0%EF%BC%882014%E6%9C%80%E5%90%8E%E4%B8%80%E5%91%A8%EF%BC%89/"/>
    <id>http://yoursite.com/2014/12/28/杂读乱记（2014最后一周）/</id>
    <published>2014-12-28T05:21:39.000Z</published>
    <updated>2014-12-28T05:27:00.000Z</updated>
    <content type="html"><![CDATA[<p>这2014年的最后一周，过得有些消沉，说不上为什么，看着时间流逝，又生出一种特别焦躁的感觉，这几天，学习内容并没有落下太多，只是整理出来的不多，django的学习笔记和javascript学习笔记因为使用电脑时间的限制，没有时间去整理。</p>
<p>KK的《失控》还是没有看完，看了一半，那就先写前半部分的笔记吧。《失控》算得上是本大部头了，KK想表达的东西很多，可以说是超过了另外几本书想要表达的东西，收获也比较丰富。</p>
<p>另外本周也看了另外一本书，冯仑的《野蛮生长》，第一次看一本关于企业家的书，虽然他们的生活，和他们发迹的年代离我很遥远，但是我看到了一批充满着激情的成功者们努力追求更高目标和人生追求的群体，也增长了一分焦躁。</p>
<p>下面是正题。</p>
<blockquote>
<p>from 《Out of Control:The New Biology of Machines,Social Systems &amp; the Economic World》 by KK</p>
</blockquote>
<h2 id="1">1</h2>
<blockquote>
<p>在将生命的力量释放到我们所创造的机器中的同时，我们就丧失了对他们的控制。他们获得了野性，并因野性而获得一些意外和惊喜。之后，就是所有造物主都必须面对的两难窘境：他们将不再完全拥有自己最得意的创造物。 人造世界就像天然世界一样，很快就会具有自治力、适应力以及创造力，也随之失去我们的控制。但在我看来，这却是个最美妙的结局。</p>
</blockquote>
<p>《失控》这个书名的由来就在于此，KK认为科技的发展是具有生物性的，或者说是不可控性的，人类如果想要获得更快的更未来的科技发展，就要放开对科技的控制，任由科技拥有着像生命体一般的特质，如KK所说的，那些由科技产生的机械系统，拥有着自我复制，自我管理，部分的自我修复，进化，学习的能力。于是人类对科技失去控制，科技自我控制。</p>
<h2 id="2">2</h2>
<blockquote>
<p>这里有一个关于活系统的普遍规律：低层级的存在无法推断出高层级的复杂性。不管是计算机还是大脑，也不管是哪一种方法——数学、物理或哲学——如果不实际地运行它，就无法揭示融于个体部分的涌现模式。只有实际存在的蜂群才能揭示单个蜜蜂体内是否融合着蜂群特性。</p>
</blockquote>
<p>之前我在一篇文字里讨论了互联网这个高层级的存在，蜜蜂只能完成它简单的任务和生存目标，无法理解蜂群这个整体存在的意义。那对于人类而言，组成的群体是不是就是社会这一个更高级的存在，而因为人是思考的动物，所以形成了社会学这一研究范畴。那如今的互联网，这一涌现的存在，是不是也算是一种更高层级，人类手把手创造互联网之后，互联网现如今已经走向了失控的地方，互联网流窜的巨量信息，已经跳出了人类所能控制的范围，就像中国试图通过GFW人工隔断大陆网与外网一样不切实际，像病毒，从世界某个角落诞生并蔓延到网上之后，这个病毒几乎不再可能被彻底消除。互联网这一看似被人类控制的科技，如今似乎已经走上了失控之路。</p>
<h2 id="3">3</h2>
<blockquote>
<p>我们每将机器向集群推进一步，都是将它们向生命推进了一步。而我们的奇妙装置每离开钟控一步，都意味着它又失去了一些机器所具有的冷冰冰但却快速且最佳的效率。多数任务都会在控制与适应性中间寻找一个平衡点，因此，最有利于工作的设备将是由部分钟控装置和部分群系统组成的生控体系统的混血儿。</p>
</blockquote>
<p>如果想让科技拥有最高效的为人类工作的能力，就要让科技拥有自动化的自控能力，同时这种自控没有达到失控的地步，寻找到这个平衡点，也就获得了最佳的效率。然而不得不说，科技终将失控，科技和人类，和地球的融合将是必然的趋势。</p>
<h2 id="4">4</h2>
<blockquote>
<p>研发人员把“漫步者”造得粗壮硕大是为了抵御火星上极端的严寒风沙环境，在火星上它不会那么重。然而具有讽刺意味的是，由于“漫步者”的块头太大，这辈子无论如何去不了火星了；只有蚂蚁那么小的机器人才有希望。 用蚂蚁式移动机器人来作为解决方案是罗德尼·布鲁克斯的设想。这位麻省理工学院的教授觉得与其浪费时间制造一个无用的天才，还不如制造千万个有用的白痴。他指出，往行星上派送一个自负智力的超重恐龙恐怕是飘渺无期的，而派送一大群能做事的机械蟑螂却有可能使我们获得更多的信息。</p>
</blockquote>
<p>这也是如今的云计算，分布式的真髓，一台超级计算机的灵活性和处理能力，反而比不上用成千上万台家用计算机组成的分布式平台。其本质的思维就是前边所说的层级的事情，个体的蜜蜂组成蜂群，蜜蜂个体的智力极为低下，仅能完成简单的任务，一只蜜蜂的记忆力大约是六天，然而作为整体的蜂巢却拥有大约三个月的记忆。大量的家用计算机组成的新的物体，其计算能力将完全进入另一个境界。</p>
<h2 id="5">5</h2>
<blockquote>
<p>对布鲁克斯来说，躯体就意味着简洁、明了。没有躯体的智能和超越形式的存在都是虚妄的幽灵，给人以错觉。只有在真实世界里创造真实的物体，才能建立如意识和生命般的复杂系统。只有创造出必须以真实躯体而存活的机器人，让他们日复一日自食其力，才有可能发掘出人工智能或真正的智慧。当然，假如你意图阻止意识的涌现，那么只管把它与躯体剥离开来.</p>
</blockquote>
<p>以前我也被缸中之脑这个理论迷惑过许久，KK给的解释非常的明了，缺乏了实体感知之后，仅靠意识存在，仅就人体而言，是个体无法承受的存在。KK讲了一段实验：</p>
<blockquote>
<p>1954年，赫伯斯为此在蒙特利尔麦吉尔大学搭建了一间避光隔音的小房间。志愿者们待在这个狭小的房间内，头上戴着半透明的防护眼镜，手臂裹着纸板，手上戴着棉手套，耳朵里塞着耳机，里面播放着低沉的噪音，在床上静躺两到三天。他们起先听到持续的嗡嗡声，不久即融入一片死寂。他们只感觉到背部的钝痛，只看得到暗淡的灰色，亦或许是黑色？与生俱来氤氲心头的五色百感渐渐蒸发殆尽。慢慢地，各种意识挣脱身体的羁绊开始旋转。 有半数的受测者报告说产生了幻视，其中一些出现在第一个小时：“有一队小人，一个德军钢盔……一个卡通式人物的鲜活而完整的场景。”在1954年那个纯真的年代，加拿大科学家们报告说：“我们的早期受测者中有几个案例，声称其进入了被一个测试者称为‘醒时梦’的状态。这种描述最初让人很是莫名其妙。后来，我们的一位研究员以受测者的身份观察到了这一现象，并意识到了其特殊性及其引申。”静躺不动到第二天后，受测者们可能会报告“现实感没了，体像变了，说话困难，尘封的往事历历在目，满脑子性欲，思维迟钝，梦境复杂，以及由忧虑和惊恐引起目眩神迷。”他们没有提及“幻觉”，因为那时词汇表里还没有这个词。</p>
</blockquote>
<p>眼睛是最重要的感官，其本身就相当于半个大脑（塞满了神经细胞和生物芯片）。它以难以想象的丰富信息——半消化的数据、重大的决策、未来演变的暗示、隐匿的事物线索、跃跃一试的动感、无尽的美色——濡养着心智。心智经过一番细嚼慢咽，抖擞登场。若突然斩断其与眼睛的纽带，心智就会陷入混乱、晕眩，最终缩入自己的龟甲里。</p>
<h2 id="6">6</h2>
<blockquote>
<p>1972年，洛夫洛克提出了地球的自治表征的假说。他写道：“地球上的所有生命体集合，从巨鲸到细菌，从橡树到海藻，可以看成是一个单体生命，它能够熟练地操控地球大气层以满足自己的全部需要，而其所具备的能力和能量也远超过其组成部分。”洛夫洛克把这个观点称为盖亚，并于1972年与微生物学家林恩·玛格丽丝一起公布了这个观点，以接受科学评判。洛夫洛克说：“盖亚理论要比共同进化论更强化些，”至少在生物学家使用这个词的时候。</p>
</blockquote>
<p>盖亚理论源自人类对这种更高层级存在的探索，在基地第三部有类似的描述。</p>
<h2 id="7">7</h2>
<blockquote>
<p>戈尔巴乔夫具有基本的共同进化洞察力。阿尔塞德罗说，“他看到，减少而不是增加坦克数量会让苏联更安全。他单方面裁掉了一万辆坦克，使得美国和欧洲更难有借口保持大规模的军事预算，借此全面展开了结束冷战的进程。”</p>
</blockquote>
<p>这是囚徒困境的变种，囚徒困境的原因就在于心智上的独立性，和刘慈欣所说的猜疑链。引文里讲的是冷战结束时候的情况，冷战的存在和囚徒困境有几分相似，都是因为美国和俄国相互之间强烈地不信任和自保的危机意识，囚徒困境的最优方案是合作，最差方案是以怨抱怨。这是一个非零和的游戏，如果合作，一方受益另一方也可以受益，一方受损，另一方也可以受损。跳出冷战这个故事，在现如今的生活中，非零和的事情随处可见，我们需要做的是调整好自己的思路，不能让思想停留在彼损我盈，我损彼盈的原始的零和游戏中。</p>
<h2 id="8">8</h2>
<blockquote>
<p>苹果的微处理器是从Synertek买的，其他的芯片则来自日立、德州仪器和摩托罗拉，显示器是日立的，电源是阿斯泰克的，打印机则来自于东京电子和奎茂。同样，通过把应用软件的研发外包给微软、市场推广外包给麦金纳顾问公司、产品设计外包给青蛙设计公司、配送外包给ITT工业集团和ComputerLand，苹果公司最大程度地降低了内部的事务性服务和资本投入。</p>
</blockquote>
<p>前边讲了分布式，现在企业也走上了分布式之路，记得初中时候的课本在讲全球化趋势，其实书本中的认识仍然是浅薄的，它只看到了不同国家至今的联系日趋紧密。其实，这种全球化的表现，只是企业网络化之后的一个现象而已，公司的结构被拆散，分化，去中心化，各个模块寻找到最合适的解决方案。这才是如今信息化时代的企业的新特点：分布式，去中心化，协作，强适应性。</p>
<h2 id="另外">另外</h2>
<p>KK的观点有很多都很新，我也讲不出太多的东西，只是觉得KK的见解已经十分独到，本来从五十多条笔记里找出了十几条，但是发现有那么几条我没有写书评的必要，因为kk的解释已经足够的perfect。</p>
<p>以上。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这2014年的最后一周，过得有些消沉，说不上为什么，看着时间流逝，又生出一种特别焦躁的感觉，这几天，学习内容并没有落下太多，只是整理出来的不多，django的学习笔记和javascript学习笔记因为使用电脑时间的限制，没有时间去整理。</p>
<p>KK的《失控》还是没有]]>
    </summary>
    
      <category term="weekly note" scheme="http://yoursite.com/tags/weekly-note/"/>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[杂读乱记（2014年第三周）]]></title>
    <link href="http://yoursite.com/2014/12/20/%E6%9D%82%E8%AF%BB%E4%B9%B1%E8%AE%B0%EF%BC%882014%E5%B9%B4%E7%AC%AC%E4%B8%89%E5%91%A8%EF%BC%89/"/>
    <id>http://yoursite.com/2014/12/20/杂读乱记（2014年第三周）/</id>
    <published>2014-12-20T14:43:20.000Z</published>
    <updated>2014-12-20T14:47:21.000Z</updated>
    <content type="html"><![CDATA[<h1 id="杂读乱记（2014年第三周）">杂读乱记（2014年第三周）</h1>
<p>很奇怪，这几天看了不少的书，但是要么是纯技术性的书籍，要么是觉得没什么可以值得记录的地方，比如把英语用起来，比如关于python的91个建议，比如django book，都没有什么值得点评的地方，算不得闲书，都是偏工具为主，另外有几本闲书开了个头，发现写的一般，也是弃了。《罗辑思维》内容上还不错，以前没看过这个节目，不过这个收录的书还没看完，看完之后会写个书评。冯唐的书看来确实过瘾，且有一种佛的禅意和王朔式的痞意，冯唐自己也喜欢捻珠念佛经，研佛法，也喜欢放纵肉体任凭思想在欲望和俗世中放肆，所有有些人给他封了个“末法恶魔”。看完之后，察觉没什么收获，文字读起来畅快淋漓，但是想来自己一时间也模仿不来，在思想上学不到冯唐那么放得开，学不来那放肆的笔力。</p>
<p>所以今天选择一本过去读过的书，《科技想要什么》KK大神的书，是我最早用多看开始看书时候买的书，收获挺多，节选一些，温故一下，应该会有些新的想法。</p>
<h2 id="1">1</h2>
<blockquote>
<p>海德格尔对技术的批判理论，以德国哲学特有的思辨精神，指认出科技背后“异化”自然、异化人的力量，认为这个世界充满悖谬：科技显示着人的智慧，同时也放大着人的贪婪；科技在逼索自然呈现、展示更多的内在元素的同时，也在将人逼进一个冷峻的“座架”。</p>
</blockquote>
<p>这种技术批判理论和中国的古哲学思想有几分相似，庄子就说过：<strong>“有机械者必有机事，有机事者必有机心。“</strong>科技某种角度上，像一种强横的生命寄生在了人类的生存之上，也逐渐开始异化人的形态，特别是这大学三十年内，科技与人类正在以一种前所未有的速度加快融合，仔细想想这些年经历了些什么大学就知道了，电脑，手机，平板，家具，交通。你会发现，这些科技元素都成了人体的延伸，或者说是已经成了人的寄生物，它们依靠人类提高生存的能量，依靠人类获得进步的可能。在这些科技元素日趋包容人类的趋势之下，人也被科技催促着，走向了一条自己无法预测的未来。所以说这种批判，有存在的必要，当然也无需担心，科技从某种角度，不可逆转的必将和人类融合，无论人类是厌恶或者是抗拒，这种终极之路是一个时代或者是一群生命所无法抗衡的。</p>
<h2 id="2">2</h2>
<blockquote>
<p>欧洲活字印刷术的发明鼓励基督教徒自己解读本教的原始文本，导致基督教内部出现“抗议”这一特有的反宗教理念。</p>
</blockquote>
<p>这句话没什么大的想说的观点，只是需要注意的是KK强调了西方发明了活字印刷术，他认为是欧洲的活字印刷术的发明，使得西方的宗教发展，或者说是全人类的思想变革，起到了深远的影响。</p>
<p>这件事情比较有意思，有兴趣的话，可以在wiki上，或者是谷歌百度上看到比较详细且有意思的追踪，这里就不赘述，西方人认为活字印刷术是德国古登堡发明的，中国人认为是北宋毕昇发明的，貌似韩国思密达也有在争这个东西，感觉有些可笑，但其实这些发明的先后顺序又有什么意义呢？他只能告诉我们，科技的进步，或者是人类的各种发明，它其实是已经被预先确定了的，无论是谁或者哪个国家，它终将会诞生。明白这一点，我想才是对人类发展最有意义的。</p>
<h2 id="3">3</h2>
<blockquote>
<p>人类的延伸部分是技术元素。马歇尔·麦克卢汉以及其他一些人认为，衣服是人的延伸皮肤，轮子是脚的延伸，照相机和望远镜是眼睛的延伸。科技发明是我们的基因创造创造的肉体的伟大外延。这样，我们可以认为科技是我们的延伸躯体。</p>
</blockquote>
<p>第一条就说了这个，其实看看今天，手机是不是已经成了身体的延伸，以前只能电话的手机只是充当了可移动电话机的功能，并没有让人产生依赖性，当第一代网络，可以发短信的功能诞生之后，人类第一次开始依赖这个东西，因为人类通过这样东西，通过文字，随时随地的与外界形成了一种交际的网络。随后，随着手机网络的发展，短短十年时间，手机变得可以完成人类办公交际购物等等一切的日常行为，于是完美的对人类完成了寄生过程。现在，人们愿意花三千四千，甚至更多的六千七千去购买手机，是因为这种作为人类身体的延伸，人类愿意花更多的金钱去让他更舒服。</p>
<p>可以预测，未来手机还会继续进化下去，在人类提供的力量之下，手机将越发与身体融合，不可缺少。这里我无意去预测未来的手机形态，它有可能与生俱来的植入人体，有可能像衣服一样必备，也有可能像城市像建筑一样架设在人类的生活之上，总之，这种进化不可避免，也不会有尽头。</p>
<h2 id="4">4</h2>
<blockquote>
<p>有些科幻小说作者戏谑地推测，DNA本身也许就是这样的人造分子。毕竟，它聪明地实现了最优化，而且它的起源仍然非常神秘。也许，是身着白色实验服的超级智慧生命巧妙地设计出DNA，并将它发射到宇宙，使之数十亿年如一日地在荒芜的星球上自然播种？我们不过是这个原始基因混合体长出的众多幼苗中的一株。这种虚构的园艺园艺工程也许可以解释很多现象，但是不能消除DNA的独特性，也无损于DNA在地球上的进化路径。</p>
</blockquote>
<p>这个话其实不止在科幻小说里出现过，甚至有许多天文学家或者是生物学家都有此想法。主要是DNA，或者是生命这东西，他太神秘了，以我们目前所了解的科学水平，完全无法想象自然进化的宇宙，能产生出这样神奇的东西。当然，这样的论断也应当考虑中一个问题，那就是如果DNA是超级文明的人造分子，那么这些超级文明又是怎样产生的呢？这条创造之链必然有一个起点吧，那又是什么呢？想想这些，就有一种无限的恐惧感和渺小感。</p>
<p>《朝闻道》里，大刘让霍金问了超级文明一个问题：”<strong>宇宙的意义是什么？</strong>“超级文明无言以对。以我们目前的认知，恐怕，这个问题，将成为直到人类文明毁灭那一天，都会是终极问题吧。</p>
<h2 id="5">5</h2>
<blockquote>
<p>人类学家克罗伯警告说：“从文化角度看，各种发明是被预先确定的，这样的论述不应当被赋予神秘的含义。例如，它并不意味着，从时间起点开始活字印刷术就被预定要由德国人于1450年左右发明，同样1876年美国人发明电话也应该这样理解。</p>
<p>科技史学家兰登·温纳用下面的话总结自由意志和必然事物的偶然性：“科技似乎在按照因果循环稳步前进。这并不排斥人类的创造力、智慧、习性、运气或执念会偏向某个方向，而不是其他方向。所有这些都被卷入人类进步的洪流，成为各种进程中的片段。”</p>
</blockquote>
<p>和上边说的活字印刷术说的就是这道理，<strong>科技在按照因果循环稳步前进</strong>，以千年为尺度观察人类的发展史，可以看出来，整个文明的前进就像是一条行驶在路上的汽车，稳定，匀速，没有悬念。当我们在细化的历史脉络里，看到了许许多多的偶然构成的历史逆转，但大尺度下的历史洪流，会推动着所有人类和这些偶然，向着一个必然的结果前进。这里，我无法预测未来的文明走向，但是毫无意外的，科技必将和人类文明相融合，构建起一个更高级的文明形态。</p>
<h2 id="6">6</h2>
<blockquote>
<p>1917年，奥维尔·莱特预测：“飞机将以多种方式促进和平——具体来讲，我认为它会形成一种趋势，使战争不可能发生。”他在重复此前美国记者约翰·沃克的观点，后者1904年断言：“作为和平机器，（飞机）对世界的价值将难以计算。”这不是科技第一次发出庄严的承诺。同一年，儒勒·凡尔纳宣称：“潜水艇也许会完全终结战争，因为舰队将失去作用，随着其他战争工具持续改进，战争将不再可能。”<br>瑞典炸药发明家和诺贝尔奖的创建人阿尔弗雷德·诺贝尔坚信他的爆炸品可以制止战争：“我的炸药将比世界上1 000种发明更早地实现和平。”1893年机关枪发明人海勒姆·马克西姆被问及“这种枪难道不会使战争更加可怕吗”，他以诺贝尔式的语气回答：“不，它会消灭战争。”1912年无线电之父古列尔莫·马可尼告诉世界：“无线电时代的来临将驱走战争，因为它会让战争变得愚蠢可笑。”</p>
</blockquote>
<p>只是mark一下，纪念一下愚蠢的人类，在过去，在今天，还有未来，都会有哪些愚蠢的想法。</p>
<p>只记得一句话：<em>人类从历史中吸取到的唯一教训就是人类不可能吸取教训。</em></p>
<h2 id="7">7</h2>
<blockquote>
<p>神学家莱因霍尔德·尼布尔写于20世纪30年代的祈祷词，在十二步戒毒法参与者中很受欢迎，它写道：<br><strong>上帝，请赐我宁静，<br>去接受我不能改变的一切；<br>赐我勇气，去改变我所能改变的一切；<br>并赐我智慧去认清这两者之间的分别。</strong></p>
</blockquote>
<p>最后送上这么一个箴言，希望世间人类，有一个聪明的头脑，愿智慧成为生命理最重要的财富。</p>
<p>以上。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="杂读乱记（2014年第三周）">杂读乱记（2014年第三周）</h1>
<p>很奇怪，这几天看了不少的书，但是要么是纯技术性的书籍，要么是觉得没什么可以值得记录的地方，比如把英语用起来，比如关于python的91个建议，比如django book，都没有什么值得点]]>
    </summary>
    
      <category term="weekly note" scheme="http://yoursite.com/tags/weekly-note/"/>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Django学习笔记（一）]]></title>
    <link href="http://yoursite.com/2014/12/18/Django%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2014/12/18/Django学习笔记（一）/</id>
    <published>2014-12-18T15:34:08.000Z</published>
    <updated>2014-12-18T15:39:04.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Django笔记（1）">Django笔记（1）</h1>
<p>Django是一个可以让WEB开发愉悦并且高效的Web开发框架。可以以较小的代价构建和维护高质量的Web应用。<br>如我正在看的一本书里讲的：</p>
<blockquote>
<p>At its best, Web development is an exciting, creative act; at its worst, it can be a repetitive, frustrating nuisance. Django lets you focus on the fun stuff – the crux of your Web application – while easing the pain of the repetitive bits. In doing so, it provides high-level abstractions of common Web development patterns, shortcuts for frequent programming tasks, and clear conventions for how to solve problems. At the same time, Django tries to stay out of your way, letting you work outside the scope of the framework as needed.</p>
</blockquote>
<p>正如书中所说的，Django高度抽象了Web开发模式，可以避免频繁的编程工作，同时也提供了许多可行的方法给用户开发。</p>
<h2 id="MVC模型">MVC模型</h2>
<p>Django采用的是比较流行的MVC开发模型，虽然是菜鸟，也不需要再重复解释了。其优势<strong>松耦合</strong>，各个开发部分可以独立更改，而不影响到其他的部分，比如我去做HTML页面，只要一心关注HTML页面即可，做数据库就专心数据库，这也就是时下流行的MVC模型。</p>
<h2 id="Django的安装">Django的安装</h2>
<p>这里也不再赘述，可看官方文档，去django的<a href="http://www.djangoproject.org" target="_blank" rel="external">网站</a>去看他的文档引导安装。在这里推荐<code>virtualenv</code> 和 <code>virtualenvwrapper</code>构造独立的开发环境，这样不会让自己的电脑里边因为搞开发环境乱的一锅粥。</p>
<ul>
<li>隔离项目之间的第三方包依赖</li>
<li>为部署应用提供方便，把开发环境的虚拟环境打包到生产环境即可</li>
</ul>
<p>安装方式不难，这里只以Mac为例，安装了pip就行：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ pip install virtualenv</div><div class="line">$ pip install  virtualenvwrapper</div></pre></td></tr></table></figure>

<p>之后在shell的配置文件中加入配置，比如用的是bash的话（这个是Mac的默认shell，有很多推荐zsh），在bash里配置如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">export</span> WORKON_HOME=<span class="variable">$HOME</span>/.virtualenvs</div><div class="line"><span class="built_in">source</span> /usr/local/bin/virtualenvwrapper.sh</div></pre></td></tr></table></figure>

<p>然后这个玩意就算是安装完成了，使用方式如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mkvirtualenv venv        <span class="comment"># 创建虚拟环境</span></div><div class="line">workon venv              <span class="comment"># 激活虚拟环境</span></div><div class="line">deactivate               <span class="comment"># 关闭虚拟环境</span></div><div class="line">rmvirtualenv venv        <span class="comment"># 删除虚拟环境</span></div><div class="line">lsvirtualenv             <span class="comment"># 列出所有虚拟环境</span></div></pre></td></tr></table></figure>

<p>建立完虚拟环境之后，就可以在虚拟环境中安装django等等一些东西，随后不再使用的时候，可以删除这个虚拟环境。</p>
<h2 id="Start">Start</h2>
<p>一切就绪之后，就可以使用短短的一句，开始你的项目：</p>
<figure class="highlight pyhton"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">django-<span class="literal">admin</span>.py startproject mysite</div></pre></td></tr></table></figure>

<p>忘记从django哪一个版本开始，默认的项目中的文件有了改变，在django book里还是1.4时代的django，构建起得项目文件夹默认是这样的：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mysite/</div><div class="line">    __init__.py</div><div class="line">    manage.py</div><div class="line">    settings.py</div><div class="line">    urls.py</div></pre></td></tr></table></figure>

<p>而最新的1.7，默认是这样的：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysite/</div><div class="line">    manage.py</div><div class="line">    mysite/</div><div class="line">        __init__.py</div><div class="line">        settings.py</div><div class="line">        urls.py</div><div class="line">        wsgi.py</div></pre></td></tr></table></figure>

<p>既然是新开发，那么就尽量按照新的django开始开发，那么就看看这些都是什么。之前也都说了，MVC模式就是将项目的各个部分分开了，独立更改。<br>这里直接引用原文：</p>
<blockquote>
<ul>
<li>The outer mysite/ root directory is just a container for your project. Its name doesn’t matter to Django; you can rename it to anything you like.</li>
<li>manage.py: A command-line utility that lets you interact with this Django project in various ways. You can read all the details about manage.py in django-admin.py and manage.py.</li>
<li>The inner mysite/ directory is the actual Python package for your project. Its name is the Python package name you’ll need to use to import anything inside it (e.g. mysite.urls).</li>
<li>mysite/<strong>init</strong>.py: An empty file that tells Python that this directory should be considered a Python package. (Read more about packages in the official Python docs if you’re a Python beginner.)</li>
<li>mysite/settings.py: Settings/configuration for this Django project. Django settings will tell you all about how settings work.</li>
<li>mysite/urls.py: The URL declarations for this Django project; a “table of contents” of your Django-powered site. You can read more about URLs in URL dispatcher.</li>
<li>mysite/wsgi.py: An entry-point for WSGI-compatible web servers to serve your project. See How to deploy with WSGI for more details.</li>
</ul>
</blockquote>
<p>其中有几个解释一下</p>
<ul>
<li>最后一个，WSGI，意思是Web服务器网关接口（Python Web Server Gateway Interface，缩写为WSGI）是为Python语言定义的Web服务器和Web应用程序或框架之间的一种简单而通用的接口。自从WSGI被开发出来以后，许多其它语言中也出现了类似接口。知晓了这个意思也就是明白了他的作用，以及为什么新的django为什么要加入它了。</li>
<li>为什么在mysite的主文件夹下改成了新增一个文件夹了呢？因为django一个大项目可以包含多个django app呀，以前那样的视图显然会显得混乱啊，这样之后显然更清晰了~（我是这么认为的,不知道还有没有别的原因）。</li>
</ul>
<p>其他的都一样了，下一次，我将会将一些主要的一些东西和心得记录下来，而且尽量不去按照自己做django的步骤去记录笔记，因为简单的项目只会让我了解很小的地方。我会选择一些常用的，或者是有意义的部分做以研究，希望自己在学习过程中有所收获。<br>作为一只典型菜鸟，我希望，自己在这样不断的记录和学习中，让自己迅速茁壮的成长起来~~加油！</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Django笔记（1）">Django笔记（1）</h1>
<p>Django是一个可以让WEB开发愉悦并且高效的Web开发框架。可以以较小的代价构建和维护高质量的Web应用。<br>如我正在看的一本书里讲的：</p>
<blockquote>
<p>At its]]>
    </summary>
    
      <category term="django" scheme="http://yoursite.com/tags/django/"/>
    
      <category term="Django笔记" scheme="http://yoursite.com/categories/Django%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[你所经历的都是人生]]></title>
    <link href="http://yoursite.com/2014/12/15/%E4%BD%A0%E6%89%80%E7%BB%8F%E5%8E%86%E7%9A%84%E9%83%BD%E6%98%AF%E4%BA%BA%E7%94%9F/"/>
    <id>http://yoursite.com/2014/12/15/你所经历的都是人生/</id>
    <published>2014-12-14T16:16:17.000Z</published>
    <updated>2014-12-14T16:18:13.000Z</updated>
    <content type="html"><![CDATA[<h3 id="对不起，我只过1%的生活">对不起，我只过1%的生活</h3>
<p>总是习惯给别人灌鸡汤的人，今天一清早倒是被鸡汤感动了一把。</p>
<p>微博博主@伟大的安妮，更了一篇漫画，名字叫《对不起，我只过1%的人生》，目前的转发量已经破四十万，不知道全世界在看这个短短的漫画时有多少人忍不住掉了眼泪。</p>
<p>陈安妮，广东人，家庭普通，长相普通，大学在广州外语外贸大学，就在我的母校旁边，未毕业独闯北京开始自己的创业之旅。可以说，大多数的北漂们，都像是在黑暗中独自前行的人，都渴望抓住那黑暗里的一束光，追寻那1%的生活，所以这漫画，注定是这社会上一大波正在努力奋斗着的青年们的一碗浓浓的鸡汤。</p>
<p>忽然想起了马薇薇师姐的话。</p>
<blockquote>
<p>一将功成万骨枯，一个分子，无数个分母，成功这件事，其实成功率极低。趋利避害本来应该是动物的本能，但是人们追求这种近乎渺茫的成功，正是人区别与动物的原因。</p>
</blockquote>
<p>你几乎注定是失败的，但是你期待成功的每一天，充满着一种叫做忐忑的幸福，当你追求成功而失败依旧来临时，当你将时间浪费在理想时，当你又一次站起来行走在黑暗里时，时间它从不曾被浪费。所以，你所经历的，别人经历过的，都是人生。泰戈尔说，飞鸟从天空飞过，但没有留下痕迹。而你所经历的人生，都证明了你在这片天空飞翔过。</p>
<h3 id="少年时代">少年时代</h3>
<p>今天上午三个小时时间看完了<em>childhood</em>，也就是《少年时代》。自己最近对时间太看重，完全不舍得花上那么长的空闲时间去观赏一部电影，所以这次的三个小时可算是牙缝里抠出来的金子了。</p>
<p>《少年时代》真的很棒，导演花了真正的十二年，去拍了这部讲述十二年的故事，一个稚嫩的小男孩，长成了大男人，胡须爬上了下巴，白发染上了母亲的鬓旁，老车换成了SUV，家换了几次，朋友换了几波，生命里有人来了，又走了，一切没有花哨，没有戏剧，快乐还是那么稀缺，痛苦仍然很多，十二年里，每个人都在经历人生。</p>
<p>这让我想起了之前看的一个纪录片，《浮生一日》镜头记录了全世界每个角落的一天，白种人，黄种人，黑种人，亚洲，欧洲，非洲，整个这片大地上，每个文化各异语言各异性格各异的人，都经历着属于自己的人生，有流浪汉，有孩子，有大学生，有家庭主妇，有老年人，他们在这个地球上书写着六十亿个故事，六十亿个人生。</p>
<p>《少年时代》的后边，孩子们都成年了，男孩要去上大学，女孩要搬出去自己住，在收拾家用品的时候，母亲忽然痛哭，但是导演没有刻意让这成为煽情的一段剧情，然后母亲对着孩子吼叫出了自己的难过：这是我最糟糕的一天，那时候，我还在教你怎么骑车，转眼间，结婚，生子，离婚，考取硕士学位，送Samathna上大学，送你上大学，我感觉我的人生就完蛋了，知道接下来是什么么？God damn bury…(凭回忆写的)。</p>
<p>十二年尺度观察下，人生就像快进一般，经历了一切欢喜和痛苦，少年匆匆成长，母亲匆匆变老，时间马不停蹄而去。</p>
<h3 id="你所经历的都是人生">你所经历的都是人生</h3>
<p>跟朋友聊天，讲自己在一年多前，居然还幼稚的认为BD是一个好出路，前途，功名利禄，生活追求都有了。而现在回想起来，完全想不通自己为什么会有这样奇怪的想法。</p>
<p>但我想我终究会感谢这里的生活，因为在这样的时间里，居然完成了对自己的重塑，因为身在樊篱，压抑和寂寞让我彻彻底底的看见了自己，让我从过去浮躁的二十年中剥离出来，重新思考我所谓梦想和追求。如果没有这里的一年时光，也许我仍然过着像过去一样不急不缓的生活，追求的不轻不重的目标，书写着不咸不淡的人生。</p>
<p>所以，也许这里的生活，注定是我整个人生阶段的一篇引言，是不可缺少的一部分。从大约一年前我写下的那句话“<strong>庆幸这后悔来的尚早，所幸还有更长的未来</strong>”开始，我所经历的，都是我的人生。</p>
<p>《少年时代》的结尾，男孩新女朋友说了这么一句话：We always say that we seize the moment , but in fact moment seize us.（我们总想把握时光的每个瞬间，但其实是每个瞬间在寻找我们（我自己意译的）） 这句话送给所有在黑暗里努力前行的人，它不鸡汤，但是告诉我们，不要沮丧，不要灰心，你所经历的都是人生。</p>
<h3 id="写在后边">写在后边</h3>
<p>本来这篇文章是在《少年时代》看完之后，立即在马克飞象上建了新文章，并定义了影评的标签，不过时间推到晚上之后，还是决定不写影评，随便写些想要抒发的情绪和想法吧，毕竟二零一四即将结束，现在也算是做一个心理上的预备，同时做好展望二零一五年的准备。</p>
<p>结果赤裸裸地，又变成了一篇鸡汤文，借此勉励一下自己。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="对不起，我只过1%的生活">对不起，我只过1%的生活</h3>
<p>总是习惯给别人灌鸡汤的人，今天一清早倒是被鸡汤感动了一把。</p>
<p>微博博主@伟大的安妮，更了一篇漫画，名字叫《对不起，我只过1%的人生》，目前的转发量已经破四十万，不知道全世界在看这个短]]>
    </summary>
    
      <category term="鸡汤" scheme="http://yoursite.com/tags/%E9%B8%A1%E6%B1%A4/"/>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Keynote与APP原型设计]]></title>
    <link href="http://yoursite.com/2014/12/12/Keynote%E4%B8%8EAPP%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/"/>
    <id>http://yoursite.com/2014/12/12/Keynote与APP原型设计/</id>
    <published>2014-12-12T14:27:51.000Z</published>
    <updated>2014-12-12T14:29:56.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Keynote与原型设计">Keynote与原型设计</h2>
<p>本来已经决定放弃对幻灯片演示这类软件的研究学习了，不过因为购买了徐岑的Keynote教程之后，在印证了自己的大部分想法之后，也收获了一些新的看法。</p>
<h4 id="Keynote同样是一款演示工具">Keynote同样是一款演示工具</h4>
<p><strong>首先</strong>，仍然坚持我在上个月日志里写的一段关于PPT的评论。</p>
<blockquote>
<p>曾经一段时间，我也很喜欢研究如何去做好一个炫酷的PPT演示文稿，网上也看了别人制作的惊人的效果，一度被带的花了很多时间去研究那些PPT技巧。后来我才意识到，其实<strong>PPT他只是一个演示用的工具</strong>，其本质目的是为了清晰生动的传达演讲者的思想和想要表达的内容，如果将大量的工作时间花在了如何使PPT更加炫酷上，反而是背道而驰。</p>
<p>所以外国很多人并不喜欢用PPT做展示或者授课，反而更愿意使用PDF，因为它简单，直接，不影响思路。所以说，PPT是个良好的演示工具，但是要适可而止的使用，更加需要注意的是如何提高内容的清晰度，这涉及到排版，字体的选择方面，这也要感谢过去一段时间因为研究制作PPT，无形中提高了自己的审美水平，对排版字体的认识。</p>
<p>我简单的看了一下Mac里的keynote，显然感觉更贴近我的想法，他给的一些默认模板，在审美上非常符合要求，同时也能快捷的制作演示文稿，同时清晰的表达思路，如果如有必要，我会倾向于使用keynote去制作一个精良的演示文稿，而如果真的需要一些炫酷或者是有特殊需求的PPT展示的话，我会选择去购买模板，而之前在演界抢购的一些限免和特价的PPT大约已经能满足我的要求。</p>
</blockquote>
<p>徐岑在自己的教程里也强调了，<strong>Keynote同样也是一个演示用的工具</strong>，其功能和使用，完全是以<strong>为使用者服务为本质目的</strong>，它的使用，要综合现场情况，观众，气氛，演讲者的性格，内容等诸多因素来制作，而非是简单为了炫技而制作出来的一件东西。同时徐岑批评了很多职业的PPT制作团队的PPT作品，这一点上，我也同意徐岑的看法，很多所谓专业的PPT制作，也因为过分的使用各种炫技型的动画交互效果，造成了很多地方脱离了演讲的本质，同时许多逻辑上动画的错误引入，其实反而在实际使用中，会大打折扣。</p>
<h4 id="Keynote比PowerPoint要好用">Keynote比PowerPoint要好用</h4>
<p>在使用了几次Keynote之后，表示在使用上是完胜PowerPoint的，这不仅表现在审美上，更有功能设置，交互上的强大。</p>
<p>可以尝试在百度图片里搜索Keynote theme ，然后搜索 PPT theme，然后对比一下，可以明显的看出在审美上的差距。然后再对比一下PowerPoint的功能界面，和Keynote的功能界面，就可以明显的看出在设计上的差别。<br><img src="http://7s1s1q.com1.z0.glb.clouddn.com/Keynote%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202014-12-12%20%E4%B8%8B%E5%8D%889.56.48.png" alt="主题界面"></p>
<p><img src="http://7s1s1q.com1.z0.glb.clouddn.com/Keynote屏幕快照 2014-12-12 下午9.52.41.png" alt="主页面"><br>上面两个是Keynote的主题选择页面和主编辑页面，powerpoint相信大部分人都有，打开其主页面也会有看到类似的两个页面，比较一下，就可以明显的看出来，Keynote不仅在theme上优质很多，同时在主编辑页面上也充分简洁明了，使用起来简单快捷，十分符合一个演讲者的需求，而在功能上，两者的差别并不大，反而是这个看起来非常简洁的Keynote在功能上有很多人性化的功能在PowerPoint上反而没有，或者是刚刚在office 2013上刚刚支持，同时旧版本无法兼容。</p>
<h4 id="Keynote与原型设计-1">Keynote与原型设计</h4>
<p>这一部分是关键，本来一开始我以为Keynote只是一个演示工具，但其实<strong>Keynote也是一个非常棒的APP原型设计工具</strong>，不多说，先放一段视频：<a href="http://v.youku.com/v_show/id_XNzQ1MDk2ODI4.html" target="_blank" rel="external">material design by keynote </a></p>
<p>为什么说用Keynote做原型交互是一个很好地选择呢？引述知乎上某回答：</p>
<blockquote>
<p>苹果就自己有个专门制作原型的团队，他们流窜在各个项目组之间包揽所有的原型制作工作，包括动画和交互。他们的主要工具就是Keynote。</p>
</blockquote>
<p>显然，<strong>苹果整个系统环境内部，无论是APP的交互，还是系统的交互上，都是互相贯通的，APP的动画交互，可以说在Keynote里也有相同的交互方式</strong>，所以使用Keynote去制作APP的交互，是一个很好的选择。而上边引入的那段视频，material design其实是谷歌刚刚公布出来的它新的APP交互，我们可以看到，使用Keynote同样也可以非常完美的完成所有的APP交互的动画，不知道在谷歌的material design设计的过程中，有没有借鉴苹果的交互模式。</p>
<p>在许岑的视频中，也展示了一段锤子时钟的交互设计，用Keynote实现的，其实可以说，Keynote上的交互灵感，激发了锤子时钟的设计，使用过Smartisan OS时钟的人可以看出来，时钟的许多界面切换，都运用了Keynote中的magic move，也就是神奇移动功能。</p>
<p>那么这个用Keynote做的APP原型设计，符合了简单快捷的要求，针对产品设计，产品经理，甚至是程序猿同志都有用处。</p>
<p><a href="https://developer.apple.com/videos/wwdc/2014/" target="_blank" rel="external">WWDC 2014 Session Videos</a>里有个视频Prototyping: Fake It Till You Make It ，就是他们指导如何用Keynote做出逼真的交互原型的，后边如果有相关需求，可以做深入理解。</p>
<p>参考内容：<br><a href="http://www.zhihu.com/question/24563983" target="_blank" rel="external">知乎：如何用Keynote做高保真的APP交互</a><br><a href="https://developer.apple.com/videos/wwdc/2014/" target="_blank" rel="external">WWDC2014 HELP</a><br><a href="http://www.zhihu.com/question/26127088" target="_blank" rel="external">知乎：为什么国外有人用Keynote做交互和动画</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Keynote与原型设计">Keynote与原型设计</h2>
<p>本来已经决定放弃对幻灯片演示这类软件的研究学习了，不过因为购买了徐岑的Keynote教程之后，在印证了自己的大部分想法之后，也收获了一些新的看法。</p>
<h4 id="Keynote同样是一]]>
    </summary>
    
      <category term="designer" scheme="http://yoursite.com/tags/designer/"/>
    
      <category term="Mac Study" scheme="http://yoursite.com/categories/Mac-Study/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[常用正则表达式（备查）]]></title>
    <link href="http://yoursite.com/2014/12/07/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%88%E5%A4%87%E6%9F%A5%EF%BC%89/"/>
    <id>http://yoursite.com/2014/12/07/常用正则表达式（备查）/</id>
    <published>2014-12-07T13:00:57.000Z</published>
    <updated>2014-12-07T13:03:23.000Z</updated>
    <content type="html"><![CDATA[<p><strong>Regular Expression</strong>大陆翻译成正则表达式，不过我觉得描述成规则表达式，更贴切一些吧，不过这名字已经约定俗成了。<a href="http://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F" target="_blank" rel="external">wikipedia：Regular Expression</a></p>
<p>正则表达式使用单个字符串来描述、匹配一系列符合某个句法规则的字符串。许多程序设计语言都支持利用正则表达式进行字符串操作。</p>
<p> 完整的表格可在wikipedia上查看，这东西的使用，还是靠熟练才能好用。主要是在使用的时候，需要考虑正则表达式的优先级。</p>
<p><strong>正则表达式符号优先级：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">优先权</th>
<th style="text-align:right">符号</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">最高</td>
<td style="text-align:right">\</td>
</tr>
<tr>
<td style="text-align:left">高</td>
<td style="text-align:right">( )、(?: )、(?= )、[ ]</td>
</tr>
<tr>
<td style="text-align:left">中</td>
<td style="text-align:right">*、+、?、{n}、{n,}、{m,n}</td>
</tr>
<tr>
<td style="text-align:left">低</td>
<td style="text-align:right">^、$、中介字符</td>
</tr>
<tr>
<td style="text-align:left">最低</td>
<td style="text-align:right">l</td>
</tr>
</tbody>
</table>
<p>以下主要是针对JavaScript使用，侧重在处理前端表单验证等一些事项，列举一些常用的正则表达式，以备使用：</p>
<ul>
<li><p>匹配中文字符的正则表达式： <code>[\u4e00-\u9fa5]</code></p>
</li>
<li><p>匹配双字节字符(包括汉字在内)：<code>[^\x00-\xff]</code></p>
<blockquote>
<p>可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）</p>
</blockquote>
</li>
<li><p>匹配空白行的正则表达式：<code>\n\s*\r</code></p>
<blockquote>
<p>可以用来删除空白行</p>
</blockquote>
</li>
<li><p>匹配HTML标记的正则表达式：<code>&lt;(\S*?)[^&gt;]*&gt;.*?&lt;/\1&gt;|&lt;.*? /&gt;</code></p>
<blockquote>
<p>上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力</p>
</blockquote>
</li>
<li><p>匹配首尾空白字符的正则表达式：<code>^\s*|\s*$</code></p>
<blockquote>
<p>可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式</p>
</blockquote>
</li>
<li><p>匹配Email地址的正则表达式：<code>\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*</code></p>
</li>
</ul>
<ul>
<li>匹配网址URL的正则表达式：<code>[a-zA-z]+://[^\s]*</code></li>
</ul>
<ul>
<li><p>匹配帐号是否合法(字母开头，5-16字节，允许字母数字下划线)：<code>^[a-zA-Z][a-zA-Z0-9_]{4,15}$</code></p>
</li>
<li><p>匹配国内电话号码：<code>\d{3}-\d{8}|\d{4}-\d{7}</code></p>
<blockquote>
<p>匹配形式如 0511-4405222 或 021-87888822</p>
</blockquote>
</li>
<li><p>匹配腾讯QQ号：<code>[1-9][0-9]{4,}</code></p>
<blockquote>
<p>腾讯QQ号从10000开始</p>
</blockquote>
</li>
<li><p>匹配中国邮政编码：<code>[1-9]\d{5}(?!\d)</code></p>
<blockquote>
<p>中国邮政编码为6位数字</p>
</blockquote>
</li>
<li><p>匹配身份证：<code>\d{15}|\d{18}</code></p>
<blockquote>
<p>15位或18位</p>
</blockquote>
</li>
<li><p>匹配ip地址：<code>\d+\.\d+\.\d+\.\d+</code></p>
</li>
</ul>
<ul>
<li>匹配特定数字：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">^[<span class="number">1</span>-<span class="number">9</span>]\d*$　 　 <span class="comment">//匹配正整数</span></div><div class="line">^-[<span class="number">1</span>-<span class="number">9</span>]\d*$ 　 <span class="comment">//匹配负整数</span></div><div class="line">^-?[<span class="number">1</span>-<span class="number">9</span>]\d*$　　 <span class="comment">//匹配整数</span></div><div class="line">^[<span class="number">1</span>-<span class="number">9</span>]\d*|<span class="number">0</span>$　 <span class="comment">//匹配非负整数（正整数 + 0）</span></div><div class="line">^-[<span class="number">1</span>-<span class="number">9</span>]\d*|<span class="number">0</span>$　　 <span class="comment">//匹配非正整数（负整数 + 0）</span></div><div class="line">^[<span class="number">1</span>-<span class="number">9</span>]\d*\.\d*|<span class="number">0</span>\.\d*[<span class="number">1</span>-<span class="number">9</span>]\d*$　　 <span class="comment">//匹配正浮点数</span></div><div class="line">^-([<span class="number">1</span>-<span class="number">9</span>]\d*\.\d*|<span class="number">0</span>\.\d*[<span class="number">1</span>-<span class="number">9</span>]\d*)$　 <span class="comment">//匹配负浮点数</span></div><div class="line">^-?([<span class="number">1</span>-<span class="number">9</span>]\d*\.\d*|<span class="number">0</span>\.\d*[<span class="number">1</span>-<span class="number">9</span>]\d*|<span class="number">0</span>?\<span class="number">.0</span>+|<span class="number">0</span>)$　 <span class="comment">//匹配浮点数</span></div><div class="line">^[<span class="number">1</span>-<span class="number">9</span>]\d*\.\d*|<span class="number">0</span>\.\d*[<span class="number">1</span>-<span class="number">9</span>]\d*|<span class="number">0</span>?\<span class="number">.0</span>+|<span class="number">0</span>$　　 <span class="comment">//匹配非负浮点数（正浮点数 + 0）</span></div><div class="line">^(-([<span class="number">1</span>-<span class="number">9</span>]\d*\.\d*|<span class="number">0</span>\.\d*[<span class="number">1</span>-<span class="number">9</span>]\d*))|<span class="number">0</span>?\<span class="number">.0</span>+|<span class="number">0</span>$　　<span class="comment">//匹配非正浮点数（负浮点数 + 0）</span></div></pre></td></tr></table></figure>

<blockquote>
<p>处理大量数据时有用，具体应用时注意修正</p>
</blockquote>
<ul>
<li>匹配特定字符串：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">^[A-Za-z]+$　　<span class="comment">//匹配由26个英文字母组成的字符串</span></div><div class="line">^[A-Z]+$　　<span class="comment">//匹配由26个英文字母的大写组成的字符串</span></div><div class="line">^[a-z]+$　　<span class="comment">//匹配由26个英文字母的小写组成的字符串</span></div><div class="line">^[A-Za-z0-<span class="number">9</span>]+$　　<span class="comment">//匹配由数字和26个英文字母组成的字符串</span></div><div class="line">^\w+$　　<span class="comment">//匹配由数字、26个英文字母或者下划线组成的字符串</span></div></pre></td></tr></table></figure>

<p>推荐阅读：</p>
<ul>
<li><a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="external">正则表达式30分钟入门</a></li>
<li><a href="http://www.williamlong.info/archives/433.html" target="_blank" rel="external">常用正则表达式</a></li>
<li><a href="http://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F" target="_blank" rel="external">wikipedia 正则表达式</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>Regular Expression</strong>大陆翻译成正则表达式，不过我觉得描述成规则表达式，更贴切一些吧，不过这名字已经约定俗成了。<a href="http://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%]]>
    </summary>
    
      <category term="正则表达式" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
      <category term="Study" scheme="http://yoursite.com/categories/Study/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[杂读乱记（2014 第二周）]]></title>
    <link href="http://yoursite.com/2014/12/06/%E6%9D%82%E8%AF%BB%E4%B9%B1%E8%AE%B0%EF%BC%882014-%E7%AC%AC%E4%BA%8C%E5%91%A8%EF%BC%89/"/>
    <id>http://yoursite.com/2014/12/06/杂读乱记（2014-第二周）/</id>
    <published>2014-12-06T14:58:42.000Z</published>
    <updated>2014-12-06T15:00:02.000Z</updated>
    <content type="html"><![CDATA[<h2 id="from_《乌合之众》">from 《乌合之众》</h2>
<p>by 勒庞</p>
<h3 id="1">1</h3>
<blockquote>
<p>一个民族所热衷的重大变革，对它来说往往有着致命的危险，无论这些变革在理论上说得多么的出色。只有当这种变革能够使得民族的气质在短时间里出现变化时，才能说明这种变革是有用的。</p>
</blockquote>
<p>韩寒在还喜欢在博客上讲讲话的时候，大约是二零一一年吧（专门跑到博客上去翻了翻，没想到转眼时间三年就过去了），吵的最火的是那三篇有关政治民主的讨论，其实韩寒说的都是大实话，也都是基本正确却少有人说的话，但是却被吵得沸沸扬扬。有兴趣的可以再去看看：<a href="http://blog.sina.com.cn/s/blog_4701280b0102dz84.html" target="_blank" rel="external">说民主</a>。</p>
<p>有时候，当社会形态出现有违群体愿景的情况，或者社会制度不适应发展要求时，普罗大众此时往往寄希望于一场轰轰烈烈的社会变革，去强行的扭转社会状态，转向一个令人满意的方式。但不得不说，这样的变革往往是无谓的、徒劳的。正如勒庞所说的，只有变革能够使民族的气质发生变化，变革才是有用的。而中国的群体，上千的固有传统传承一直不曾中断改变，所以要想出现所谓的短时间的变化，基本上是天方夜谭。所以所谓的颜色革命也是基本上没有任何意义的。</p>
<p>当然，如果话题回到民族素质上去，这讨论也就没有意义了，民族的素质提高，依靠的是强大的物质基础和政府意识形态上的主导，这是需要花费更长的时间才能完成的转变，现在所能寄希望的，也只是每个政策细节上的完善和调整。<br>这东西再聊下去，就是被禁的节奏了……</p>
<h3 id="2">2</h3>
<blockquote>
<p>群体不善于推理，但是却总是急于采取行动。它们目前的组织往往会赋予它们巨大的力量。在我们亲眼目睹下所诞生的那些教条，也很快就会具有旧式教条的威力，也就是说，对于专横武断的力量来说是从来都不容讨论的。群众的神权很快就要取代国王的神权了。</p>
</blockquote>
<p>看文字很明显感觉到勒庞对群体的不信任，甚至将群体比喻成国王一样的神权。在勒庞眼里，群体的能力，和一个普通国王的能力，并没有本质的差别，甚至上，一个优秀的国王要比群体的好上许多。群体的力量强大，在于没有任何形式的其他力量可以阻止它，因为所有试图阻止群体意见的个体，往往都是凤毛麟角，没有任何力量可以逆潮流行动。</p>
<h3 id="3">3</h3>
<blockquote>
<p>然而，如果我们站在事实的角度来看，世上的任何一个伟人，任何一个宗教和帝国的建立者，任何信仰的使徒和杰出政治家，甚至于任何一伙人里的小头目，他们都是不自觉的心理学家——他们对群体的性格都有着出自本能的但却常常非常可靠的了解。正是基于这种了解，他们才能够轻而易举地建立起自己的领导地位。</p>
</blockquote>
<p>好的领导者，必然是一个好的心理学家，其最重要的能力是能够把握如何引导甚至是煽动群体的情绪。往前追溯，前至拿破仑，法西斯，后至斯大林，毛泽东。在演说家们的眼中，对于他们试图说服的群体来说，寥寥几句具有号召力的话远远比无数滔滔不绝的长篇论证更有用，尽管这些论证是认真思考的产物。</p>
<h3 id="4">4</h3>
<blockquote>
<p>在群体中，个人很容易产生这样的念头：群体是个无名氏，因此也不必承担任何责任。这样一来，责任感对个人的约束就彻底消失了。</p>
</blockquote>
<p>这也就是所谓的羊群效应，在中国叫法不责众，由于群体的存在，弱化了个人的符号特征，个人成为了集体的一种表象形式，所以个人在行动上完全失去了道德律的作用，因为他的一切行为都可以以群体的利益为借口，而无需承担任何责任。这在西方最明显的例子就是法国大革命，法国大革命在中国地教科书上被各种称赞，说这是一场人民胜利，但是真的去翻翻史料就知道了，法国大革命的整个过程，伴随着血腥和野蛮，人性在成为群体的瞬间消失殆尽，勒庞就讲述了一段有关巴士底狱狱长被杀的经历，有兴趣的可以去搜索一下，所谓正义之名的群体，却拥有着典型的犯罪群体的特征。</p>
<p>在中国最近的例子，当然就是文化大革命，那场轰轰烈烈带着毁灭特质的闹剧，在十年的时间里，荒谬和暴力，愚昧和血腥并存，个体在这一瞬间变得狂热。其原因，正好在下边这一条引文里。</p>
<h3 id="5">5</h3>
<blockquote>
<p>任何一种感情和行动在群体中都具有一定的传染性，其程度之大，足以使个人在为集体利益牺牲自己的个人利益时而显得毫不犹豫。如果不是因为属于成为群体中的一员，他肯定很少会具备这样的能力，这种倾向与他的天性极为对立。<br>大体上，作为心理群体中的个人也处在类似的被催眠的状态之中。他就像那些受到催眠的人一样，不再能够意识到自己的所作所为。在他的身上，一些能力遭到了破坏，同时另一些能力却有可能得到了极大的强化。如果在这时候，恰巧出现某种暗示对其进行影响，那么他就会因为难以抗拒的冲动而采取某种行动。</p>
</blockquote>
<p>分析文化大革命中的群体，就正好符合里勒庞所说的被催眠的状态。人们仿佛一瞬间失去了个体的意义，而不再意识到自己的所作所为，他们甚至为了这所谓集体的利益，牺牲个人利益。在今天看来荒谬愚昧的心理状态，在那个年代却成了群体性心理。这种暴虐的群体特质，甚至比西方的法国大革命更加令人发指，因为这种暴力性的目标，往往针对这自己身边的人，亲朋好友一瞬间变得完全对立。<br>所以当代的伤痕文学在反思那段历史时，都带着难以名状的悲伤和不解，十年里，就好像经历了一场噩梦，或者是像勒庞所说的，一种奇特的被催眠的状态。但是，目前对于这十年的反思仍然有些肤浅，或者是经历过的人不愿提起，没经历过的人无法体会的原因吧。</p>
<h3 id="6">6</h3>
<blockquote>
<p>时间是对社会问题最具影响力的因素之一，这在它对生物学问题上的表现如出一辙。它是唯一伟大的毁灭者，也是唯一真正的创造者。</p>
</blockquote>
<p>单纯喜欢这句话。</p>
<h3 id="7">7</h3>
<blockquote>
<p>上个世纪的哲学家们曾一度满怀热情地投身于各种对政治、社会幻想和宗教的破坏，从来不曾考虑过在这种幻想中我们的祖辈已经生活了许多世纪。这些幻想被他们一一毁灭了，随之枯竭的也就是人类希望和顺从的源泉。在幻想遭到扼杀之后，他们所面对着的自然力量是盲目的、无声无息的，这种力量对软弱和慈悲心肠一概无动于衷。不管哲学发展取得了多大进步，它至今为止仍没有能够给群众提供任何一个能让他们着迷的理想。然而对群众来说，他们必须拥有自己的幻想，无论拥有这一幻想需要他们付出多大的代价。</p>
</blockquote>
<p>前两天刚看了一本书叫《饥饿的信仰》，正是讲的当代中国信仰缺失的状态。而回溯西方哲学史，哲学家们其实也是一直陷入这种痛苦的思考中，一度为了破除所谓荒谬的信仰，却造成了信仰的崩溃最后会引发全人类的信仰危机，尼采说的：“上帝死了！”正是对所谓信仰崩塌的描述。对于普罗大众来说，信仰往往是形成人类生存的软基础，从上古人类依靠信仰建立部落，发展国家，形成社会，信仰人类赖以生存的精神食粮。</p>
<p>但是这信仰在聪明人看来毫无意义，荒诞不经。于是哲学家们试图去告诉世人这信仰的荒谬性，正如叔本华的悲观主义所说的，人类的存在毫无意义。像勒庞所说的，由于这种社会幻想和信仰的破坏，随之枯竭的是人类希望和顺从的源泉，变得更加盲目和沉默，这对人类来说，是灾难性的。虽然在随后哲学家们试图去重塑所谓意义，都收效不大，比如尼采希望通过酒神，或者是超人意志，去试图给生命以意义，结局可想而知。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="from_《乌合之众》">from 《乌合之众》</h2>
<p>by 勒庞</p>
<h3 id="1">1</h3>
<blockquote>
<p>一个民族所热衷的重大变革，对它来说往往有着致命的危险，无论这些变革在理论上说得多么的出色。只有当这种变革能够使]]>
    </summary>
    
      <category term="weekly note" scheme="http://yoursite.com/tags/weekly-note/"/>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JavaScript复习笔记(3）]]></title>
    <link href="http://yoursite.com/2014/12/03/JavaScript%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%883%EF%BC%89/"/>
    <id>http://yoursite.com/2014/12/03/JavaScript复习笔记（3）/</id>
    <published>2014-12-03T14:18:20.000Z</published>
    <updated>2014-12-06T08:33:07.000Z</updated>
    <content type="html"><![CDATA[<p>ps.笔记2已更新</p>
<h4 id="引用类型">引用类型</h4>
<ul>
<li>Object类<br>方括号的使用，优点是可以通过变量来访问属性。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> propertyName = <span class="string">"name"</span>;</div><div class="line">aler (person[propertyName]);</div></pre></td></tr></table></figure>

<ul>
<li><p>Array类<br>Array是javascript用的非常广泛的一个类。JS中数组的每一项，可以保存任何数据类型。而且可以各不相同。</p>
</li>
<li><p>数组的length不是只读的，它可以被设置改变</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> color = [<span class="string">"red"</span>,<span class="string">"blue"</span>,<span class="string">"green"</span>];</div><div class="line">color.length = <span class="number">2</span>;</div><div class="line">alert(color[<span class="number">2</span>]);        <span class="comment">//undefined 第三项被删掉</span></div><div class="line">color.length = <span class="number">4</span>;</div><div class="line">alert(color[<span class="number">3</span>]);        <span class="comment">//undefined 第四项还没有制定数据</span></div><div class="line">color[color.length] = <span class="string">"black"</span>;      <span class="comment">//此方法可以在末尾方便的添加数据</span></div></pre></td></tr></table></figure>

<ul>
<li>Array各种可调用的函数： <blockquote>
<ul>
<li>由于多框架可能会干扰到<code>instanceof</code>,所以改用<code>.isArray(value)</code></li>
<li>栈方法： <code>pop</code>,<code>push</code></li>
<li>队列方法：<code>push</code>,<code>shift</code></li>
<li>排序：<code>sort</code>,<code>reverse</code></li>
<li><code>concat</code>：基于当前数组新建数组；<code>slice</code>，创建一个基于当前数组去掉某项；<code>splice</code>：可以有多应用。<code>splice(第一项，项数，替换值)</code>因此可实现删除，插入，替换的功能</li>
<li>位置方法：<code>indexOf()</code>,<code>lastIndexOf()</code></li>
</ul>
</blockquote>
</li>
</ul>
<p>但是值得注意的事<code>sort()</code>方法调用了<code>toString()</code>，所以在比较的时候，会出现<code>10</code>在<code>5</code>前边，所以解决方法是自己编写<code>compare</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> values = {<span class="number">0</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">15</span>};</div><div class="line"><span class="comment">//values.sort();</span></div><div class="line"><span class="comment">//alert(values):      结果：0,1,10,15,5</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">compare</span><span class="params">(value1,value2)</span></span>{</div><div class="line">    <span class="keyword">if</span>(value1 &lt; value2){</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    }<span class="keyword">else</span> <span class="keyword">if</span> (value1&gt;value2){</div><div class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line">    }<span class="keyword">else</span>{</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    }</div><div class="line">}</div><div class="line">values.sort(compare);</div><div class="line">alert(values);      <span class="comment">//15,10,5,1,0</span></div><div class="line">&lt;!--同时其实可以简化方法--&gt;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">compare</span><span class="params">(value1,value2)</span></span>{</div><div class="line">    <span class="keyword">return</span> value2 - value1;</div><div class="line">}</div></pre></td></tr></table></figure>

<ul>
<li><p>五个迭代方法:</p>
<blockquote>
<ul>
<li><code>every</code>:对每一项迭代，全部为true,才返回true</li>
<li><code>filter</code>：过滤，返回那些true的</li>
<li><code>forEach</code>:对每一项给定函数，没有返回值</li>
<li><code>map</code>：对每一项给定函数，全部返回值</li>
<li><code>some</code>:每一项给定参数，只要有一个true，则返回true</li>
</ul>
</blockquote>
</li>
<li><p>归并方法<code>reduce</code>，四个参数，前一个值，当前值，项的索引，数组对象</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> values = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</div><div class="line"><span class="keyword">var</span> sum = values.reduce(<span class="function"><span class="keyword">function</span><span class="params">(prev, cur, index, array)</span></span>{</div><div class="line">    <span class="keyword">return</span> prev + cur;</div><div class="line">});</div><div class="line">alert(sum);     <span class="comment">//15</span></div></pre></td></tr></table></figure>

<ul>
<li><strong>Date类型</strong></li>
<li><p><code>Date.now()</code>取得当前时间，用于简化代码工作，也可以使用一元加操作，<code>+new Date()</code></p>
</li>
<li><p><strong>RegExp类型</strong></p>
</li>
<li><p>结合正则表达式学习理解这部分<br>pattern:<code>g</code>,全局；<code>i</code>：不区分大小写；<code>m</code>：多行模式；</p>
</li>
<li><p><strong>Function类型</strong></p>
</li>
<li><p>没有重载，后边的函数覆盖前边的函数</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>ps.笔记2已更新</p>
<h4 id="引用类型">引用类型</h4>
<ul>
<li>Object类<br>方括号的使用，优点是可以通过变量来访问属性。</li>
</ul>
<figure class="highlight javascript"><table><]]>
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="JavaScript复习笔记" scheme="http://yoursite.com/categories/JavaScript%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
